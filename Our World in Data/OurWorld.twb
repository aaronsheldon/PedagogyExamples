<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='Viridis' type='ordered-sequential'>
      <color>#fde725</color>
      <color>#fbe723</color>
      <color>#f8e621</color>
      <color>#f6e620</color>
      <color>#f4e61e</color>
      <color>#f1e51d</color>
      <color>#efe51c</color>
      <color>#ece51b</color>
      <color>#eae51a</color>
      <color>#e7e419</color>
      <color>#e5e419</color>
      <color>#e2e418</color>
      <color>#dfe318</color>
      <color>#dde318</color>
      <color>#dae319</color>
      <color>#d8e219</color>
      <color>#d5e21a</color>
      <color>#d2e21b</color>
      <color>#d0e11c</color>
      <color>#cde11d</color>
      <color>#cae11f</color>
      <color>#c8e020</color>
      <color>#c5e021</color>
      <color>#c2df23</color>
      <color>#c0df25</color>
      <color>#bddf26</color>
      <color>#bade28</color>
      <color>#b8de29</color>
      <color>#b5de2b</color>
      <color>#b2dd2d</color>
      <color>#b0dd2f</color>
      <color>#addc30</color>
      <color>#aadc32</color>
      <color>#a8db34</color>
      <color>#a5db36</color>
      <color>#a2da37</color>
      <color>#a0da39</color>
      <color>#9dd93b</color>
      <color>#9bd93c</color>
      <color>#98d83e</color>
      <color>#95d840</color>
      <color>#93d741</color>
      <color>#90d743</color>
      <color>#8ed645</color>
      <color>#8bd646</color>
      <color>#89d548</color>
      <color>#86d549</color>
      <color>#84d44b</color>
      <color>#81d34d</color>
      <color>#7fd34e</color>
      <color>#7cd250</color>
      <color>#7ad151</color>
      <color>#77d153</color>
      <color>#75d054</color>
      <color>#73d056</color>
      <color>#70cf57</color>
      <color>#6ece58</color>
      <color>#6ccd5a</color>
      <color>#69cd5b</color>
      <color>#67cc5c</color>
      <color>#65cb5e</color>
      <color>#63cb5f</color>
      <color>#60ca60</color>
      <color>#5ec962</color>
      <color>#5cc863</color>
      <color>#5ac864</color>
      <color>#58c765</color>
      <color>#56c667</color>
      <color>#54c568</color>
      <color>#52c569</color>
      <color>#50c46a</color>
      <color>#4ec36b</color>
      <color>#4cc26c</color>
      <color>#4ac16d</color>
      <color>#48c16e</color>
      <color>#46c06f</color>
      <color>#44bf70</color>
      <color>#42be71</color>
      <color>#40bd72</color>
      <color>#3fbc73</color>
      <color>#3dbc74</color>
      <color>#3bbb75</color>
      <color>#3aba76</color>
      <color>#38b977</color>
      <color>#37b878</color>
      <color>#35b779</color>
      <color>#34b679</color>
      <color>#32b67a</color>
      <color>#31b57b</color>
      <color>#2fb47c</color>
      <color>#2eb37c</color>
      <color>#2db27d</color>
      <color>#2cb17e</color>
      <color>#2ab07f</color>
      <color>#29af7f</color>
      <color>#28ae80</color>
      <color>#27ad81</color>
      <color>#26ad81</color>
      <color>#25ac82</color>
      <color>#25ab82</color>
      <color>#24aa83</color>
      <color>#23a983</color>
      <color>#22a884</color>
      <color>#22a785</color>
      <color>#21a685</color>
      <color>#21a585</color>
      <color>#20a486</color>
      <color>#20a386</color>
      <color>#1fa287</color>
      <color>#1fa187</color>
      <color>#1fa188</color>
      <color>#1fa088</color>
      <color>#1f9f88</color>
      <color>#1f9e89</color>
      <color>#1e9d89</color>
      <color>#1e9c89</color>
      <color>#1e9b8a</color>
      <color>#1f9a8a</color>
      <color>#1f998a</color>
      <color>#1f988b</color>
      <color>#1f978b</color>
      <color>#1f968b</color>
      <color>#1f958b</color>
      <color>#1f948c</color>
      <color>#20938c</color>
      <color>#20928c</color>
      <color>#20928c</color>
      <color>#21918c</color>
      <color>#21908d</color>
      <color>#218f8d</color>
      <color>#218e8d</color>
      <color>#228d8d</color>
      <color>#228c8d</color>
      <color>#228b8d</color>
      <color>#238a8d</color>
      <color>#23898e</color>
      <color>#23888e</color>
      <color>#24878e</color>
      <color>#24868e</color>
      <color>#25858e</color>
      <color>#25848e</color>
      <color>#25838e</color>
      <color>#26828e</color>
      <color>#26828e</color>
      <color>#26818e</color>
      <color>#27808e</color>
      <color>#277f8e</color>
      <color>#277e8e</color>
      <color>#287d8e</color>
      <color>#287c8e</color>
      <color>#297b8e</color>
      <color>#297a8e</color>
      <color>#29798e</color>
      <color>#2a788e</color>
      <color>#2a778e</color>
      <color>#2a768e</color>
      <color>#2b758e</color>
      <color>#2b748e</color>
      <color>#2c738e</color>
      <color>#2c728e</color>
      <color>#2c718e</color>
      <color>#2d718e</color>
      <color>#2d708e</color>
      <color>#2e6f8e</color>
      <color>#2e6e8e</color>
      <color>#2e6d8e</color>
      <color>#2f6c8e</color>
      <color>#2f6b8e</color>
      <color>#306a8e</color>
      <color>#30698e</color>
      <color>#31688e</color>
      <color>#31678e</color>
      <color>#31668e</color>
      <color>#32658e</color>
      <color>#32648e</color>
      <color>#33638d</color>
      <color>#33628d</color>
      <color>#34618d</color>
      <color>#34608d</color>
      <color>#355f8d</color>
      <color>#355e8d</color>
      <color>#365d8d</color>
      <color>#365c8d</color>
      <color>#375b8d</color>
      <color>#375a8c</color>
      <color>#38598c</color>
      <color>#38588c</color>
      <color>#39568c</color>
      <color>#39558c</color>
      <color>#3a548c</color>
      <color>#3a538b</color>
      <color>#3b528b</color>
      <color>#3b518b</color>
      <color>#3c508b</color>
      <color>#3c4f8a</color>
      <color>#3d4e8a</color>
      <color>#3d4d8a</color>
      <color>#3e4c8a</color>
      <color>#3e4a89</color>
      <color>#3e4989</color>
      <color>#3f4889</color>
      <color>#3f4788</color>
      <color>#404688</color>
      <color>#404588</color>
      <color>#414487</color>
      <color>#414287</color>
      <color>#424186</color>
      <color>#424086</color>
      <color>#423f85</color>
      <color>#433e85</color>
      <color>#433d84</color>
      <color>#443b84</color>
      <color>#443a83</color>
      <color>#443983</color>
      <color>#453882</color>
      <color>#453781</color>
      <color>#453581</color>
      <color>#463480</color>
      <color>#46337f</color>
      <color>#46327e</color>
      <color>#46307e</color>
      <color>#472f7d</color>
      <color>#472e7c</color>
      <color>#472d7b</color>
      <color>#472c7a</color>
      <color>#472a7a</color>
      <color>#482979</color>
      <color>#482878</color>
      <color>#482677</color>
      <color>#482576</color>
      <color>#482475</color>
      <color>#482374</color>
      <color>#482173</color>
      <color>#482071</color>
      <color>#481f70</color>
      <color>#481d6f</color>
      <color>#481c6e</color>
      <color>#481b6d</color>
      <color>#481a6c</color>
      <color>#48186a</color>
      <color>#481769</color>
      <color>#481668</color>
      <color>#481467</color>
      <color>#471365</color>
      <color>#471164</color>
      <color>#471063</color>
      <color>#470e61</color>
      <color>#470d60</color>
      <color>#460b5e</color>
      <color>#460a5d</color>
      <color>#46085c</color>
      <color>#46075a</color>
      <color>#450559</color>
      <color>#450457</color>
      <color>#440256</color>
      <color>#440154</color>
    </color-palette>
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-duration' value='0.5' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Dial Axis' datatype='real' name='[Apply Logarithm (copy 2)]' param-domain-type='list' role='measure' type='quantitative' value='0.'>
        <calculation class='tableau' formula='0.' />
        <members>
          <member value='0.' />
        </members>
      </column>
      <column caption='Total Healthcare Target' datatype='real' default-format='p0%' name='[Apply Logarithm (copy 3)]' param-domain-type='range' role='measure' type='quantitative' value='0.099999999999999992'>
        <calculation class='tableau' formula='0.099999999999999992' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Dial Gap' datatype='real' default-format='p0%' name='[Apply Logarithm (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.24999999999999994'>
        <calculation class='tableau' formula='0.24999999999999994' />
        <range granularity='0.01' max='0.9' min='0.1' />
      </column>
      <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
        <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
      </column>
      <column caption='Legend Width' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
        <members>
          <member value='1.' />
        </members>
      </column>
      <column caption='Public Healthcare Target' datatype='real' default-format='p0%' name='[Target Total Healthcare (copy)_2555792852575272960]' param-domain-type='range' role='measure' type='quantitative' value='0.90000000000000002'>
        <calculation class='tableau' formula='0.90000000000000002' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='population-and-demography+' inline='true' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='population-and-demography' name='textscan.11gotxm15d162216sx4911u6zke3'>
            <connection class='textscan' directory='C:/Users/asheldon/OneDrive - Bow Valley College/Documents/DATA3411/Examples/Our World in Data' filename='population-and-demography.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='child-mortality-igme.csv' table='[child-mortality-igme#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='population-and-demography.csv' table='[population-and-demography#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country name' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='integer' name='Population' ordinal='2' />
              <column datatype='real' name='Population of children under the age of 1' ordinal='3' />
              <column datatype='integer' name='Population of children under the age of 5' ordinal='4' />
              <column datatype='integer' name='Population of children under the age of 15' ordinal='5' />
              <column datatype='integer' name='Population under the age of 25' ordinal='6' />
              <column datatype='integer' name='Population aged 15 to 64 years' ordinal='7' />
              <column datatype='integer' name='Population older than 15 years' ordinal='8' />
              <column datatype='integer' name='Population older than 18 years' ordinal='9' />
              <column datatype='real' name='Population at age 1' ordinal='10' />
              <column datatype='integer' name='Population aged 1 to 4 years' ordinal='11' />
              <column datatype='integer' name='Population aged 5 to 9 years' ordinal='12' />
              <column datatype='integer' name='Population aged 10 to 14 years' ordinal='13' />
              <column datatype='integer' name='Population aged 15 to 19 years' ordinal='14' />
              <column datatype='integer' name='Population aged 20 to 29 years' ordinal='15' />
              <column datatype='integer' name='Population aged 30 to 39 years' ordinal='16' />
              <column datatype='integer' name='Population aged 40 to 49 years' ordinal='17' />
              <column datatype='integer' name='Population aged 50 to 59 years' ordinal='18' />
              <column datatype='integer' name='Population aged 60 to 69 years' ordinal='19' />
              <column datatype='integer' name='Population aged 70 to 79 years' ordinal='20' />
              <column datatype='integer' name='Population aged 80 to 89 years' ordinal='21' />
              <column datatype='integer' name='Population aged 90 to 99 years' ordinal='22' />
              <column datatype='real' name='Population older than 100 years' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='child-mortality-igme.csv' table='[child-mortality-igme#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='life-expectancy.csv' table='[life-expectancy#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Period life expectancy at birth - Sex: all - Age: 0' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='maternal-mortality.csv' table='[maternal-mortality#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='national-gdp-penn-world-table.csv' table='[national-gdp-penn-world-table#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='integer' name='GDP (output, multiple price benchmarks)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='primary-energy-cons.csv' table='[primary-energy-cons#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Primary energy consumption (TWh)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='share-of-public-expenditure-on-healthcare-by-country.csv' table='[share-of-public-expenditure-on-healthcare-by-country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Domestic general government health expenditure (% of current health expenditure)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='total-ghg-emissions.csv' table='[total-ghg-emissions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Annual greenhouse gas emissions in CO₂ equivalents' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='total-healthcare-expenditure-gdp.csv' table='[total-healthcare-expenditure-gdp#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Annual greenhouse gas emissions in CO₂ equivalents]' value='[total-ghg-emissions.csv].[Annual greenhouse gas emissions in CO₂ equivalents]' />
          <map key='[Code (child-mortality-igme.csv)]' value='[child-mortality-igme.csv].[Code]' />
          <map key='[Code (life-expectancy.csv)]' value='[life-expectancy.csv].[Code]' />
          <map key='[Code (maternal-mortality.csv)]' value='[maternal-mortality.csv].[Code]' />
          <map key='[Code (primary-energy-cons.csv)]' value='[primary-energy-cons.csv].[Code]' />
          <map key='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv].[Code]' />
          <map key='[Code (total-ghg-emissions.csv)]' value='[total-ghg-emissions.csv].[Code]' />
          <map key='[Code (total-healthcare-expenditure-gdp.csv)]' value='[total-healthcare-expenditure-gdp.csv].[Code]' />
          <map key='[Code]' value='[national-gdp-penn-world-table.csv].[Code]' />
          <map key='[Country name]' value='[population-and-demography.csv].[Country name]' />
          <map key='[Domestic general government health expenditure (% of current health expenditure)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv].[Domestic general government health expenditure (% of current health expenditure)]' />
          <map key='[Entity (child-mortality-igme.csv)]' value='[child-mortality-igme.csv].[Entity]' />
          <map key='[Entity (life-expectancy.csv)]' value='[life-expectancy.csv].[Entity]' />
          <map key='[Entity (maternal-mortality.csv)]' value='[maternal-mortality.csv].[Entity]' />
          <map key='[Entity (primary-energy-cons.csv)]' value='[primary-energy-cons.csv].[Entity]' />
          <map key='[Entity (share-of-public-expenditure-on-healthcare-by-country.csv)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv].[Entity]' />
          <map key='[Entity (total-ghg-emissions.csv)]' value='[total-ghg-emissions.csv].[Entity]' />
          <map key='[Entity (total-healthcare-expenditure-gdp.csv)]' value='[total-healthcare-expenditure-gdp.csv].[Entity]' />
          <map key='[Entity]' value='[national-gdp-penn-world-table.csv].[Entity]' />
          <map key='[GDP (output, multiple price benchmarks)]' value='[national-gdp-penn-world-table.csv].[GDP (output, multiple price benchmarks)]' />
          <map key='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' value='[total-healthcare-expenditure-gdp.csv].[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' />
          <map key='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' value='[maternal-mortality.csv].[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' />
          <map key='[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' value='[child-mortality-igme.csv].[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' />
          <map key='[Period life expectancy at birth - Sex: all - Age: 0]' value='[life-expectancy.csv].[Period life expectancy at birth - Sex: all - Age: 0]' />
          <map key='[Population aged 1 to 4 years]' value='[population-and-demography.csv].[Population aged 1 to 4 years]' />
          <map key='[Population aged 10 to 14 years]' value='[population-and-demography.csv].[Population aged 10 to 14 years]' />
          <map key='[Population aged 15 to 19 years]' value='[population-and-demography.csv].[Population aged 15 to 19 years]' />
          <map key='[Population aged 15 to 64 years]' value='[population-and-demography.csv].[Population aged 15 to 64 years]' />
          <map key='[Population aged 20 to 29 years]' value='[population-and-demography.csv].[Population aged 20 to 29 years]' />
          <map key='[Population aged 30 to 39 years]' value='[population-and-demography.csv].[Population aged 30 to 39 years]' />
          <map key='[Population aged 40 to 49 years]' value='[population-and-demography.csv].[Population aged 40 to 49 years]' />
          <map key='[Population aged 5 to 9 years]' value='[population-and-demography.csv].[Population aged 5 to 9 years]' />
          <map key='[Population aged 50 to 59 years]' value='[population-and-demography.csv].[Population aged 50 to 59 years]' />
          <map key='[Population aged 60 to 69 years]' value='[population-and-demography.csv].[Population aged 60 to 69 years]' />
          <map key='[Population aged 70 to 79 years]' value='[population-and-demography.csv].[Population aged 70 to 79 years]' />
          <map key='[Population aged 80 to 89 years]' value='[population-and-demography.csv].[Population aged 80 to 89 years]' />
          <map key='[Population aged 90 to 99 years]' value='[population-and-demography.csv].[Population aged 90 to 99 years]' />
          <map key='[Population at age 1]' value='[population-and-demography.csv].[Population at age 1]' />
          <map key='[Population of children under the age of 15]' value='[population-and-demography.csv].[Population of children under the age of 15]' />
          <map key='[Population of children under the age of 1]' value='[population-and-demography.csv].[Population of children under the age of 1]' />
          <map key='[Population of children under the age of 5]' value='[population-and-demography.csv].[Population of children under the age of 5]' />
          <map key='[Population older than 100 years]' value='[population-and-demography.csv].[Population older than 100 years]' />
          <map key='[Population older than 15 years]' value='[population-and-demography.csv].[Population older than 15 years]' />
          <map key='[Population older than 18 years]' value='[population-and-demography.csv].[Population older than 18 years]' />
          <map key='[Population under the age of 25]' value='[population-and-demography.csv].[Population under the age of 25]' />
          <map key='[Population]' value='[population-and-demography.csv].[Population]' />
          <map key='[Primary energy consumption (TWh)]' value='[primary-energy-cons.csv].[Primary energy consumption (TWh)]' />
          <map key='[Year (child-mortality-igme.csv)]' value='[child-mortality-igme.csv].[Year]' />
          <map key='[Year (life-expectancy.csv)]' value='[life-expectancy.csv].[Year]' />
          <map key='[Year (maternal-mortality.csv)]' value='[maternal-mortality.csv].[Year]' />
          <map key='[Year (national-gdp-penn-world-table.csv)]' value='[national-gdp-penn-world-table.csv].[Year]' />
          <map key='[Year (primary-energy-cons.csv)]' value='[primary-energy-cons.csv].[Year]' />
          <map key='[Year (share-of-public-expenditure-on-healthcare-by-country.csv)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv].[Year]' />
          <map key='[Year (total-ghg-emissions.csv)]' value='[total-ghg-emissions.csv].[Year]' />
          <map key='[Year (total-healthcare-expenditure-gdp.csv)]' value='[total-healthcare-expenditure-gdp.csv].[Year]' />
          <map key='[Year]' value='[population-and-demography.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[child-mortality-igme.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[maternal-mortality.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[national-gdp-penn-world-table.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[primary-energy-cons.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[total-ghg-emissions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[total-healthcare-expenditure-gdp.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country name]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Country name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population of children under the age of 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population of children under the age of 1]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population of children under the age of 1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population of children under the age of 5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population of children under the age of 5]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population of children under the age of 5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population of children under the age of 15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population of children under the age of 15]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population of children under the age of 15</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population under the age of 25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population under the age of 25]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population under the age of 25</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 15 to 64 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 15 to 64 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 15 to 64 years</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population older than 15 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population older than 15 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population older than 15 years</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population older than 18 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population older than 18 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population older than 18 years</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population at age 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population at age 1]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population at age 1</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 1 to 4 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 1 to 4 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 1 to 4 years</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 5 to 9 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 5 to 9 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 5 to 9 years</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 10 to 14 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 10 to 14 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 10 to 14 years</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 15 to 19 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 15 to 19 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 15 to 19 years</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 20 to 29 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 20 to 29 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 20 to 29 years</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 30 to 39 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 30 to 39 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 30 to 39 years</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 40 to 49 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 40 to 49 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 40 to 49 years</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 50 to 59 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 50 to 59 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 50 to 59 years</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 60 to 69 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 60 to 69 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 60 to 69 years</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 70 to 79 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 70 to 79 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 70 to 79 years</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 80 to 89 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 80 to 89 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 80 to 89 years</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population aged 90 to 99 years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population aged 90 to 99 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population aged 90 to 99 years</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population older than 100 years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population older than 100 years]</local-name>
            <parent-name>[population-and-demography.csv]</parent-name>
            <remote-alias>Population older than 100 years</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (child-mortality-igme.csv)]</local-name>
            <parent-name>[child-mortality-igme.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (child-mortality-igme.csv)]</local-name>
            <parent-name>[child-mortality-igme.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (child-mortality-igme.csv)]</local-name>
            <parent-name>[child-mortality-igme.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]</local-name>
            <parent-name>[child-mortality-igme.csv]</parent-name>
            <remote-alias>Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (life-expectancy.csv)]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (life-expectancy.csv)]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (life-expectancy.csv)]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Period life expectancy at birth - Sex: all - Age: 0</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Period life expectancy at birth - Sex: all - Age: 0]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Period life expectancy at birth - Sex: all - Age: 0</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (maternal-mortality.csv)]</local-name>
            <parent-name>[maternal-mortality.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (maternal-mortality.csv)]</local-name>
            <parent-name>[maternal-mortality.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (maternal-mortality.csv)]</local-name>
            <parent-name>[maternal-mortality.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]</local-name>
            <parent-name>[maternal-mortality.csv]</parent-name>
            <remote-alias>Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[national-gdp-penn-world-table.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[national-gdp-penn-world-table.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (national-gdp-penn-world-table.csv)]</local-name>
            <parent-name>[national-gdp-penn-world-table.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (output, multiple price benchmarks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (output, multiple price benchmarks)]</local-name>
            <parent-name>[national-gdp-penn-world-table.csv]</parent-name>
            <remote-alias>GDP (output, multiple price benchmarks)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (primary-energy-cons.csv)]</local-name>
            <parent-name>[primary-energy-cons.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (primary-energy-cons.csv)]</local-name>
            <parent-name>[primary-energy-cons.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (primary-energy-cons.csv)]</local-name>
            <parent-name>[primary-energy-cons.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary energy consumption (TWh)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary energy consumption (TWh)]</local-name>
            <parent-name>[primary-energy-cons.csv]</parent-name>
            <remote-alias>Primary energy consumption (TWh)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (share-of-public-expenditure-on-healthcare-by-country.csv)]</local-name>
            <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]</local-name>
            <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (share-of-public-expenditure-on-healthcare-by-country.csv)]</local-name>
            <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic general government health expenditure (% of current health expenditure)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic general government health expenditure (% of current health expenditure)]</local-name>
            <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv]</parent-name>
            <remote-alias>Domestic general government health expenditure (% of current health expenditure)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (total-ghg-emissions.csv)]</local-name>
            <parent-name>[total-ghg-emissions.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (total-ghg-emissions.csv)]</local-name>
            <parent-name>[total-ghg-emissions.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (total-ghg-emissions.csv)]</local-name>
            <parent-name>[total-ghg-emissions.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual greenhouse gas emissions in CO₂ equivalents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual greenhouse gas emissions in CO₂ equivalents]</local-name>
            <parent-name>[total-ghg-emissions.csv]</parent-name>
            <remote-alias>Annual greenhouse gas emissions in CO₂ equivalents</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (total-healthcare-expenditure-gdp.csv)]</local-name>
            <parent-name>[total-healthcare-expenditure-gdp.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code (total-healthcare-expenditure-gdp.csv)]</local-name>
            <parent-name>[total-healthcare-expenditure-gdp.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (total-healthcare-expenditure-gdp.csv)]</local-name>
            <parent-name>[total-healthcare-expenditure-gdp.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]</local-name>
            <parent-name>[total-healthcare-expenditure-gdp.csv]</parent-name>
            <remote-alias>Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Actual Energy (%)' datatype='real' name='[Actual Emissions (%) (copy)_1522498206914596864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * ABS([Primary energy consumption (TWh)]) /&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation Set],&#13;&#10;        [Year] :&#13;&#10;        SUM(ABS([Primary energy consumption (TWh)]))&#13;&#10;}' />
      </column>
      <column caption='Expected GDP per Capita ($)' datatype='real' name='[Actual GDP per Capita ($) (copy)_1706301372692803598]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1875186347389554689]) / SUM([Population])' />
      </column>
      <column caption='Actual Total Healthcare per Capita ($)' datatype='real' name='[Actual GDP per Capita ($) (copy)_1950903127782686721]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// For one or more nations total the actual percent of GDP multiplied&#13;&#10;// by the actual GDP, and then divided by the total population in the&#13;&#10;// selected nations.&#13;&#10;SUM(&#13;&#10;    [Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)] *&#13;&#10;    [GDP (output, multiple price benchmarks)]&#13;&#10;) /&#13;&#10;( &#13;&#10;    100 * SUM([Population])&#13;&#10;)' />
      </column>
      <column caption='Actual Public Healthcare per Capita ($)' datatype='real' name='[Actual Total Healthcare per Capita ($) (copy)_289637815316234244]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(&#13;&#10;    [Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)] *&#13;&#10;    [Domestic general government health expenditure (% of current health expenditure)] *&#13;&#10;    [GDP (output, multiple price benchmarks)]&#13;&#10;) /&#13;&#10;( &#13;&#10;    100 * 100 * SUM([Population])&#13;&#10;)' />
      </column>
      <column datatype='real' name='[Annual greenhouse gas emissions in CO₂ equivalents]' role='measure' type='quantitative' />
      <column caption='Example Difference' datatype='real' name='[Calculation_1263822710126141440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([Period life expectancy at birth - Sex: all - Age: 0]) - LOOKUP(AVG([Period life expectancy at birth - Sex: all - Age: 0]), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Actual GDP (%)' datatype='real' name='[Calculation_1622984762593579008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// This is a percent so multiply the numerator of GDP by 100&#13;&#10;100 * [GDP (output, multiple price benchmarks)] /&#13;&#10;&#13;&#10;// Denominator sums over all the numerators,&#13;&#10;// the nations with valid GDP in each year.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid records and year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only valid records&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}' />
      </column>
      <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
      </column>
      <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
      </column>
      <column caption='Actual GDP per Capita ($)' datatype='real' name='[Calculation_1706301372692656141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([GDP (output, multiple price benchmarks)]) / SUM([Population])' />
      </column>
      <column caption='Dial GDP Ratio' datatype='real' name='[Calculation_1706301372770754586]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    [Calculation_1706301372692656141]&#13;&#10;) /&#13;&#10;MAX(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    [Calculation_1706301372692656141]&#13;&#10;)' />
      </column>
      <column caption='Dial GDP Left Lower' datatype='real' name='[Calculation_1706301372775272476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    [Calculation_1706301372770754586]&#13;&#10;)' />
      </column>
      <column caption='Actual GDP Over ($)' datatype='real' name='[Calculation_1706301372781551648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Calculation_1706301372692656141] &gt; [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    [Calculation_1706301372692656141],&#13;&#10;    NULL&#13;&#10;)' />
      </column>
      <column caption='Actual Emissions (%)' datatype='real' name='[Calculation_1846475894445051904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * ABS([Annual greenhouse gas emissions in CO₂ equivalents]) /&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (total-ghg-emissions.csv)],&#13;&#10;        [Year] :&#13;&#10;        SUM(ABS([Annual greenhouse gas emissions in CO₂ equivalents]))&#13;&#10;}' />
      </column>
      <column caption='Expected GDP ($)' datatype='real' name='[Calculation_1875186347389554689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Total actual GDP in  a year over all nations&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year]:&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}&#13;&#10;&#13;&#10;// Expected share of the total&#13;&#10;* [Calculation_1622984762593660929] / 100' />
      </column>
      <column caption='Dial Total Healthcare Right Lower' datatype='real' name='[Calculation_1950903127781912576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant immediately right of 12 o&apos;clock on the dial.&#13;&#10;// The remainder of the healthcare ratio that was greater than 50%,&#13;&#10;// truncated from below by 0 to ensure that the wedge vanishes&#13;&#10;// when the ratio is less than 50%.&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    [GDP Gauge Ratio (copy)_1950903127786426371] - 0.5&#13;&#10;)' />
      </column>
      <column caption='Life Expectancy Rank' datatype='integer' name='[Calculation_223491193951797248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Period life expectancy at birth - Sex: all - Age: 0]), &quot;asc&quot;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Anotate Life Expectancy Change' datatype='real' name='[Calculation_2243637104270684160]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Change is current minus previsou. We will do this&#13;&#10;// with a table calculation that references the previous&#13;&#10;// aggregate value in the display.&#13;&#10;&#13;&#10;// Current value is the life expectancy&#13;&#10;AVG([Period life expectancy at birth - Sex: all - Age: 0]) -&#13;&#10;&#13;&#10;// The previous value of life expectancy, from the preceeding year&#13;&#10;LOOKUP(&#13;&#10;    AVG([Period life expectancy at birth - Sex: all - Age: 0]),&#13;&#10;&#13;&#10;    // we step one year backwards&#13;&#10;    -1&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Population Marginal Rate' datatype='real' name='[Calculation_2243637104275329027]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(&#13;&#10;&#13;&#10;    // Current log of population&#13;&#10;    LOG(SUM([Population])) -&#13;&#10;&#13;&#10;    // Previous log of population&#13;&#10;    LOG(LOOKUP(SUM([Population]), -1))&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cumulative GDP (%)' datatype='real' name='[Calculation_290482225320062990]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 *&#13;&#10;RUNNING_SUM((SUM([GDP (output, multiple price benchmarks)]))) /&#13;&#10;TOTAL(SUM([GDP (output, multiple price benchmarks)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Lost Life Expectancy (years)' datatype='real' name='[Calculation_562950001064153090]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='87 - [Period life expectancy at birth - Sex: all - Age: 0]' />
      </column>
      <column caption='GDP Allocation Ratio' datatype='real' name='[Calculation_618963520826253313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1622984762593579008] / [Calculation_1622984762593660929]' />
      </column>
      <column datatype='string' name='[Code (child-mortality-igme.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Code (life-expectancy.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Code (maternal-mortality.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Code (primary-energy-cons.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Code (total-ghg-emissions.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Code (total-healthcare-expenditure-gdp.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
          <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
          <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
        </aliases>
      </column>
      <column caption='Cumulative Population (%)' datatype='real' name='[Cumulative GDP (%) (copy)_290482225321373711]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 *&#13;&#10;RUNNING_SUM((SUM([Population]))) /&#13;&#10;TOTAL(SUM([Population]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Domestic general government health expenditure (% of current health expenditure)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Entity (child-mortality-igme.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Entity (life-expectancy.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Entity (maternal-mortality.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Entity (share-of-public-expenditure-on-healthcare-by-country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Entity (total-ghg-emissions.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Entity (total-healthcare-expenditure-gdp.csv)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Expected Energy (%)' datatype='real' name='[Expected Emissions (%) (copy)_1522498206923276291]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation Set],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
      </column>
      <column caption='Expected Emissions (%)' datatype='real' name='[Expected GDP (%) (copy)_1522498206918639618]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (total-ghg-emissions.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
      </column>
      <column caption='Expected Total Healthcare per Capita ($)' datatype='real' name='[Expected GDP per Capita ($) (copy)_1950903127783223298]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// For one or more nations total the target percent of GDP multiplied&#13;&#10;// by the expected GDP, and then divided by the total population in the&#13;&#10;// selected nations.&#13;&#10;SUM(&#13;&#10;    [Parameters].[Apply Logarithm (copy 3)] *&#13;&#10;    [Calculation_1875186347389554689]&#13;&#10;) /&#13;&#10;SUM([Population])' />
      </column>
      <column caption='Expected Public Healthcare per Capita ($)' datatype='real' name='[Expected Total Healthcare per Capita ($) (copy)_289637815316807685]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(&#13;&#10;    [Parameters].[Apply Logarithm (copy 3)] *&#13;&#10;    [Parameters].[Target Total Healthcare (copy)_2555792852575272960] *&#13;&#10;    [Calculation_1875186347389554689]&#13;&#10;) /&#13;&#10;SUM([Population])' />
      </column>
      <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
      <column caption='Actual GDP Under ($)' datatype='real' name='[GDP Actual Over ($) (copy)_1706301372781801505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Calculation_1706301372692656141] &gt; [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    NULL,&#13;&#10;    [Calculation_1706301372692656141]&#13;&#10;)' />
      </column>
      <column caption='Expected GDP Over ($)' datatype='real' name='[GDP Actual Over ($) (copy)_1706301372782866466]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598] &gt; [Calculation_1706301372692656141],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    NULL&#13;&#10;)' />
      </column>
      <column caption='Actual Total Healthcare Over ($)' datatype='real' name='[GDP Actual Over ($) (copy)_289637815310094336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Display the value of the actual total healthcare expenditure per&#13;&#10;// capita, if the value exceeds the expected expenditure.&#13;&#10;IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721] &gt; [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721],&#13;&#10;    NULL&#13;&#10;)' />
      </column>
      <column caption='Expected GDP Under ($)' datatype='real' name='[GDP Actual Under ($) (copy)_1706301372782891043]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598] &gt; [Calculation_1706301372692656141],&#13;&#10;    NULL,&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598]&#13;&#10;)' />
      </column>
      <column caption='Actual Total Healthcare Under ($)' datatype='real' name='[GDP Actual Under ($) (copy)_289637815310254081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Display the value of the actual total healthcare expenditure per&#13;&#10;// capita, if the value is less than or equal to the expected expenditure.&#13;&#10;IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721] &gt; [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    NULL,&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721]&#13;&#10;)' />
      </column>
      <column caption='Expected Total Healthcare Over ($)' datatype='real' name='[GDP Expected Over ($) (copy)_289637815310708738]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Display the value of the expected total healthcare expenditure per&#13;&#10;// capita, if the value exceeds to the actual expenditure.&#13;&#10;IIF(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298] &gt; [Actual GDP per Capita ($) (copy)_1950903127782686721],&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    NULL&#13;&#10;)' />
      </column>
      <column caption='Expected Total Healthcare Under ($)' datatype='real' name='[GDP Expected Under ($) (copy)_289637815310860291]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Display the value of the expected total healthcare expenditure per&#13;&#10;// capita, if the value is less than or equal to the actual expenditure.&#13;&#10;IIF(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298] &gt; [Actual GDP per Capita ($) (copy)_1950903127782686721],&#13;&#10;    NULL,&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298]&#13;&#10;)' />
      </column>
      <column caption='Dial GDP Left Upper' datatype='real' name='[GDP Gauge Left Lower (copy)_1706301372775911453]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    0.5 - [Calculation_1706301372770754586]&#13;&#10;)' />
      </column>
      <column caption='Dial GDP Right Upper' datatype='real' name='[GDP Gauge Left Lower (copy)_1706301372776235038]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    1.0 - [Calculation_1706301372770754586]&#13;&#10;)' />
      </column>
      <column caption='Dial Total Healthcare Left Lower' datatype='real' name='[GDP Gauge Left Lower (copy)_1950903127789187077]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant furthest left of 12 o&apos;clock on the dial.&#13;&#10;// The healthcare ratio truncated from above by 50% to &#13;&#10;// ensure the wedge stays to the left of 12 o&apos;clock.&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    [GDP Gauge Ratio (copy)_1950903127786426371]&#13;&#10;)' />
      </column>
      <column caption='Dial Total Healthcare Left Upper' datatype='real' name='[GDP Gauge Left Upper (copy)_1950903127789617158]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant immediately left of 12 o&apos;clock on the dial.&#13;&#10;// The remainder of the unobtained healthcare ratio that &#13;&#10;// was greater than 50%, truncated from below by 0 to ensure&#13;&#10;// that the wedge vanishes when the ratio is greater than 50%.&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    0.5 - [GDP Gauge Ratio (copy)_1950903127786426371]&#13;&#10;)' />
      </column>
      <column caption='Dial Total Healthcare Ratio' datatype='real' name='[GDP Gauge Ratio (copy)_1950903127786426371]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// For nations that allocate more GDP per capita to healthcare&#13;&#10;// than expected return the excess allocation ratio. For nations&#13;&#10;// that allocate less GDP per capital to healthcare than expected&#13;&#10;// return the under allocation ratio.&#13;&#10;MIN(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721]&#13;&#10;) /&#13;&#10;MAX(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721]&#13;&#10;)' />
      </column>
      <column caption='Dial GDP Right Lower' datatype='real' name='[GDP Gauge Right Upper (copy)_1706301372777091103]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    [Calculation_1706301372770754586] - 0.5&#13;&#10;)' />
      </column>
      <column caption='Dial Total Healthcare Right Upper' datatype='real' name='[GDP Gauge Right Upper (copy)_1950903127788273668]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant furthest right of 12 o&apos;clock on the dial.&#13;&#10;// The unobtained healthcare ratio truncated from above by 50%&#13;&#10;// to ensure the wedge stays to the right of 12 o&apos;clock.&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    1.0 - [GDP Gauge Ratio (copy)_1950903127786426371]&#13;&#10;)' />
      </column>
      <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
          <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Anguilla&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;British Virgin Islands&quot;</value>
            <value>&quot;Brunei&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Cook Islands&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Curacao&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Falkland Islands&quot;</value>
            <value>&quot;Faroe Islands&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;French Guiana&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Macao&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mayotte&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Montserrat&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Nauru&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niue&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Palau&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Reunion&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Saint Barthelemy&quot;</value>
            <value>&quot;Saint Helena&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Saint Martin (French part)&quot;</value>
            <value>&quot;Saint Pierre and Miquelon&quot;</value>
            <value>&quot;Saint Vincent and the Grenadines&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sint Maarten (Dutch part)&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turks and Caicos Islands&quot;</value>
            <value>&quot;Tuvalu&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;United States Virgin Islands&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Wallis and Futuna&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Continent&quot;'>
            <value>&quot;Africa (UN)&quot;</value>
            <value>&quot;Asia (UN)&quot;</value>
            <value>&quot;Europe (UN)&quot;</value>
            <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
            <value>&quot;Northern America (UN)&quot;</value>
            <value>&quot;Oceania (UN)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Developing&quot;'>
            <value>&quot;Less developed regions&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Developing excluding China&quot;'>
            <value>&quot;Less developed regions, excluding China&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Development&quot;'>
            <value>&quot;Least developed countries&quot;</value>
            <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
            <value>&quot;More developed regions&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czechia&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Guernsey&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Isle of Man&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jersey&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
            <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
            <value>&quot;Small island developing states (SIDS)&quot;</value>
            <value>&quot;Tokelau&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Income&quot;'>
            <value>&quot;High-income countries&quot;</value>
            <value>&quot;Low-income countries&quot;</value>
            <value>&quot;Lower-middle-income countries&quot;</value>
            <value>&quot;Upper-middle-income countries&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Cape Verde&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Democratic Republic of Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;East Timor&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Micronesia (country)&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;North Korea&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Palestine&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;Western Sahara&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;World&quot;'>
            <value>&quot;World&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' role='measure' type='quantitative' />
      <column caption='Maternal Mortalitiy Rank' datatype='integer' name='[Life Expectancy Rank (copy)_223491193959448579]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]), &quot;desc&quot;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Early Childhood Mortality Rank' datatype='integer' name='[Maternal Mortalitiy Rank (copy)_223491193963659269]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]), &quot;desc&quot;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' role='measure' type='quantitative' />
      <column caption='Observation value - Unit of measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal' datatype='real' name='[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' role='measure' type='quantitative' />
      <column caption='GDP Marginal Rate' datatype='real' name='[Percent Change Population (copy)_2243637104276103172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(&#13;&#10;&#13;&#10;    // Current log of GDP&#13;&#10;    LOG(SUM([GDP (output, multiple price benchmarks)])) -&#13;&#10;&#13;&#10;    // Previous log of GDP&#13;&#10;    LOG(LOOKUP(SUM([GDP (output, multiple price benchmarks)]), -1))&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population aged 1 to 4 years]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population aged 10 to 14 years]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population aged 15 to 19 years]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population aged 15 to 64 years]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
      </column>
      <column caption='Actual Public Healthcare Over ($)' datatype='real' name='[Total Healthcare Actual Over ($) (copy)_289637815335673868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244] &gt; [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244],&#13;&#10;    NULL&#13;&#10;)' />
      </column>
      <column caption='Actual Public Healthcare Under ($)' datatype='real' name='[Total Healthcare Actual Under ($) (copy)_289637815335829517]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244] &gt; [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    NULL,&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244]&#13;&#10;)' />
      </column>
      <column caption='Expected Public Healthcare Over ($)' datatype='real' name='[Total Healthcare Expected Over ($) (copy)_289637815335989262]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685] &gt; [Actual Total Healthcare per Capita ($) (copy)_289637815316234244],&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    NULL&#13;&#10;)' />
      </column>
      <column caption='Expected Public Healthcare Under ($)' datatype='real' name='[Total Healthcare Expected Under ($) (copy)_289637815336112143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685] &gt; [Actual Total Healthcare per Capita ($) (copy)_289637815316234244],&#13;&#10;    NULL,&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685]&#13;&#10;)' />
      </column>
      <column caption='Dial Public Healthcare Left Lower' datatype='real' name='[Total Healthcare Gauge Left Lower (copy)_289637815329243143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    [Total Healthcare Gauge Ratio (copy)_289637815316963334]&#13;&#10;)' />
      </column>
      <column caption='Dial Public Healthcare Left Upper' datatype='real' name='[Total Healthcare Gauge Left Upper (copy)_289637815329423368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    0.5 - [Total Healthcare Gauge Ratio (copy)_289637815316963334]&#13;&#10;)' />
      </column>
      <column caption='Dial Public Healthcare Ratio' datatype='real' name='[Total Healthcare Gauge Ratio (copy)_289637815316963334]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244]&#13;&#10;) /&#13;&#10;MAX(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244]&#13;&#10;)' />
      </column>
      <column caption='Dial Public Healthcare Right Lower' datatype='real' name='[Total Healthcare Gauge Right Lower (copy)_289637815329665034]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    [Total Healthcare Gauge Ratio (copy)_289637815316963334] - 0.5&#13;&#10;)' />
      </column>
      <column caption='Dial Public Healthcare Right Upper' datatype='real' name='[Total Healthcare Gauge Right Upper (copy)_289637815329792011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    1.0 - [Total Healthcare Gauge Ratio (copy)_289637815316963334]&#13;&#10;)' />
      </column>
      <column datatype='integer' name='[Year (child-mortality-igme.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (life-expectancy.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (maternal-mortality.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (national-gdp-penn-world-table.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (primary-energy-cons.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (share-of-public-expenditure-on-healthcare-by-country.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (total-ghg-emissions.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (total-healthcare-expenditure-gdp.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='child-mortality-igme.csv' datatype='table' name='[__tableau_internal_object_id__].[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='life-expectancy.csv' datatype='table' name='[__tableau_internal_object_id__].[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='maternal-mortality.csv' datatype='table' name='[__tableau_internal_object_id__].[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='national-gdp-penn-world-table.csv' datatype='table' name='[__tableau_internal_object_id__].[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population-and-demography.csv' datatype='table' name='[__tableau_internal_object_id__].[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='primary-energy-cons.csv' datatype='table' name='[__tableau_internal_object_id__].[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='share-of-public-expenditure-on-healthcare-by-country.csv' datatype='table' name='[__tableau_internal_object_id__].[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='total-ghg-emissions.csv' datatype='table' name='[__tableau_internal_object_id__].[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='total-healthcare-expenditure-gdp.csv' datatype='table' name='[__tableau_internal_object_id__].[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]' role='measure' type='quantitative' />
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Avg' name='[avg:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:10]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[med:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:11]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:12]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (national-gdp-penn-world-table.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:13]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (national-gdp-penn-world-table.csv)]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:14]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' level-break='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (national-gdp-penn-world-table.csv)]' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (national-gdp-penn-world-table.csv)]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:15]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:16]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (national-gdp-penn-world-table.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:17]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:18]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:19]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (maternal-mortality.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:20]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (maternal-mortality.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:21]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:22]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:23]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:24]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:25]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:26]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1846475894445051904:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:27]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:28]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:29]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:30]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1846475894445051904:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:31]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:32]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:33]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='DESC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:34]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:35]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:36]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:37]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:38]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:39]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:40]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:41]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Portrayal for GDP (copy)_2687523132076060687]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (maternal-mortality.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (maternal-mortality.csv)]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:7]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:8]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:9]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[avg:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[cum:sum:Calculation_1622984762593660929:qk:11]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[cum:sum:Calculation_1622984762593660929:qk:12]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
          <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Entity]' />
          <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Avg' name='[diff:avg:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Median' name='[med:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual greenhouse gas emissions in CO₂ equivalents]' derivation='None' name='[none:Annual greenhouse gas emissions in CO₂ equivalents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1622984762593579008]' derivation='None' name='[none:Calculation_1622984762593579008:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1622984762593660929]' derivation='None' name='[none:Calculation_1622984762593660929:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1875186347389554689]' derivation='None' name='[none:Calculation_1875186347389554689:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_562950001064153090]' derivation='None' name='[none:Calculation_562950001064153090:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Domestic general government health expenditure (% of current health expenditure)]' derivation='None' name='[none:Domestic general government health expenditure (% of current health expenditure):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP (output, multiple price benchmarks)]' derivation='None' name='[none:GDP (output, multiple price benchmarks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' derivation='None' name='[none:Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' derivation='None' name='[none:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='None' name='[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year (national-gdp-penn-world-table.csv)]' derivation='None' name='[none:Year (national-gdp-penn-world-table.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Annual greenhouse gas emissions in CO₂ equivalents]' derivation='Sum' name='[sum:Annual greenhouse gas emissions in CO₂ equivalents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[sum:Calculation_1622984762593579008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[sum:Calculation_1622984762593660929:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1846475894445051904]' derivation='Sum' name='[sum:Calculation_1846475894445051904:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1875186347389554689]' derivation='Sum' name='[sum:Calculation_1875186347389554689:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_562950001064153090]' derivation='Sum' name='[sum:Calculation_562950001064153090:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_618963520826253313]' derivation='Sum' name='[sum:Calculation_618963520826253313:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Domestic general government health expenditure (% of current health expenditure)]' derivation='Sum' name='[sum:Domestic general government health expenditure (% of current health expenditure):qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP (output, multiple price benchmarks)]' derivation='Sum' name='[sum:GDP (output, multiple price benchmarks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' derivation='Sum' name='[sum:Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' derivation='Sum' name='[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' derivation='Sum' name='[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population aged 1 to 4 years]' derivation='Sum' name='[sum:Population aged 1 to 4 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population aged 10 to 14 years]' derivation='Sum' name='[sum:Population aged 10 to 14 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population aged 15 to 19 years]' derivation='Sum' name='[sum:Population aged 15 to 19 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population aged 15 to 64 years]' derivation='Sum' name='[sum:Population aged 15 to 64 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1706301372775272476]' derivation='User' name='[usr:Calculation_1706301372775272476:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1950903127781912576]' derivation='User' name='[usr:Calculation_1950903127781912576:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_290482225320062990]' derivation='User' name='[usr:Calculation_290482225320062990:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Period life expectancy at birth - Sex: all - Age: 0]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_290482225320062990]' derivation='User' name='[usr:Calculation_290482225320062990:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Cumulative GDP (%) (copy)_290482225321373711]' derivation='User' name='[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Period life expectancy at birth - Sex: all - Age: 0]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Cumulative GDP (%) (copy)_290482225321373711]' derivation='User' name='[usr:Cumulative GDP (%) (copy)_290482225321373711:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[GDP Gauge Left Lower (copy)_1706301372775911453]' derivation='User' name='[usr:GDP Gauge Left Lower (copy)_1706301372775911453:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP Gauge Left Lower (copy)_1706301372776235038]' derivation='User' name='[usr:GDP Gauge Left Lower (copy)_1706301372776235038:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP Gauge Left Lower (copy)_1950903127789187077]' derivation='User' name='[usr:GDP Gauge Left Lower (copy)_1950903127789187077:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP Gauge Left Upper (copy)_1950903127789617158]' derivation='User' name='[usr:GDP Gauge Left Upper (copy)_1950903127789617158:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP Gauge Ratio (copy)_1950903127786426371]' derivation='User' name='[usr:GDP Gauge Ratio (copy)_1950903127786426371:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP Gauge Right Upper (copy)_1706301372777091103]' derivation='User' name='[usr:GDP Gauge Right Upper (copy)_1706301372777091103:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP Gauge Right Upper (copy)_1950903127788273668]' derivation='User' name='[usr:GDP Gauge Right Upper (copy)_1950903127788273668:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Healthcare Gauge Left Lower (copy)_289637815329243143]' derivation='User' name='[usr:Total Healthcare Gauge Left Lower (copy)_289637815329243143:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Healthcare Gauge Left Upper (copy)_289637815329423368]' derivation='User' name='[usr:Total Healthcare Gauge Left Upper (copy)_289637815329423368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Healthcare Gauge Right Lower (copy)_289637815329665034]' derivation='User' name='[usr:Total Healthcare Gauge Right Lower (copy)_289637815329665034:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Healthcare Gauge Right Upper (copy)_289637815329792011]' derivation='User' name='[usr:Total Healthcare Gauge Right Upper (copy)_289637815329792011:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country name)' hidden='true' name='[Action (Country name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country name]' />
        </groupfilter>
      </group>
      <group caption='Is Nation (child-mortality-igme.csv)' name='[Is Nation (child-mortality-igme.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (child-mortality-igme.csv)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Code (child-mortality-igme.csv)]' member='%null%' />
            <groupfilter function='member' level='[Code (child-mortality-igme.csv)]' member='&quot;OWID_WRL&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Is Nation (life-expectancy.csv)' name='[Is Nation (life-expectancy.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (life-expectancy.csv)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Code (life-expectancy.csv)]' member='%null%' />
            <groupfilter function='member' level='[Code (life-expectancy.csv)]' member='&quot;OWID_USS&quot;' />
            <groupfilter function='member' level='[Code (life-expectancy.csv)]' member='&quot;OWID_WRL&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Is Nation (maternal-mortality.csv)' name='[Is Nation (maternal-mortality.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (maternal-mortality.csv)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Code (maternal-mortality.csv)]' member='%null%' />
            <groupfilter function='member' level='[Code (maternal-mortality.csv)]' member='&quot;OWID_WRL&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Is Nation (national-gdp-penn-world-table.csv)' name='[Is Nation (national-gdp-penn-world-table.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code]' />
          <groupfilter function='member' level='[Code]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Is Nation (share-of-public-expenditure-on-healthcare-by-country.csv)' name='[Is Nation (share-of-public-expenditure-on-healthcare-by-country.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' member='%null%' />
            <groupfilter function='member' level='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' member='&quot;OWID_WRL&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Is Nation (total-ghg-emissions.csv)' name='[Is Nation (total-ghg-emissions.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (total-ghg-emissions.csv)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Code (total-ghg-emissions.csv)]' member='%null%' />
            <groupfilter function='member' level='[Code (total-ghg-emissions.csv)]' member='&quot;OWID_WRL&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Is Nation (total-healthcare-expenditure-gdp.csv)' name='[Is Nation (total-healthcare-expenditure-gdp.csv)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (total-healthcare-expenditure-gdp.csv)]' />
          <groupfilter function='member' level='[Code (total-healthcare-expenditure-gdp.csv)]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Is Nation (primary-energy-cons.csv)' name='[Is Nation Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Code (primary-energy-cons.csv)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Code (primary-energy-cons.csv)]' member='%null%' />
            <groupfilter function='member' level='[Code (primary-energy-cons.csv)]' member='&quot;OWID_WRL&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Is Nation (population-and-demography.csv)' name='[Is Nation]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Geopolitical Jurisdictions]' member='&quot;Ambivalent Western Portrayal&quot;' />
          <groupfilter function='member' level='[Geopolitical Jurisdictions]' member='&quot;Favourable Western Portrayal&quot;' />
          <groupfilter function='member' level='[Geopolitical Jurisdictions]' member='&quot;Stereotyped Western Portrayal&quot;' />
        </groupfilter>
      </group>
      <group caption='Legend Selected' name='[Portrayal Selected]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Geopolitical Jurisdictions]' member='&quot;Ambivalent Western Portrayal&quot;' />
          <groupfilter function='member' level='[Geopolitical Jurisdictions]' member='&quot;Favourable Western Portrayal&quot;' />
          <groupfilter function='member' level='[Geopolitical Jurisdictions]' member='&quot;Stereotyped Western Portrayal&quot;' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Actual GDP Share (%),Expected GDP Share (%),Entity,Geopolitical Jurisdiction,Year (national-gdp-penn-world-table.csv))' hidden='true' name='[Tooltip (Actual GDP Share (%),Expected GDP Share (%),Entity,Geopolitical Jurisdiction,Year (national-gdp-penn-world-table.csv))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1622984762593579008:ok]' />
          <groupfilter function='level-members' level='[none:Calculation_1622984762593660929:ok]' />
          <groupfilter function='level-members' level='[Entity]' />
          <groupfilter function='level-members' level='[Geopolitical Jurisdictions]' />
          <groupfilter function='level-members' level='[none:Year (national-gdp-penn-world-table.csv):ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/asheldon/OneDrive - Bow Valley College/Documents/DATA3411/Examples/Our World in Data/OurWorld.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/05/2024 11:35:08 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77' table='[Extract].[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' table='[Extract].[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]' type='table' />
            <relation name='child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77' table='[Extract].[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]' type='table' />
            <relation name='life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC' table='[Extract].[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]' type='table' />
            <relation name='maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F' table='[Extract].[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]' type='table' />
            <relation name='national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD' table='[Extract].[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]' type='table' />
            <relation name='primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F' table='[Extract].[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]' type='table' />
            <relation name='share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84' table='[Extract].[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]' type='table' />
            <relation name='total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516' table='[Extract].[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]' type='table' />
            <relation name='total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6' table='[Extract].[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Annual greenhouse gas emissions in CO₂ equivalents]' value='[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516].[Annual greenhouse gas emissions in CO₂ equivalents]' />
            <map key='[Code (child-mortality-igme.csv)]' value='[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77].[Code]' />
            <map key='[Code (life-expectancy.csv)]' value='[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC].[Code]' />
            <map key='[Code (maternal-mortality.csv)]' value='[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F].[Code]' />
            <map key='[Code (primary-energy-cons.csv)]' value='[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F].[Code]' />
            <map key='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84].[Code]' />
            <map key='[Code (total-ghg-emissions.csv)]' value='[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516].[Code]' />
            <map key='[Code (total-healthcare-expenditure-gdp.csv)]' value='[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6].[Code]' />
            <map key='[Code]' value='[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD].[Code]' />
            <map key='[Country name]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Country name]' />
            <map key='[Domestic general government health expenditure (% of current health expenditure)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84].[Domestic general government health expenditure (% of current health expenditure)]' />
            <map key='[Entity (child-mortality-igme.csv)]' value='[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77].[Entity]' />
            <map key='[Entity (life-expectancy.csv)]' value='[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC].[Entity]' />
            <map key='[Entity (maternal-mortality.csv)]' value='[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F].[Entity]' />
            <map key='[Entity (primary-energy-cons.csv)]' value='[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F].[Entity]' />
            <map key='[Entity (share-of-public-expenditure-on-healthcare-by-country.csv)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84].[Entity]' />
            <map key='[Entity (total-ghg-emissions.csv)]' value='[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516].[Entity]' />
            <map key='[Entity (total-healthcare-expenditure-gdp.csv)]' value='[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6].[Entity]' />
            <map key='[Entity]' value='[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD].[Entity]' />
            <map key='[GDP (output, multiple price benchmarks)]' value='[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD].[GDP (output, multiple price benchmarks)]' />
            <map key='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' value='[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6].[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' />
            <map key='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' value='[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F].[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' />
            <map key='[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' value='[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77].[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' />
            <map key='[Period life expectancy at birth - Sex: all - Age: 0]' value='[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC].[Period life expectancy at birth - Sex: all - Age: 0]' />
            <map key='[Population aged 1 to 4 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 1 to 4 years]' />
            <map key='[Population aged 10 to 14 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 10 to 14 years]' />
            <map key='[Population aged 15 to 19 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 15 to 19 years]' />
            <map key='[Population aged 15 to 64 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 15 to 64 years]' />
            <map key='[Population aged 20 to 29 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 20 to 29 years]' />
            <map key='[Population aged 30 to 39 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 30 to 39 years]' />
            <map key='[Population aged 40 to 49 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 40 to 49 years]' />
            <map key='[Population aged 5 to 9 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 5 to 9 years]' />
            <map key='[Population aged 50 to 59 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 50 to 59 years]' />
            <map key='[Population aged 60 to 69 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 60 to 69 years]' />
            <map key='[Population aged 70 to 79 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 70 to 79 years]' />
            <map key='[Population aged 80 to 89 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 80 to 89 years]' />
            <map key='[Population aged 90 to 99 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population aged 90 to 99 years]' />
            <map key='[Population at age 1]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population at age 1]' />
            <map key='[Population of children under the age of 15]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population of children under the age of 15]' />
            <map key='[Population of children under the age of 1]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population of children under the age of 1]' />
            <map key='[Population of children under the age of 5]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population of children under the age of 5]' />
            <map key='[Population older than 100 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population older than 100 years]' />
            <map key='[Population older than 15 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population older than 15 years]' />
            <map key='[Population older than 18 years]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population older than 18 years]' />
            <map key='[Population under the age of 25]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population under the age of 25]' />
            <map key='[Population]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Population]' />
            <map key='[Primary energy consumption (TWh)]' value='[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F].[Primary energy consumption (TWh)]' />
            <map key='[Year (child-mortality-igme.csv)]' value='[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77].[Year]' />
            <map key='[Year (life-expectancy.csv)]' value='[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC].[Year]' />
            <map key='[Year (maternal-mortality.csv)]' value='[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F].[Year]' />
            <map key='[Year (national-gdp-penn-world-table.csv)]' value='[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD].[Year]' />
            <map key='[Year (primary-energy-cons.csv)]' value='[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F].[Year]' />
            <map key='[Year (share-of-public-expenditure-on-healthcare-by-country.csv)]' value='[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84].[Year]' />
            <map key='[Year (total-ghg-emissions.csv)]' value='[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516].[Year]' />
            <map key='[Year (total-healthcare-expenditure-gdp.csv)]' value='[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6].[Year]' />
            <map key='[Year]' value='[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0].[Year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='population-and-demography+' increment-value='%null%' refresh-type='create' rows-inserted='126169' timestamp-start='2024-03-05 23:35:03.435' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country name]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Country name</remote-alias>
              <ordinal>0</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>329</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>2</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17473</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population of children under the age of 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population of children under the age of 1]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population of children under the age of 1</remote-alias>
              <ordinal>3</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8468</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population of children under the age of 5</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population of children under the age of 5]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population of children under the age of 5</remote-alias>
              <ordinal>4</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15025</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population of children under the age of 15</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population of children under the age of 15]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population of children under the age of 15</remote-alias>
              <ordinal>5</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18288</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population under the age of 25</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population under the age of 25]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population under the age of 25</remote-alias>
              <ordinal>6</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18288</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 15 to 64 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 15 to 64 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 15 to 64 years</remote-alias>
              <ordinal>7</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16657</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population older than 15 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population older than 15 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population older than 15 years</remote-alias>
              <ordinal>8</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17473</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population older than 18 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population older than 18 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population older than 18 years</remote-alias>
              <ordinal>9</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16657</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population at age 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population at age 1]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population at age 1</remote-alias>
              <ordinal>10</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9532</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 1 to 4 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 1 to 4 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 1 to 4 years</remote-alias>
              <ordinal>11</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13391</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 5 to 9 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 5 to 9 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 5 to 9 years</remote-alias>
              <ordinal>12</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12573</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 10 to 14 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 10 to 14 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 10 to 14 years</remote-alias>
              <ordinal>13</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15025</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 15 to 19 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 15 to 19 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 15 to 19 years</remote-alias>
              <ordinal>14</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15831</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 20 to 29 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 20 to 29 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 20 to 29 years</remote-alias>
              <ordinal>15</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15842</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 30 to 39 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 30 to 39 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 30 to 39 years</remote-alias>
              <ordinal>16</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17473</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 40 to 49 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 40 to 49 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 40 to 49 years</remote-alias>
              <ordinal>17</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13391</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 50 to 59 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 50 to 59 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 50 to 59 years</remote-alias>
              <ordinal>18</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13391</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 60 to 69 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 60 to 69 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 60 to 69 years</remote-alias>
              <ordinal>19</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14208</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 70 to 79 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 70 to 79 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 70 to 79 years</remote-alias>
              <ordinal>20</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8004</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 80 to 89 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 80 to 89 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 80 to 89 years</remote-alias>
              <ordinal>21</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7187</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population aged 90 to 99 years</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population aged 90 to 99 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population aged 90 to 99 years</remote-alias>
              <ordinal>22</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4219</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population older than 100 years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population older than 100 years]</local-name>
              <parent-name>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</parent-name>
              <remote-alias>Population older than 100 years</remote-alias>
              <ordinal>23</ordinal>
              <family>population-and-demography.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1337</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (child-mortality-igme.csv)]</local-name>
              <parent-name>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>24</ordinal>
              <family>child-mortality-igme.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>299</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (child-mortality-igme.csv)]</local-name>
              <parent-name>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>25</ordinal>
              <family>child-mortality-igme.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>235</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (child-mortality-igme.csv)]</local-name>
              <parent-name>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>26</ordinal>
              <family>child-mortality-igme.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]</local-name>
              <parent-name>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</parent-name>
              <remote-alias>Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal</remote-alias>
              <ordinal>27</ordinal>
              <family>child-mortality-igme.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13077</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (life-expectancy.csv)]</local-name>
              <parent-name>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>28</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>334</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (life-expectancy.csv)]</local-name>
              <parent-name>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>29</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>306</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (life-expectancy.csv)]</local-name>
              <parent-name>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>30</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>297</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Period life expectancy at birth - Sex: all - Age: 0</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Period life expectancy at birth - Sex: all - Age: 0]</local-name>
              <parent-name>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</parent-name>
              <remote-alias>Period life expectancy at birth - Sex: all - Age: 0</remote-alias>
              <ordinal>31</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18870</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (maternal-mortality.csv)]</local-name>
              <parent-name>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>32</ordinal>
              <family>maternal-mortality.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (maternal-mortality.csv)]</local-name>
              <parent-name>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>33</ordinal>
              <family>maternal-mortality.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (maternal-mortality.csv)]</local-name>
              <parent-name>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>34</ordinal>
              <family>maternal-mortality.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]</local-name>
              <parent-name>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</parent-name>
              <remote-alias>Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))</remote-alias>
              <ordinal>35</ordinal>
              <family>maternal-mortality.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1436</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>36</ordinal>
              <family>national-gdp-penn-world-table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>37</ordinal>
              <family>national-gdp-penn-world-table.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (national-gdp-penn-world-table.csv)]</local-name>
              <parent-name>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>38</ordinal>
              <family>national-gdp-penn-world-table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP (output, multiple price benchmarks)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP (output, multiple price benchmarks)]</local-name>
              <parent-name>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</parent-name>
              <remote-alias>GDP (output, multiple price benchmarks)</remote-alias>
              <ordinal>39</ordinal>
              <family>national-gdp-penn-world-table.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10108</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (primary-energy-cons.csv)]</local-name>
              <parent-name>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>40</ordinal>
              <family>primary-energy-cons.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>314</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (primary-energy-cons.csv)]</local-name>
              <parent-name>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>41</ordinal>
              <family>primary-energy-cons.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (primary-energy-cons.csv)]</local-name>
              <parent-name>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>42</ordinal>
              <family>primary-energy-cons.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Primary energy consumption (TWh)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Primary energy consumption (TWh)]</local-name>
              <parent-name>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</parent-name>
              <remote-alias>Primary energy consumption (TWh)</remote-alias>
              <ordinal>43</ordinal>
              <family>primary-energy-cons.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8993</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (share-of-public-expenditure-on-healthcare-by-country.csv)]</local-name>
              <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>44</ordinal>
              <family>share-of-public-expenditure-on-healthcare-by-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>206</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]</local-name>
              <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>45</ordinal>
              <family>share-of-public-expenditure-on-healthcare-by-country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (share-of-public-expenditure-on-healthcare-by-country.csv)]</local-name>
              <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>46</ordinal>
              <family>share-of-public-expenditure-on-healthcare-by-country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Domestic general government health expenditure (% of current health expenditure)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Domestic general government health expenditure (% of current health expenditure)]</local-name>
              <parent-name>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</parent-name>
              <remote-alias>Domestic general government health expenditure (% of current health expenditure)</remote-alias>
              <ordinal>47</ordinal>
              <family>share-of-public-expenditure-on-healthcare-by-country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4014</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (total-ghg-emissions.csv)]</local-name>
              <parent-name>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>48</ordinal>
              <family>total-ghg-emissions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>273</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (total-ghg-emissions.csv)]</local-name>
              <parent-name>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>49</ordinal>
              <family>total-ghg-emissions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (total-ghg-emissions.csv)]</local-name>
              <parent-name>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>50</ordinal>
              <family>total-ghg-emissions.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>177</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual greenhouse gas emissions in CO₂ equivalents</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Annual greenhouse gas emissions in CO₂ equivalents]</local-name>
              <parent-name>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</parent-name>
              <remote-alias>Annual greenhouse gas emissions in CO₂ equivalents</remote-alias>
              <ordinal>51</ordinal>
              <family>total-ghg-emissions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37496</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (total-healthcare-expenditure-gdp.csv)]</local-name>
              <parent-name>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>52</ordinal>
              <family>total-healthcare-expenditure-gdp.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code (total-healthcare-expenditure-gdp.csv)]</local-name>
              <parent-name>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>53</ordinal>
              <family>total-healthcare-expenditure-gdp.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (total-healthcare-expenditure-gdp.csv)]</local-name>
              <parent-name>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>54</ordinal>
              <family>total-healthcare-expenditure-gdp.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]</local-name>
              <parent-name>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</parent-name>
              <remote-alias>Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)</remote-alias>
              <ordinal>55</ordinal>
              <family>total-healthcare-expenditure-gdp.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>977</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.688559' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.311441' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Geopolitical Jurisdictions]' palette='Viridis' type='palette'>
            <map to='#21908c'>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
            </map>
            <map to='#21908c'>
              <bucket>&quot;Developing excluding China&quot;</bucket>
            </map>
            <map to='#27ad80'>
              <bucket>&quot;Developing&quot;</bucket>
            </map>
            <map to='#2c718e'>
              <bucket>&quot;Development&quot;</bucket>
            </map>
            <map to='#31688e'>
              <bucket>&quot;Geographic Isolation&quot;</bucket>
            </map>
            <map to='#3b518b'>
              <bucket>&quot;Income&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#5cc862'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b4dd2b'>
              <bucket>&quot;Continent&quot;</bucket>
            </map>
            <map to='#fde725'>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' palette='Viridis' type='palette'>
            <map to='#21908c'>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Undisclosed&quot;</bucket>
            </map>
            <map to='#fde725'>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='Viridis' type='palette'>
            <map to='#1f968b'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_618963520826253313:qk]&quot;</bucket>
            </map>
            <map to='#1fa286'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:GDP (output, multiple price benchmarks):qk]&quot;</bucket>
            </map>
            <map to='#1fa286'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]&quot;</bucket>
            </map>
            <map to='#21908c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Ratio (copy)_1950903127786426371:qk]&quot;</bucket>
            </map>
            <map to='#21908c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Minimum ($) (copy)_1706301372663721985:qk]&quot;</bucket>
            </map>
            <map to='#21908c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Minimum ($) (copy)_1706301372663812098:qk]&quot;</bucket>
            </map>
            <map to='#23898d'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (\%):qk]&quot;</bucket>
            </map>
            <map to='#23898d'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (\%):qk]&quot;</bucket>
            </map>
            <map to='#277d8e'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]&quot;</bucket>
            </map>
            <map to='#277d8e'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_562950001064153090:qk]&quot;</bucket>
            </map>
            <map to='#29af7f'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]&quot;</bucket>
            </map>
            <map to='#2d708e'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]&quot;</bucket>
            </map>
            <map to='#2d708e'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]&quot;</bucket>
            </map>
            <map to='#32638d'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[avg:Period life expectancy at birth - Sex: all - Age: 0:qk]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[diff:avg:Period life expectancy at birth - Sex: all - Age: 0:qk]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:1]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:2]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:3]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk:4]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[diff:sum:Period life expectancy at birth - Sex: all - Age: 0:qk]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]&quot;</bucket>
            </map>
            <map to='#39558c'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]&quot;</bucket>
            </map>
            <map to='#3b518b'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Guage Left ($) (copy)_1706301372673196040:qk]&quot;</bucket>
            </map>
            <map to='#3bbb74'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1875186347389554689:qk]&quot;</bucket>
            </map>
            <map to='#3bbb74'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]&quot;</bucket>
            </map>
            <map to='#3f4688'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Population:qk]&quot;</bucket>
            </map>
            <map to='#3f4688'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1706301372770287637:qk]&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population aged 15 to 64 years:qk]&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372663500800:qk]&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (\%) (copy)_290482225321373711:qk]&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Guage Left Lower ($) (copy)_1706301372674138121:qk]&quot;</bucket>
            </map>
            <map to='#440154'>
              <bucket>&quot;[Parameters].[Apply Logarithm (copy 2)]:1&quot;</bucket>
            </map>
            <map to='#453781'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population aged 1 to 4 years:qk]&quot;</bucket>
            </map>
            <map to='#481467'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population aged 15 to 19 years:qk]&quot;</bucket>
            </map>
            <map to='#482576'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Population aged 10 to 14 years:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:11]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:12]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:13]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:14]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:15]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:16]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:17]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:18]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:19]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:20]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:21]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:22]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:23]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:24]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:25]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:26]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:27]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:28]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:29]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:30]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:31]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:32]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:33]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:34]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:35]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:36]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:37]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:39]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:40]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:41]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]&quot;</bucket>
            </map>
            <map to='#55c567'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Domestic general government health expenditure (\% of current health expenditure):qk]&quot;</bucket>
            </map>
            <map to='#55c567'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Domestic general government health expenditure (\% of current health expenditure):qk]&quot;</bucket>
            </map>
            <map to='#5cc862'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Guage Left Lower ($) (copy)_1706301372690497547:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1706301372775911453:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1706301372776235038:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Upper (copy)_1950903127789617158:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Right Upper (copy)_1950903127788273668:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Left Upper (copy)_289637815329423368:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Right Upper (copy)_289637815329792011:qk]&quot;</bucket>
            </map>
            <map to='#b8de28'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Annual greenhouse gas emissions in CO₂ equivalents:qk]&quot;</bucket>
            </map>
            <map to='#b8de28'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Annual greenhouse gas emissions in CO₂ equivalents:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb]&quot;</bucket>
            </map>
            <map to='#beb6b2'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372775272476:qk]&quot;</bucket>
            </map>
            <map to='#beb6b2'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1950903127781912576:qk]&quot;</bucket>
            </map>
            <map to='#beb6b2'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1950903127789187077:qk]&quot;</bucket>
            </map>
            <map to='#beb6b2'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Right Upper (copy)_1706301372777091103:qk]&quot;</bucket>
            </map>
            <map to='#beb6b2'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Left Lower (copy)_289637815329243143:qk]&quot;</bucket>
            </map>
            <map to='#beb6b2'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Right Lower (copy)_289637815329665034:qk]&quot;</bucket>
            </map>
            <map to='#dbe318'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk:11]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk:12]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (\%) (copy)_290482225321373711:qk:3]&quot;</bucket>
            </map>
            <map to='#fde725'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1706301372770271251:qk]&quot;</bucket>
            </map>
            <map to='#fde725'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1846475894445051904:qk]&quot;</bucket>
            </map>
            <map to='#fde725'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk]&quot;</bucket>
            </map>
            <map to='#fde725'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Guage Right Lower ($) (copy)_1706301372691034124:qk]&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372667580419:qk]&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;[Parameters].[Apply Logarithm (copy)]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Entity (life-expectancy.csv)' />
        <field-sort-custom-order field='Code (life-expectancy.csv)' />
        <field-sort-custom-order field='Year (life-expectancy.csv)' />
        <field-sort-custom-order field='Period life expectancy at birth - Sex: all - Age: 0' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Dial Axis' datatype='real' name='[Apply Logarithm (copy 2)]' param-domain-type='list' role='measure' type='quantitative' value='0.'>
          <calculation class='tableau' formula='0.' />
        </column>
        <column caption='Total Healthcare Target' datatype='real' default-format='p0%' name='[Apply Logarithm (copy 3)]' param-domain-type='range' role='measure' type='quantitative' value='0.099999999999999992'>
          <calculation class='tableau' formula='0.099999999999999992' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Dial Gap' datatype='real' default-format='p0%' name='[Apply Logarithm (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.24999999999999994'>
          <calculation class='tableau' formula='0.24999999999999994' />
          <range granularity='0.01' max='0.9' min='0.1' />
        </column>
        <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
        </column>
        <column caption='Public Healthcare Target' datatype='real' default-format='p0%' name='[Target Total Healthcare (copy)_2555792852575272960]' param-domain-type='range' role='measure' type='quantitative' value='0.90000000000000002'>
          <calculation class='tableau' formula='0.90000000000000002' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='child-mortality-igme.csv' id='child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='child-mortality-igme.csv' table='[child-mortality-igme#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77' table='[Extract].[child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77]' type='table' />
            </properties>
          </object>
          <object caption='life-expectancy.csv' id='life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='life-expectancy.csv' table='[life-expectancy#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Period life expectancy at birth - Sex: all - Age: 0' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC' table='[Extract].[life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC]' type='table' />
            </properties>
          </object>
          <object caption='maternal-mortality.csv' id='maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='maternal-mortality.csv' table='[maternal-mortality#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F' table='[Extract].[maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F]' type='table' />
            </properties>
          </object>
          <object caption='national-gdp-penn-world-table.csv' id='national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='national-gdp-penn-world-table.csv' table='[national-gdp-penn-world-table#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='integer' name='GDP (output, multiple price benchmarks)' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD' table='[Extract].[national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD]' type='table' />
            </properties>
          </object>
          <object caption='population-and-demography.csv' id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='population-and-demography.csv' table='[population-and-demography#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country name' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='real' name='Population of children under the age of 1' ordinal='3' />
                  <column datatype='integer' name='Population of children under the age of 5' ordinal='4' />
                  <column datatype='integer' name='Population of children under the age of 15' ordinal='5' />
                  <column datatype='integer' name='Population under the age of 25' ordinal='6' />
                  <column datatype='integer' name='Population aged 15 to 64 years' ordinal='7' />
                  <column datatype='integer' name='Population older than 15 years' ordinal='8' />
                  <column datatype='integer' name='Population older than 18 years' ordinal='9' />
                  <column datatype='real' name='Population at age 1' ordinal='10' />
                  <column datatype='integer' name='Population aged 1 to 4 years' ordinal='11' />
                  <column datatype='integer' name='Population aged 5 to 9 years' ordinal='12' />
                  <column datatype='integer' name='Population aged 10 to 14 years' ordinal='13' />
                  <column datatype='integer' name='Population aged 15 to 19 years' ordinal='14' />
                  <column datatype='integer' name='Population aged 20 to 29 years' ordinal='15' />
                  <column datatype='integer' name='Population aged 30 to 39 years' ordinal='16' />
                  <column datatype='integer' name='Population aged 40 to 49 years' ordinal='17' />
                  <column datatype='integer' name='Population aged 50 to 59 years' ordinal='18' />
                  <column datatype='integer' name='Population aged 60 to 69 years' ordinal='19' />
                  <column datatype='integer' name='Population aged 70 to 79 years' ordinal='20' />
                  <column datatype='integer' name='Population aged 80 to 89 years' ordinal='21' />
                  <column datatype='integer' name='Population aged 90 to 99 years' ordinal='22' />
                  <column datatype='real' name='Population older than 100 years' ordinal='23' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' table='[Extract].[population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0]' type='table' />
            </properties>
          </object>
          <object caption='primary-energy-cons.csv' id='primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='primary-energy-cons.csv' table='[primary-energy-cons#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Primary energy consumption (TWh)' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F' table='[Extract].[primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F]' type='table' />
            </properties>
          </object>
          <object caption='share-of-public-expenditure-on-healthcare-by-country.csv' id='share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='share-of-public-expenditure-on-healthcare-by-country.csv' table='[share-of-public-expenditure-on-healthcare-by-country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Domestic general government health expenditure (% of current health expenditure)' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84' table='[Extract].[share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84]' type='table' />
            </properties>
          </object>
          <object caption='total-ghg-emissions.csv' id='total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='total-ghg-emissions.csv' table='[total-ghg-emissions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Annual greenhouse gas emissions in CO₂ equivalents' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516' table='[Extract].[total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516]' type='table' />
            </properties>
          </object>
          <object caption='total-healthcare-expenditure-gdp.csv' id='total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6'>
            <properties context=''>
              <relation connection='textscan.11gotxm15d162216sx4911u6zke3' name='total-healthcare-expenditure-gdp.csv' table='[total-healthcare-expenditure-gdp#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='real' name='Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6' table='[Extract].[total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (child-mortality-igme.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (child-mortality-igme.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='child-mortality-igme.csv_B278C96B62E34CA389A427D8BE12DF77' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (life-expectancy.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (life-expectancy.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='life-expectancy.csv_6B73C08EBDCD4BACAF740B887A9F95AC' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (maternal-mortality.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (maternal-mortality.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='maternal-mortality.csv_2483A73304354CEEB1BDE921981CE91F' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (national-gdp-penn-world-table.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='national-gdp-penn-world-table.csv_8AF05239BB2A42B2864AEA080180B2DD' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (primary-energy-cons.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (primary-energy-cons.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='primary-energy-cons.csv_839076946ABF45F8AF8F315840305C7F' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (share-of-public-expenditure-on-healthcare-by-country.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (share-of-public-expenditure-on-healthcare-by-country.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='share-of-public-expenditure-on-healthcare-by-country.csv_F3BB41F1B0FE4D26989DBED2DF902E84' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (total-ghg-emissions.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (total-ghg-emissions.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='total-ghg-emissions.csv_7F5F6F31DF334530919A0183A7273516' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (total-healthcare-expenditure-gdp.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country name]' />
                <expression op='[Entity (total-healthcare-expenditure-gdp.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='population-and-demography.csv_79728ED0119D469B88A07F4A4F7F94E0' unique-key='true' />
            <second-end-point object-id='total-healthcare-expenditure-gdp.csv_DD020D3D4CEF447FBB3C2BB061EE4BA6' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Top Ten Filter' name='[Action10_1E4641D98BD44B658176C6EDC5844115]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Realtime Monitor' type='sheet'>
        <exclude-sheet name='GDP per Capita Monitor' />
        <exclude-sheet name='Healthcare Expenditure Monitor' />
        <exclude-sheet name='Public Share Healthcare Expenditure Monitor' />
        <exclude-sheet name='Title Monitor' />
      </source>
      <link caption='Top Ten Filter' delimiter=',' escape='\' expression='tsl:Realtime%20Monitor?%5Bfederated.1nxw1zu0p0shoi149v20w0e9qdsb%5D.%5BCountry%20name%5D~s0=&lt;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Early Childhood Mortality Monitor,Title Monitor,Life Expectancy Monitor,Maternal Mortality Monitor' />
        <param name='target' value='Realtime Monitor' />
      </command>
    </action>
    <action caption='GDP Nation' name='[Action1_9E91F5CA689940819F709EB6B135B55D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Western Biases in GDP' type='sheet'>
        <exclude-sheet name='Legend Selection' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Legend Selection' />
        <param name='field-captions' value='Country name' />
        <param name='target' value='Western Biases in GDP' />
      </command>
    </action>
    <action caption='GDP Legend to Nation' name='[Action4_CFA4C223CEC64DDCA0EA8123637EA6C9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Western Biases in GDP' type='sheet' worksheet='Legend Selection' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Geopolitical Jurisdiction' />
        <param name='target' value='Western Biases in GDP' />
      </command>
    </action>
    <action caption='GDP Nation to Legend' name='[Action5_36687FDC638F41A7A40D7983D57A7B20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Western Biases in GDP' type='sheet'>
        <exclude-sheet name='Legend Selection' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Expected versus Actual Share of GDP,Nation Selection' />
        <param name='field-captions' value='Geopolitical Jurisdiction' />
        <param name='target' value='Western Biases in GDP' />
      </command>
    </action>
    <action caption='Life Expectancy Nation' name='[Action6_D6C641C78DC74A01AEC6193CD74A4113]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Western Biases in Health Disparity' type='sheet'>
        <exclude-sheet name='Legend Selection' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Legend Selection' />
        <param name='field-captions' value='Country name' />
        <param name='target' value='Western Biases in Health Disparity' />
      </command>
    </action>
    <action caption='Life Expectancy Nation to Legend' name='[Action7_EFA99D5667484F02A2F3C2413BBDB793]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Western Biases in Health Disparity' type='sheet'>
        <exclude-sheet name='Legend Selection' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='GDP Lorenz Curve Parameterized by Life Expectancy,Nation Selection' />
        <param name='field-captions' value='Geopolitical Jurisdiction' />
        <param name='target' value='Western Biases in Health Disparity' />
      </command>
    </action>
    <action caption='Life Expectancy Legend to Nation' name='[Action8_D5A59CE43A364943B6190CC87EE8E519]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Western Biases in Health Disparity' type='sheet' worksheet='Legend Selection' />
      <command command='tsc:brush'>
        <param name='exclude' value='Legend Selection' />
        <param name='field-captions' value='Geopolitical Jurisdiction' />
        <param name='target' value='Western Biases in Health Disparity' />
      </command>
    </action>
    <action caption='Top Ten Highlight' name='[Action9_4ABC4142505A41A281F60B7460D17D90]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Realtime Monitor' type='sheet'>
        <exclude-sheet name='GDP per Capita Monitor' />
        <exclude-sheet name='Healthcare Expenditure Monitor' />
        <exclude-sheet name='Public Share Healthcare Expenditure Monitor' />
        <exclude-sheet name='Title Monitor' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='GDP per Capita Monitor,Healthcare Expenditure Monitor,Public Share Healthcare Expenditure Monitor,Title Monitor' />
        <param name='field-captions' value='Country name' />
        <param name='target' value='Realtime Monitor' />
      </command>
    </action>
    <datasources>
      <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
    </datasources>
    <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
      <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
          <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
          <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
        </aliases>
      </column>
    </datasource-dependencies>
    <edit-group-action caption='GDP Legend' name='[Action3_43BC6C6E61434EA7BC57F87117A1AB03]'>
      <activation type='on-select' />
      <source dashboard='Western Biases in GDP' type='sheet' worksheet='Legend Selection' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='add' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Portrayal Selected]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Life Expectency Legend' name='[Action5_2C4A7593999C401497364FCDA67AA0FB]'>
      <activation type='on-select' />
      <source dashboard='Western Biases in Health Disparity' type='sheet' worksheet='Legend Selection' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='add' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Portrayal Selected]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Change in Life Expectancy'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Anotate Life Expectancy Change' datatype='real' name='[Calculation_2243637104270684160]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Change is current minus previsou. We will do this&#13;&#10;// with a table calculation that references the previous&#13;&#10;// aggregate value in the display.&#13;&#10;&#13;&#10;// Current value is the life expectancy&#13;&#10;AVG([Period life expectancy at birth - Sex: all - Age: 0]) -&#13;&#10;&#13;&#10;// The previous value of life expectancy, from the preceeding year&#13;&#10;LOOKUP(&#13;&#10;    AVG([Period life expectancy at birth - Sex: all - Age: 0]),&#13;&#10;&#13;&#10;    // we step one year backwards&#13;&#10;    -1&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Code (life-expectancy.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Avg' name='[avg:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2243637104270684160]' derivation='User' name='[usr:Calculation_2243637104270684160:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (life-expectancy.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country name:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:Country name:nk]' member='&quot;Rwanda&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (life-expectancy.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_2243637104270684160:qk]' max='5.0' min='-5.0' palette='Viridis' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_2243637104270684160:qk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-table' tooltip='COVID' tooltip-type='custom' value='2020' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' scope='per-table' tooltip='Rwandan Genocide' tooltip-type='custom' value='1994' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' z-order='2' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='none' scope='per-pane' tooltip='Yom Kippur War' tooltip-type='custom' value='1973' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' z-order='3' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='none' scope='per-pane' tooltip='Bosnian Genocide' tooltip-type='custom' value='1992' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' z-order='4' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label-type='none' scope='per-pane' tooltip='Height of Soviet Occupation of Afghanistan' tooltip-type='custom' value='1984' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' z-order='5' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='none' scope='per-pane' tooltip='Six Day War' tooltip-type='custom' value='1967' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1104972362518311' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[avg:Period life expectancy at birth - Sex: all - Age: 0:qk]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{FCACEE28-33DD-4467-8A43-DF7A0BC3253F}' />
    </worksheet>
    <worksheet name='Early Childhood Mortality Monitor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Early Childhood Mortality</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>deaths per 100 childern under 5</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column datatype='string' name='[Code (child-mortality-igme.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Early Childhood Mortality Rank' datatype='integer' name='[Maternal Mortalitiy Rank (copy)_223491193963659269]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]), &quot;desc&quot;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Observation value - Unit of measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal' datatype='real' name='[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal]' derivation='Sum' name='[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Maternal Mortalitiy Rank (copy)_223491193963659269]' derivation='User' name='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (child-mortality-igme.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (child-mortality-igme.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' field-type='quantitative' major-origin='0.0' major-spacing='10.0' max='30.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' scope='cols' value='false' />
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' value='24' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' value='30' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]> ]]></run>
                <run bold='true' fontcolor='#e15759' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]> ]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-color' value='#bdb5b1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'>Æ </run>
                <run bold='true' fontcolor='#ae123a' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Maternal Mortalitiy Rank (copy)_223491193963659269:ok:2]</rows>
        <cols>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Observation value - Unit_of_measure: Deaths per 100 live births - Indicator: Under-five mortality rate - Sex: Both sexes - Weal:qk])</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{BF9EDEA8-A0F4-4524-83EE-AA0077B5308B}' />
    </worksheet>
    <worksheet name='Expected versus Actual Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
              <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column datatype='real' name='[Annual greenhouse gas emissions in CO₂ equivalents]' role='measure' type='quantitative' />
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Actual Emissions (%)' datatype='real' name='[Calculation_1846475894445051904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * ABS([Annual greenhouse gas emissions in CO₂ equivalents]) /&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (total-ghg-emissions.csv)],&#13;&#10;        [Year] :&#13;&#10;        SUM(ABS([Annual greenhouse gas emissions in CO₂ equivalents]))&#13;&#10;}' />
            </column>
            <column datatype='string' name='[Code (total-ghg-emissions.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Expected Emissions (%)' datatype='real' name='[Expected GDP (%) (copy)_1522498206918639618]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (total-ghg-emissions.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1846475894445051904]' derivation='None' name='[none:Calculation_1846475894445051904:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expected GDP (%) (copy)_1522498206918639618]' derivation='None' name='[none:Expected GDP (%) (copy)_1522498206918639618:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1846475894445051904:qk]' field-type='quantitative' max='100.0' min='9.9999999999999995e-07' range-type='fixed' scale='log' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1846475894445051904:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk]' field-type='quantitative' max='100.0' min='9.9999999999999995e-07' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk]' scope='rows' value='false' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='tick-color' value='#b4b4b4' />
            <format attr='stroke-color' value='#b4b4b4' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1846475894445051904:qk]' value='n#,##0.00000;-#,##0.00000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1846475894445051904:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1846475894445051904:qk]>%]]></run>
                <run fontcolor='#787878'> of greenhouse gas emissions, and was expected to account for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk]>%]]></run>
                <run fontcolor='#787878'> based solely on activity estimated from population. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[Parameters].[Parameter 1]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1846475894445051904:qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk])</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected GDP (%) (copy)_1522498206918639618:qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-color='#00000041' lines='true' mark-color='#9bafc1' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{C33B0571-CCEF-48FB-9079-FC5E9467AF87}' />
    </worksheet>
    <worksheet name='Expected versus Actual Energy'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
              <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual Energy (%)' datatype='real' name='[Actual Emissions (%) (copy)_1522498206914596864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * ABS([Primary energy consumption (TWh)]) /&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation Set],&#13;&#10;        [Year] :&#13;&#10;        SUM(ABS([Primary energy consumption (TWh)]))&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column datatype='string' name='[Code (primary-energy-cons.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Expected Energy (%)' datatype='real' name='[Expected Emissions (%) (copy)_1522498206923276291]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation Set],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Primary energy consumption (TWh)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Actual Emissions (%) (copy)_1522498206914596864]' derivation='None' name='[none:Actual Emissions (%) (copy)_1522498206914596864:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expected Emissions (%) (copy)_1522498206923276291]' derivation='None' name='[none:Expected Emissions (%) (copy)_1522498206923276291:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='render-fold-reversed' value='true' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk]' field-type='quantitative' max='100.0' min='9.9999999999999995e-07' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Actual Emissions (%) (copy)_1522498206914596864:qk]' field-type='quantitative' max='100.0' min='9.9999999999999995e-07' range-type='fixed' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Actual Emissions (%) (copy)_1522498206914596864:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Actual Emissions (%) (copy)_1522498206914596864:qk]>%]]></run>
                <run fontcolor='#787878'> of energy consumption, and was expected to account for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk]>%]]></run>
                <run fontcolor='#787878'> based solely on activity estimated from population. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95552486181259155' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[Parameters].[Parameter 1]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Actual Emissions (%) (copy)_1522498206914596864:qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk])</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Expected Emissions (%) (copy)_1522498206923276291:qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-color='#00000041' line-stroke-width='2' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{D2DC0486-73DF-4284-8810-3B2E1F07D6C8}' />
    </worksheet>
    <worksheet name='Expected versus Actual Share of GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
              <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual GDP (%)' datatype='real' name='[Calculation_1622984762593579008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// This is a percent so multiply the numerator of GDP by 100&#13;&#10;100 * [GDP (output, multiple price benchmarks)] /&#13;&#10;&#13;&#10;// Denominator sums over all the numerators,&#13;&#10;// the nations with valid GDP in each year.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid records and year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only valid records&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Expected GDP ($)' datatype='real' name='[Calculation_1875186347389554689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Total actual GDP in  a year over all nations&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year]:&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}&#13;&#10;&#13;&#10;// Expected share of the total&#13;&#10;* [Calculation_1622984762593660929] / 100' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1622984762593579008]' derivation='None' name='[none:Calculation_1622984762593579008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1622984762593660929]' derivation='None' name='[none:Calculation_1622984762593660929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1875186347389554689]' derivation='Sum' name='[sum:Calculation_1875186347389554689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (output, multiple price benchmarks)]' derivation='Sum' name='[sum:GDP (output, multiple price benchmarks):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]' field-type='quantitative' max='100.0' min='1.0000000000000001e-05' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk]' field-type='quantitative' max='100.0' min='1.0000000000000001e-05' range-type='fixed' scale='log' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]' field-type='quantitative' fold='true' max='100.0' min='1.0e-10' range-type='fixed' scale='log' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk]' scope='rows' value='true' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='tick-color' value='#e6e6e6' />
            <format attr='stroke-color' value='#e6e6e6' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]' value='c&quot;$&quot;#,##0,,,B;&quot;$&quot;-#,##0,,,B' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]' value='c&quot;$&quot;#,##0,,,B;&quot;$&quot;-#,##0,,,B' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='0' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk]' value='Tableau Book' />
            <format attr='font-weight' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk]' value='bold' />
            <format attr='font-family' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]' value='Tableau Book' />
            <format attr='font-weight' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
              <tooltip column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]' />
              <tooltip column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]> <[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]>]]></run>
                <run fontcolor='#787878'> of global GDP, and was expected to account for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]>]]></run>
                <run fontcolor='#787878'> based solely on activity estimated from population. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[Parameters].[Parameter 1]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-transparency' value='129' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk])</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='99' line-color='#4e79a741' line-stroke-width='2' lines='true' mark-color='#4e79a7' mark-type='all' marks='false' start='73' trail-effect='none' />
      </table>
      <simple-id uuid='{6648A3F0-8DBF-4F64-A590-41A1524D04D3}' />
    </worksheet>
    <worksheet name='GDP Lorenz Curve Coloured by Life Expectancy'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
              <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual GDP (%)' datatype='real' name='[Calculation_1622984762593579008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// This is a percent so multiply the numerator of GDP by 100&#13;&#10;100 * [GDP (output, multiple price benchmarks)] /&#13;&#10;&#13;&#10;// Denominator sums over all the numerators,&#13;&#10;// the nations with valid GDP in each year.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid records and year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only valid records&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year (life-expectancy.csv)]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:38]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
                <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:40]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
                <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[cum:sum:Calculation_1622984762593660929:qk:5]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
                <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (life-expectancy.csv)]' derivation='None' name='[none:Year (life-expectancy.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[sum:Calculation_1622984762593579008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[sum:Calculation_1622984762593660929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:40]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk:5]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:40]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk:5]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' max='80.0' min='40.0' palette='Viridis' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-right' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-right' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              <size column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]' />
              <tooltip column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]' />
              <tooltip column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (life-expectancy.csv):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> had a life expectancy of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'>, accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]>%]]></run>
                <run fontcolor='#787878'> of global GDP, and was expected to account for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]>%]]></run>
                <run fontcolor='#787878'> based solely on activity estimated from population. Nations with a life expectancy less than or equal to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]>%]]></run>
                <run fontcolor='#787878'> of the global GDP, and were expected to account </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]>%]]></run>
                <run fontcolor='#787878'>. The colouring illustrates life expectancy.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run>&lt;</run>
                <run>[Parameters].[Parameter 1]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-markers-mode' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk:5] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38])</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:40]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{E1A7236E-AD15-41E4-9BC0-CC60F3D6E791}' />
    </worksheet>
    <worksheet name='GDP Lorenz Curve Parameterized by Life Expectancy'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
              <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual GDP (%)' datatype='real' name='[Calculation_1622984762593579008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// This is a percent so multiply the numerator of GDP by 100&#13;&#10;100 * [GDP (output, multiple price benchmarks)] /&#13;&#10;&#13;&#10;// Denominator sums over all the numerators,&#13;&#10;// the nations with valid GDP in each year.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid records and year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only valid records&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Year (life-expectancy.csv)]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:38]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
                <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[cum:sum:Calculation_1622984762593579008:qk:41]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Portrayal for GDP (copy)_2687523132076060687]' />
                <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[cum:sum:Calculation_1622984762593660929:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Field' type='CumTotal'>
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year (life-expectancy.csv)]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' />
                <order field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Portrayal for GDP (copy)_2687523132076060687]' />
                <sort direction='ASC' using='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (life-expectancy.csv)]' derivation='None' name='[none:Year (life-expectancy.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1622984762593579008]' derivation='Sum' name='[sum:Calculation_1622984762593579008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1622984762593660929]' derivation='Sum' name='[sum:Calculation_1622984762593660929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]' scope='rows' value='false' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:41]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:41]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-right' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]>]]></run>
                <run fontcolor='#787878'> had a life expectancy of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'>, accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]>%]]></run>
                <run fontcolor='#787878'> of global GDP, and was expected to account for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]>%]]></run>
                <run fontcolor='#787878'> based solely on activity estimated from population. Nations with a life expectancy less than or equal to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:41]>]]></run>
                <run bold='true'>%</run>
                <run fontcolor='#787878'> of the global GDP, and were expected to account </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk]>]]></run>
                <run bold='true'>%</run>
                <run fontcolor='#787878'>. The colouring illustrates the biases in GDP valuation due to the </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'> of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5' />
                <format attr='has-stroke' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-right' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' />
              <size column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]' />
              <tooltip column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]' />
              <tooltip column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (life-expectancy.csv):qk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> had a life expectancy of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'>, accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593579008:qk]>%]]></run>
                <run fontcolor='#787878'> of global GDP, and was expected to account for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1622984762593660929:qk]>%]]></run>
                <run fontcolor='#787878'> based solely on activity estimated from population. Nations with a life expectancy less than or equal to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:41]>%]]></run>
                <run fontcolor='#787878'> of the global GDP, and were expected to account </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk]>%]]></run>
                <run fontcolor='#787878'>. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5' />
                <format attr='has-stroke' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run>&lt;</run>
                <run>[Parameters].[Parameter 1]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593660929:qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:38])</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[cum:sum:Calculation_1622984762593579008:qk:41]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options trail-effect='none' />
      </table>
      <simple-id uuid='{13E75EDE-5819-4DF4-9646-D1A37412CBBA}' />
    </worksheet>
    <worksheet name='GDP per Capita Monitor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>GDP per Capita</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>actual</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>expected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Dial Axis' datatype='real' name='[Apply Logarithm (copy 2)]' param-domain-type='list' role='measure' type='quantitative' value='0.'>
              <calculation class='tableau' formula='0.' />
            </column>
            <column caption='Dial Gap' datatype='real' default-format='p0%' name='[Apply Logarithm (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.24999999999999994'>
              <calculation class='tableau' formula='0.24999999999999994' />
              <range granularity='0.01' max='0.9' min='0.1' />
            </column>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Expected GDP per Capita ($)' datatype='real' name='[Actual GDP per Capita ($) (copy)_1706301372692803598]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1875186347389554689]) / SUM([Population])' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Actual GDP per Capita ($)' datatype='real' name='[Calculation_1706301372692656141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([GDP (output, multiple price benchmarks)]) / SUM([Population])' />
            </column>
            <column caption='Dial GDP Ratio' datatype='real' name='[Calculation_1706301372770754586]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    [Calculation_1706301372692656141]&#13;&#10;) /&#13;&#10;MAX(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    [Calculation_1706301372692656141]&#13;&#10;)' />
            </column>
            <column caption='Dial GDP Left Lower' datatype='real' name='[Calculation_1706301372775272476]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    [Calculation_1706301372770754586]&#13;&#10;)' />
            </column>
            <column caption='Actual GDP Over ($)' datatype='real' name='[Calculation_1706301372781551648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Calculation_1706301372692656141] &gt; [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    [Calculation_1706301372692656141],&#13;&#10;    NULL&#13;&#10;)' />
            </column>
            <column caption='Expected GDP ($)' datatype='real' name='[Calculation_1875186347389554689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Total actual GDP in  a year over all nations&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year]:&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}&#13;&#10;&#13;&#10;// Expected share of the total&#13;&#10;* [Calculation_1622984762593660929] / 100' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Actual GDP Under ($)' datatype='real' name='[GDP Actual Over ($) (copy)_1706301372781801505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Calculation_1706301372692656141] &gt; [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    NULL,&#13;&#10;    [Calculation_1706301372692656141]&#13;&#10;)' />
            </column>
            <column caption='Expected GDP Over ($)' datatype='real' name='[GDP Actual Over ($) (copy)_1706301372782866466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598] &gt; [Calculation_1706301372692656141],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598],&#13;&#10;    NULL&#13;&#10;)' />
            </column>
            <column caption='Expected GDP Under ($)' datatype='real' name='[GDP Actual Under ($) (copy)_1706301372782891043]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598] &gt; [Calculation_1706301372692656141],&#13;&#10;    NULL,&#13;&#10;    [Actual GDP per Capita ($) (copy)_1706301372692803598]&#13;&#10;)' />
            </column>
            <column caption='Dial GDP Left Upper' datatype='real' name='[GDP Gauge Left Lower (copy)_1706301372775911453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    0.5 - [Calculation_1706301372770754586]&#13;&#10;)' />
            </column>
            <column caption='Dial GDP Right Upper' datatype='real' name='[GDP Gauge Left Lower (copy)_1706301372776235038]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    1.0 - [Calculation_1706301372770754586]&#13;&#10;)' />
            </column>
            <column caption='Dial GDP Right Lower' datatype='real' name='[GDP Gauge Right Upper (copy)_1706301372777091103]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    [Calculation_1706301372770754586] - 0.5&#13;&#10;)' />
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1706301372775272476]' derivation='User' name='[usr:Calculation_1706301372775272476:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1706301372781551648]' derivation='User' name='[usr:Calculation_1706301372781551648:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Actual Over ($) (copy)_1706301372781801505]' derivation='User' name='[usr:GDP Actual Over ($) (copy)_1706301372781801505:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Actual Over ($) (copy)_1706301372782866466]' derivation='User' name='[usr:GDP Actual Over ($) (copy)_1706301372782866466:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Actual Under ($) (copy)_1706301372782891043]' derivation='User' name='[usr:GDP Actual Under ($) (copy)_1706301372782891043:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Gauge Left Lower (copy)_1706301372775911453]' derivation='User' name='[usr:GDP Gauge Left Lower (copy)_1706301372775911453:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Gauge Left Lower (copy)_1706301372776235038]' derivation='User' name='[usr:GDP Gauge Left Lower (copy)_1706301372776235038:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Gauge Right Upper (copy)_1706301372777091103]' derivation='User' name='[usr:GDP Gauge Right Upper (copy)_1706301372777091103:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Right Upper (copy)_1706301372777091103:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1706301372776235038:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Apply Logarithm (copy)]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372775272476:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1706301372775911453:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Right Upper (copy)_1706301372777091103:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1706301372776235038:qk]&quot;</bucket>
              <bucket>&quot;[Parameters].[Apply Logarithm (copy)]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372775272476:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1706301372775911453:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Action (Country name)]'>
            <groupfilter function='level-members' level='[Country name]' user:ui-action-filter='[Action10_1E4641D98BD44B658176C6EDC5844115]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Action (Country name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Parameters].[Apply Logarithm (copy 2)]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[Parameters].[Apply Logarithm (copy 2)]' scope='cols' value='false' />
            <format attr='display' class='0' field='[Parameters].[Apply Logarithm (copy 2)]' scope='cols' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_1706301372781801505:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372781551648:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_1706301372782866466:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Under ($) (copy)_1706301372782891043:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Parameters].[Apply Logarithm (copy 2)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' />
              <wedge-size column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[Parameters].[Apply Logarithm (copy 2)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_1706301372781801505:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372781551648:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Under ($) (copy)_1706301372782891043:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_1706301372782866466:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#bdb5b1'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_1706301372781801505:qk]>]]></run>
                <run>Æ </run>
                <run fontcolor='#ae123a'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1706301372781551648:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#bdb5b1'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Under ($) (copy)_1706301372782891043:qk]>]]></run>
                <run fontcolor='#ae123a'><![CDATA[ <[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_1706301372782866466:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([Parameters].[Apply Logarithm (copy 2)] + [Parameters].[Apply Logarithm (copy 2)])</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{9AB21DFB-73C6-4C4B-91BB-D8C715880EF0}' />
    </worksheet>
    <worksheet name='GDP versus Population Parameterized by Life Expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Line of Equality' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Line of Equality&quot;'>
              <calculation class='tableau' formula='&quot;Line of Equality&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Cumulative GDP (%)' datatype='real' name='[Calculation_290482225320062990]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 *&#13;&#10;RUNNING_SUM((SUM([GDP (output, multiple price benchmarks)]))) /&#13;&#10;TOTAL(SUM([GDP (output, multiple price benchmarks)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Cumulative Population (%)' datatype='real' name='[Cumulative GDP (%) (copy)_290482225321373711]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 *&#13;&#10;RUNNING_SUM((SUM([Population]))) /&#13;&#10;TOTAL(SUM([Population]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='None' name='[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_290482225320062990]' derivation='User' name='[usr:Calculation_290482225320062990:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Period life expectancy at birth - Sex: all - Age: 0]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Cumulative GDP (%) (copy)_290482225321373711]' derivation='User' name='[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Period life expectancy at birth - Sex: all - Age: 0]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'> nations with a life expectancy of less than or equal to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]>]]></run>
                <run fontcolor='#787878'> years accounted for of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3]>%]]></run>
                <run fontcolor='#787878'> the population and </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]>%]]></run>
                <run fontcolor='#787878'> of the GDP.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;</run>
                <run>[Parameters].[Parameter 1]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (%) (copy)_290482225321373711:qk:3] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3])</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk:3]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{324E4C57-5F50-4E27-95CD-1A4D388DF639}' />
    </worksheet>
    <worksheet name='Geometric Change in Population and GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Population Marginal Rate' datatype='real' name='[Calculation_2243637104275329027]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(&#13;&#10;&#13;&#10;    // Current log of population&#13;&#10;    LOG(SUM([Population])) -&#13;&#10;&#13;&#10;    // Previous log of population&#13;&#10;    LOG(LOOKUP(SUM([Population]), -1))&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='GDP Marginal Rate' datatype='real' name='[Percent Change Population (copy)_2243637104276103172]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(&#13;&#10;&#13;&#10;    // Current log of GDP&#13;&#10;    LOG(SUM([GDP (output, multiple price benchmarks)])) -&#13;&#10;&#13;&#10;    // Previous log of GDP&#13;&#10;    LOG(LOOKUP(SUM([GDP (output, multiple price benchmarks)]), -1))&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2243637104275329027]' derivation='User' name='[usr:Calculation_2243637104275329027:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Percent Change Population (copy)_2243637104276103172]' derivation='User' name='[usr:Percent Change Population (copy)_2243637104276103172:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Year]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='density-kernel-size' value='2' />
                <encoding attr='density-color' palette='Viridis' type='interpolated' />
                <format attr='density-intensity' value='0.029787063598632812' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Percent Change Population (copy)_2243637104276103172:qk:2]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_2243637104275329027:qk:5]</cols>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{9B024425-8F1C-4FDB-A110-88E2C34EEE7F}' />
    </worksheet>
    <worksheet name='Healthcare Expenditure Monitor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Total Healthcare Expenditure per Capita</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>actual</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>expected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Dial Axis' datatype='real' name='[Apply Logarithm (copy 2)]' param-domain-type='list' role='measure' type='quantitative' value='0.'>
              <calculation class='tableau' formula='0.' />
            </column>
            <column caption='Total Healthcare Target' datatype='real' default-format='p0%' name='[Apply Logarithm (copy 3)]' param-domain-type='range' role='measure' type='quantitative' value='0.099999999999999992'>
              <calculation class='tableau' formula='0.099999999999999992' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Dial Gap' datatype='real' default-format='p0%' name='[Apply Logarithm (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.24999999999999994'>
              <calculation class='tableau' formula='0.24999999999999994' />
              <range granularity='0.01' max='0.9' min='0.1' />
            </column>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual Total Healthcare per Capita ($)' datatype='real' name='[Actual GDP per Capita ($) (copy)_1950903127782686721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// For one or more nations total the actual percent of GDP multiplied&#13;&#10;// by the actual GDP, and then divided by the total population in the&#13;&#10;// selected nations.&#13;&#10;SUM(&#13;&#10;    [Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)] *&#13;&#10;    [GDP (output, multiple price benchmarks)]&#13;&#10;) /&#13;&#10;( &#13;&#10;    100 * SUM([Population])&#13;&#10;)' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Expected GDP ($)' datatype='real' name='[Calculation_1875186347389554689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Total actual GDP in  a year over all nations&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year]:&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}&#13;&#10;&#13;&#10;// Expected share of the total&#13;&#10;* [Calculation_1622984762593660929] / 100' />
            </column>
            <column caption='Dial Total Healthcare Right Lower' datatype='real' name='[Calculation_1950903127781912576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant immediately right of 12 o&apos;clock on the dial.&#13;&#10;// The remainder of the healthcare ratio that was greater than 50%,&#13;&#10;// truncated from below by 0 to ensure that the wedge vanishes&#13;&#10;// when the ratio is less than 50%.&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    [GDP Gauge Ratio (copy)_1950903127786426371] - 0.5&#13;&#10;)' />
            </column>
            <column datatype='string' name='[Code (total-healthcare-expenditure-gdp.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Expected Total Healthcare per Capita ($)' datatype='real' name='[Expected GDP per Capita ($) (copy)_1950903127783223298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// For one or more nations total the target percent of GDP multiplied&#13;&#10;// by the expected GDP, and then divided by the total population in the&#13;&#10;// selected nations.&#13;&#10;SUM(&#13;&#10;    [Parameters].[Apply Logarithm (copy 3)] *&#13;&#10;    [Calculation_1875186347389554689]&#13;&#10;) /&#13;&#10;SUM([Population])' />
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Actual Total Healthcare Over ($)' datatype='real' name='[GDP Actual Over ($) (copy)_289637815310094336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Display the value of the actual total healthcare expenditure per&#13;&#10;// capita, if the value exceeds the expected expenditure.&#13;&#10;IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721] &gt; [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721],&#13;&#10;    NULL&#13;&#10;)' />
            </column>
            <column caption='Actual Total Healthcare Under ($)' datatype='real' name='[GDP Actual Under ($) (copy)_289637815310254081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Display the value of the actual total healthcare expenditure per&#13;&#10;// capita, if the value is less than or equal to the expected expenditure.&#13;&#10;IIF(&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721] &gt; [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    NULL,&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721]&#13;&#10;)' />
            </column>
            <column caption='Expected Total Healthcare Over ($)' datatype='real' name='[GDP Expected Over ($) (copy)_289637815310708738]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Display the value of the expected total healthcare expenditure per&#13;&#10;// capita, if the value exceeds to the actual expenditure.&#13;&#10;IIF(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298] &gt; [Actual GDP per Capita ($) (copy)_1950903127782686721],&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    NULL&#13;&#10;)' />
            </column>
            <column caption='Expected Total Healthcare Under ($)' datatype='real' name='[GDP Expected Under ($) (copy)_289637815310860291]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Display the value of the expected total healthcare expenditure per&#13;&#10;// capita, if the value is less than or equal to the actual expenditure.&#13;&#10;IIF(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298] &gt; [Actual GDP per Capita ($) (copy)_1950903127782686721],&#13;&#10;    NULL,&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298]&#13;&#10;)' />
            </column>
            <column caption='Dial Total Healthcare Left Lower' datatype='real' name='[GDP Gauge Left Lower (copy)_1950903127789187077]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant furthest left of 12 o&apos;clock on the dial.&#13;&#10;// The healthcare ratio truncated from above by 50% to &#13;&#10;// ensure the wedge stays to the left of 12 o&apos;clock.&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    [GDP Gauge Ratio (copy)_1950903127786426371]&#13;&#10;)' />
            </column>
            <column caption='Dial Total Healthcare Left Upper' datatype='real' name='[GDP Gauge Left Upper (copy)_1950903127789617158]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant immediately left of 12 o&apos;clock on the dial.&#13;&#10;// The remainder of the unobtained healthcare ratio that &#13;&#10;// was greater than 50%, truncated from below by 0 to ensure&#13;&#10;// that the wedge vanishes when the ratio is greater than 50%.&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    0.5 - [GDP Gauge Ratio (copy)_1950903127786426371]&#13;&#10;)' />
            </column>
            <column caption='Dial Total Healthcare Ratio' datatype='real' name='[GDP Gauge Ratio (copy)_1950903127786426371]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// For nations that allocate more GDP per capita to healthcare&#13;&#10;// than expected return the excess allocation ratio. For nations&#13;&#10;// that allocate less GDP per capital to healthcare than expected&#13;&#10;// return the under allocation ratio.&#13;&#10;MIN(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721]&#13;&#10;) /&#13;&#10;MAX(&#13;&#10;    [Expected GDP per Capita ($) (copy)_1950903127783223298],&#13;&#10;    [Actual GDP per Capita ($) (copy)_1950903127782686721]&#13;&#10;)' />
            </column>
            <column caption='Dial Total Healthcare Right Upper' datatype='real' name='[GDP Gauge Right Upper (copy)_1950903127788273668]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Proportion of the dial reserved to display the ratio.&#13;&#10;(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;&#13;&#10;// The quadrant furthest right of 12 o&apos;clock on the dial.&#13;&#10;// The unobtained healthcare ratio truncated from above by 50%&#13;&#10;// to ensure the wedge stays to the right of 12 o&apos;clock.&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    1.0 - [GDP Gauge Ratio (copy)_1950903127786426371]&#13;&#10;)' />
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1950903127781912576]' derivation='User' name='[usr:Calculation_1950903127781912576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Actual Over ($) (copy)_289637815310094336]' derivation='User' name='[usr:GDP Actual Over ($) (copy)_289637815310094336:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Actual Under ($) (copy)_289637815310254081]' derivation='User' name='[usr:GDP Actual Under ($) (copy)_289637815310254081:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Expected Over ($) (copy)_289637815310708738]' derivation='User' name='[usr:GDP Expected Over ($) (copy)_289637815310708738:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Expected Under ($) (copy)_289637815310860291]' derivation='User' name='[usr:GDP Expected Under ($) (copy)_289637815310860291:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Gauge Left Lower (copy)_1950903127789187077]' derivation='User' name='[usr:GDP Gauge Left Lower (copy)_1950903127789187077:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Gauge Left Upper (copy)_1950903127789617158]' derivation='User' name='[usr:GDP Gauge Left Upper (copy)_1950903127789617158:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Gauge Right Upper (copy)_1950903127788273668]' derivation='User' name='[usr:GDP Gauge Right Upper (copy)_1950903127788273668:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1950903127781912576:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Right Upper (copy)_1950903127788273668:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Apply Logarithm (copy)]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Lower (copy)_1950903127789187077:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Left Upper (copy)_1950903127789617158:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_1950903127781912576:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Gauge Right Upper (copy)_1950903127788273668:qk]&quot;</bucket>
              <bucket>&quot;[Parameters].[Apply Logarithm (copy)]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Action (Country name)]'>
            <groupfilter function='level-members' level='[Country name]' user:ui-action-filter='[Action10_1E4641D98BD44B658176C6EDC5844115]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-healthcare-expenditure-gdp.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-healthcare-expenditure-gdp.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Action (Country name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Parameters].[Apply Logarithm (copy 2)]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[Parameters].[Apply Logarithm (copy 2)]' scope='cols' value='false' />
            <format attr='display' class='0' field='[Parameters].[Apply Logarithm (copy 2)]' scope='cols' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_289637815310094336:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Under ($) (copy)_289637815310254081:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Expected Over ($) (copy)_289637815310708738:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Expected Under ($) (copy)_289637815310860291:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[Parameters].[Apply Logarithm (copy 2)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' />
              <wedge-size column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Multiple Values]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[Parameters].[Apply Logarithm (copy 2)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_289637815310094336:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Under ($) (copy)_289637815310254081:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Expected Under ($) (copy)_289637815310860291:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Expected Over ($) (copy)_289637815310708738:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#bdb5b1'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Under ($) (copy)_289637815310254081:qk]>]]></run>
                <run>Æ </run>
                <run fontcolor='#ae123a'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Actual Over ($) (copy)_289637815310094336:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#bdb5b1'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Expected Under ($) (copy)_289637815310860291:qk]>]]></run>
                <run>Æ </run>
                <run fontcolor='#ae123a'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:GDP Expected Over ($) (copy)_289637815310708738:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='16' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([Parameters].[Apply Logarithm (copy 2)] + [Parameters].[Apply Logarithm (copy 2)])</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B292DAA4-1CB0-4DE0-8C72-FE7F07B88A12}' />
    </worksheet>
    <worksheet name='Legend Selection'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Book' fontsize='12'>&lt;Page Name&gt; Actual / Expected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Legend Width' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Expected GDP ($)' datatype='real' name='[Calculation_1875186347389554689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Total actual GDP in  a year over all nations&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year]:&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}&#13;&#10;&#13;&#10;// Expected share of the total&#13;&#10;* [Calculation_1622984762593660929] / 100' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1875186347389554689]' derivation='Sum' name='[sum:Calculation_1875186347389554689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (output, multiple price benchmarks)]' derivation='Sum' name='[sum:GDP (output, multiple price benchmarks):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='display' class='0' field='[Parameters].[Parameter 2]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' value='54' />
            <format attr='width' value='249' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='center' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]' value='*&quot;$&quot;# ##0,,,B;(&quot;$&quot; ,##0,,,B)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]' value='*&quot;$&quot;# ##0,,,B;(&quot;$&quot;# ##0,,,B)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:GDP (output, multiple price benchmarks):qk]> / <[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Calculation_1875186347389554689:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='162' />
                <format attr='maxheight' value='162' />
                <format attr='minwidth' value='307' />
                <format attr='maxwidth' value='307' />
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</rows>
        <cols>[Parameters].[Parameter 2]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{E2ABAF41-530C-4CC2-B839-C43136D5EE82}' />
    </worksheet>
    <worksheet name='Life Expectancy Monitor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Life Expectancy</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Life Expectancy Rank' datatype='integer' name='[Calculation_223491193951797248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Period life expectancy at birth - Sex: all - Age: 0]), &quot;asc&quot;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='Sum' name='[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_223491193951797248]' derivation='User' name='[usr:Calculation_223491193951797248:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_223491193951797248:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_223491193951797248:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_223491193951797248:ok:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' field-type='quantitative' major-origin='0.0' major-spacing='25.0' max='100.0' min='0.0' minor-origin='0.0' minor-show='false' minor-spacing='1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' scope='cols' value='' />
            <encoding attr='space' class='1' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' scope='cols' value='false' />
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_223491193951797248:ok:2]' value='30' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_223491193951797248:ok:2]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]> ]]></run>
                <run bold='true' fontcolor='#e15759' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]> ]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-color' value='#bdb5b1' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'>Æ </run>
                <run bold='true' fontcolor='#ae123a' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#000000' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_223491193951797248:ok:2]</rows>
        <cols>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk])</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F891F3EA-1EEF-4ACE-8C1D-C5A7A37D2676}' />
    </worksheet>
    <worksheet name='Life Expectancy versus GDP Over Allocation'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual GDP (%)' datatype='real' name='[Calculation_1622984762593579008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// This is a percent so multiply the numerator of GDP by 100&#13;&#10;100 * [GDP (output, multiple price benchmarks)] /&#13;&#10;&#13;&#10;// Denominator sums over all the numerators,&#13;&#10;// the nations with valid GDP in each year.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid records and year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only valid records&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='GDP Allocation Ratio' datatype='real' name='[Calculation_618963520826253313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1622984762593579008] / [Calculation_1622984762593660929]' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_618963520826253313]' derivation='None' name='[none:Calculation_618963520826253313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='None' name='[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]' field-type='quantitative' max='40.0' min='0.02' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' field-type='quantitative' max='90.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-color' id='refline0' value='#00000081' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Line of Equality' label-type='custom' scope='per-table' tooltip='Line of Equality' tooltip-type='custom' value='1.0' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]' z-order='1' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='Gompertz Life Expectancy' label-type='custom' scope='per-table' tooltip='Gompertz Life Expectancy' tooltip-type='custom' value='87.0' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]> ]]></run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> had a life expectancy of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'> and received </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]>]]></run>
                <run fontcolor='#787878'> times the share of the global GDP that would be expected from population alone. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.97751379013061523' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options line-stroke-width='1' lines='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{D0FC828A-E0E5-4C4A-BE00-A0AAE8211B43}' />
    </worksheet>
    <worksheet name='Lost Life Expectancy versus GDP Over Allocation'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual GDP (%)' datatype='real' name='[Calculation_1622984762593579008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// This is a percent so multiply the numerator of GDP by 100&#13;&#10;100 * [GDP (output, multiple price benchmarks)] /&#13;&#10;&#13;&#10;// Denominator sums over all the numerators,&#13;&#10;// the nations with valid GDP in each year.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid records and year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only valid records&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Lost Life Expectancy (years)' datatype='real' name='[Calculation_562950001064153090]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='87 - [Period life expectancy at birth - Sex: all - Age: 0]' />
            </column>
            <column caption='GDP Allocation Ratio' datatype='real' name='[Calculation_618963520826253313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1622984762593579008] / [Calculation_1622984762593660929]' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_562950001064153090]' derivation='None' name='[none:Calculation_562950001064153090:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_618963520826253313]' derivation='None' name='[none:Calculation_618963520826253313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Favourable Western Portrayal&quot;</bucket>
              <bucket>&quot;Ambivalent Western Portrayal&quot;</bucket>
              <bucket>&quot;Stereotyped Western Portrayal&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]' field-type='quantitative' max='40.0' min='0.02' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]' field-type='quantitative' max='90.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-color' id='refline0' value='#00000081' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <reference-line axis-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Line of Equality' label-type='custom' scope='per-table' tooltip='Line of Equality' tooltip-type='custom' value='1.0' value-column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> had a lost life expectancy from the Gompertz upper limit of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]> years]]></run>
                <run fontcolor='#787878'> and received </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]>]]></run>
                <run fontcolor='#787878'> times the share of the global GDP that would be expected from population alone. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520826253313:qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options line-stroke-width='1' lines='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{5AC6285F-7DD9-46CE-B2FA-1BB7142F7203}' />
    </worksheet>
    <worksheet name='Lost Life Expectancy versus Public Expenditure'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Lost Life Expectancy (years)' datatype='real' name='[Calculation_562950001064153090]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='87 - [Period life expectancy at birth - Sex: all - Age: 0]' />
            </column>
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='real' name='[Domestic general government health expenditure (% of current health expenditure)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_562950001064153090]' derivation='None' name='[none:Calculation_562950001064153090:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Domestic general government health expenditure (% of current health expenditure)]' derivation='None' name='[none:Domestic general government health expenditure (% of current health expenditure):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]' field-type='quantitative' max='90.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Domestic general government health expenditure (% of current health expenditure):qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'>Æ </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> had a lost life expectancy from the Gompertz upper limit of </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]> years]]></run>
                <run fontcolor='#787878'> and managed </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Domestic general government health expenditure (% of current health expenditure):qk]>%]]></run>
                <run fontcolor='#787878'> of their total healthcare expenditure through public institutions. The colouring illustrates the biases in GDP valuation due to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001064153090:qk]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Domestic general government health expenditure (% of current health expenditure):qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options line-stroke-width='1' lines='true' mark-type='all' trail-effect='none' />
      </table>
      <simple-id uuid='{8C329A86-21B5-45C5-9FD5-6E80286229C1}' />
    </worksheet>
    <worksheet name='Maternal Mortality Monitor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Maternal Mortality</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>deaths per 100000 deliveries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column datatype='string' name='[Code (maternal-mortality.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Maternal Mortalitiy Rank' datatype='integer' name='[Life Expectancy Rank (copy)_223491193959448579]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]), &quot;desc&quot;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015))]' derivation='Sum' name='[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy Rank (copy)_223491193959448579]' derivation='User' name='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Country name]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (maternal-mortality.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (maternal-mortality.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' field-type='quantitative' major-origin='0.0' major-spacing='1000.0' max='3000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' scope='cols' value='' />
            <encoding attr='space' class='1' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' scope='cols' value='false' />
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' value='23' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]> ]]></run>
                <run bold='true' fontcolor='#e15759' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]> ]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-color' value='#bdb5b1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'>Æ </run>
                <run bold='true' fontcolor='#ae123a' fontsize='8'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#000000' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Life Expectancy Rank (copy)_223491193959448579:ok:2]</rows>
        <cols>([federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk] + [federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Maternal Mortality Ratio (Gapminder (2010) and World Bank (2015)):qk])</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F579B1C0-702D-43B6-87C9-066F00A83ACB}' />
    </worksheet>
    <worksheet name='Nation Selection'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Legend Option' datatype='string' name='[Portrayal for GDP (copy)_2687523132076060687]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// When the action has added the legend group member,&#13;&#10;// display the group name&#13;&#10;IF [Portrayal Selected] THEN&#13;&#10;    [Geopolitical Jurisdictions]&#13;&#10;&#13;&#10;// Otherwise display all unselected group members&#13;&#10;ELSE&#13;&#10;    &quot;Undisclosed&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Portrayal for GDP (copy)_2687523132076060687]' derivation='None' name='[none:Portrayal for GDP (copy)_2687523132076060687:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#ffffff' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' value='false' />
            <format attr='band-size' scope='rows' value='5' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park-stroke' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='parks-stroke' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]' />
              <lod column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' />
              <geometry column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]>]]></run>
                <run fontcolor='#787878'> has a </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Latitude (generated)]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{06AF605B-ADAF-4969-B5CB-F46692EAA0F8}' />
    </worksheet>
    <worksheet name='Population and GDP Distribution over Life Expectancy'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Cumulative GDP (%)' datatype='real' name='[Calculation_290482225320062990]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 *&#13;&#10;RUNNING_SUM((SUM([GDP (output, multiple price benchmarks)]))) /&#13;&#10;TOTAL(SUM([GDP (output, multiple price benchmarks)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column caption='Cumulative Population (%)' datatype='real' name='[Cumulative GDP (%) (copy)_290482225321373711]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 *&#13;&#10;RUNNING_SUM((SUM([Population]))) /&#13;&#10;TOTAL(SUM([Population]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Period life expectancy at birth - Sex: all - Age: 0]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Period life expectancy at birth - Sex: all - Age: 0]' derivation='None' name='[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_290482225320062990]' derivation='User' name='[usr:Calculation_290482225320062990:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Cumulative GDP (%) (copy)_290482225321373711]' derivation='User' name='[usr:Cumulative GDP (%) (copy)_290482225321373711:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (\%) (copy)_290482225321373711:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' field-type='quantitative' max='90.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Multiple Values]' scope='rows' value='Cumulative (%)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_290482225320062990:qk]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Cumulative GDP (%) (copy)_290482225321373711:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>In </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]>]]></run>
                <run fontcolor='#787878'> nations with a life expectancy of less than or equal to </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]> years]]></run>
                <run fontcolor='#787878'> accounted for </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Multiple Values]>%]]></run>
                <run fontcolor='#787878'> of the global </run>
                <run bold='true'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]>]]></run>
                <run fontcolor='#787878'>.</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Multiple Values]</rows>
        <cols>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Period life expectancy at birth - Sex: all - Age: 0:qk]</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{BDC9328F-AD1B-4F1A-9719-075BDF1C5424}' />
    </worksheet>
    <worksheet name='Public Share Healthcare Expenditure Monitor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Pulbic Healthcare Expenditure per Capita</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>actual</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='8'>expected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Dial Axis' datatype='real' name='[Apply Logarithm (copy 2)]' param-domain-type='list' role='measure' type='quantitative' value='0.'>
              <calculation class='tableau' formula='0.' />
            </column>
            <column caption='Total Healthcare Target' datatype='real' default-format='p0%' name='[Apply Logarithm (copy 3)]' param-domain-type='range' role='measure' type='quantitative' value='0.099999999999999992'>
              <calculation class='tableau' formula='0.099999999999999992' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Dial Gap' datatype='real' default-format='p0%' name='[Apply Logarithm (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.24999999999999994'>
              <calculation class='tableau' formula='0.24999999999999994' />
              <range granularity='0.01' max='0.9' min='0.1' />
            </column>
            <column caption='Apply Logarithm' datatype='boolean' name='[Line of Equality (copy)]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
            </column>
            <column caption='Public Healthcare Target' datatype='real' default-format='p0%' name='[Target Total Healthcare (copy)_2555792852575272960]' param-domain-type='range' role='measure' type='quantitative' value='0.90000000000000002'>
              <calculation class='tableau' formula='0.90000000000000002' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column caption='Actual Public Healthcare per Capita ($)' datatype='real' name='[Actual Total Healthcare per Capita ($) (copy)_289637815316234244]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(&#13;&#10;    [Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)] *&#13;&#10;    [Domestic general government health expenditure (% of current health expenditure)] *&#13;&#10;    [GDP (output, multiple price benchmarks)]&#13;&#10;) /&#13;&#10;( &#13;&#10;    100 * 100 * SUM([Population])&#13;&#10;)' />
            </column>
            <column caption='Expected GDP (%)' datatype='real' name='[Calculation_1622984762593660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Weight proportionally to the expected number of traversals between&#13;&#10;// disticnt people who know each other before you end up back where&#13;&#10;// you started.&#13;&#10;100 * [Population] * [Calculation_1644658352265322496] /&#13;&#10;&#13;&#10;// Sum over expected network traversal weights.&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;&#13;&#10;        // Within valid data for the year&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year] :&#13;&#10;&#13;&#10;    // Sum only the valid weights&#13;&#10;    SUM([Population] * [Calculation_1644658352265322496])&#13;&#10;}' />
            </column>
            <column caption='Optional Population Logarithm' datatype='real' name='[Calculation_1644658352265322496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Line of Equality (copy)], LOG([Population]), 1)' />
            </column>
            <column caption='Expected GDP ($)' datatype='real' name='[Calculation_1875186347389554689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Total actual GDP in  a year over all nations&#13;&#10;{&#13;&#10;    FIXED&#13;&#10;        [Is Nation],&#13;&#10;        [Is Nation (national-gdp-penn-world-table.csv)],&#13;&#10;        [Year]:&#13;&#10;    SUM([GDP (output, multiple price benchmarks)])&#13;&#10;}&#13;&#10;&#13;&#10;// Expected share of the total&#13;&#10;* [Calculation_1622984762593660929] / 100' />
            </column>
            <column datatype='string' name='[Code (share-of-public-expenditure-on-healthcare-by-country.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Code (total-healthcare-expenditure-gdp.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Micronesia (country)&quot;' value='Micronesia' />
                <alias key='&quot;Saint Martin (French part)&quot;' value='Saint Martin' />
                <alias key='&quot;Sint Maarten (Dutch part)&quot;' value='Sint Maarten' />
              </aliases>
            </column>
            <column datatype='real' name='[Domestic general government health expenditure (% of current health expenditure)]' role='measure' type='quantitative' />
            <column caption='Expected Public Healthcare per Capita ($)' datatype='real' name='[Expected Total Healthcare per Capita ($) (copy)_289637815316807685]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(&#13;&#10;    [Parameters].[Apply Logarithm (copy 3)] *&#13;&#10;    [Parameters].[Target Total Healthcare (copy)_2555792852575272960] *&#13;&#10;    [Calculation_1875186347389554689]&#13;&#10;) /&#13;&#10;SUM([Population])' />
            </column>
            <column datatype='integer' name='[GDP (output, multiple price benchmarks)]' role='measure' type='quantitative' />
            <column caption='Geopolitical Jurisdiction' datatype='string' name='[Geopolitical Jurisdictions]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country name]' new-bin='true'>
                <bin default-name='false' value='&quot;Ambivalent Western Portrayal&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bonaire Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macao&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mayotte&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saint Barthelemy&quot;</value>
                  <value>&quot;Saint Helena&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Martin (French part)&quot;</value>
                  <value>&quot;Saint Pierre and Miquelon&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Continent&quot;'>
                  <value>&quot;Africa (UN)&quot;</value>
                  <value>&quot;Asia (UN)&quot;</value>
                  <value>&quot;Europe (UN)&quot;</value>
                  <value>&quot;Latin America and the Caribbean (UN)&quot;</value>
                  <value>&quot;Northern America (UN)&quot;</value>
                  <value>&quot;Oceania (UN)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing&quot;'>
                  <value>&quot;Less developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Developing excluding China&quot;'>
                  <value>&quot;Less developed regions, excluding China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Development&quot;'>
                  <value>&quot;Least developed countries&quot;</value>
                  <value>&quot;Less developed regions, excluding least developed countries&quot;</value>
                  <value>&quot;More developed regions&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Favourable Western Portrayal&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geographic Isolation&quot;'>
                  <value>&quot;Land-locked developing countries (LLDC)&quot;</value>
                  <value>&quot;Small island developing states (SIDS)&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Income&quot;'>
                  <value>&quot;High-income countries&quot;</value>
                  <value>&quot;Low-income countries&quot;</value>
                  <value>&quot;Lower-middle-income countries&quot;</value>
                  <value>&quot;Upper-middle-income countries&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stereotyped Western Portrayal&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Micronesia (country)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;World&quot;'>
                  <value>&quot;World&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Indicator:Current health expenditure (CHE) as percentage of gross domestic product (GDP) (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Actual Public Healthcare Over ($)' datatype='real' name='[Total Healthcare Actual Over ($) (copy)_289637815335673868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244] &gt; [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244],&#13;&#10;    NULL&#13;&#10;)' />
            </column>
            <column caption='Actual Public Healthcare Under ($)' datatype='real' name='[Total Healthcare Actual Under ($) (copy)_289637815335829517]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244] &gt; [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    NULL,&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244]&#13;&#10;)' />
            </column>
            <column caption='Expected Public Healthcare Over ($)' datatype='real' name='[Total Healthcare Expected Over ($) (copy)_289637815335989262]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685] &gt; [Actual Total Healthcare per Capita ($) (copy)_289637815316234244],&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    NULL&#13;&#10;)' />
            </column>
            <column caption='Expected Public Healthcare Under ($)' datatype='real' name='[Total Healthcare Expected Under ($) (copy)_289637815336112143]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685] &gt; [Actual Total Healthcare per Capita ($) (copy)_289637815316234244],&#13;&#10;    NULL,&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685]&#13;&#10;)' />
            </column>
            <column caption='Dial Public Healthcare Left Lower' datatype='real' name='[Total Healthcare Gauge Left Lower (copy)_289637815329243143]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    [Total Healthcare Gauge Ratio (copy)_289637815316963334]&#13;&#10;)' />
            </column>
            <column caption='Dial Public Healthcare Left Upper' datatype='real' name='[Total Healthcare Gauge Left Upper (copy)_289637815329423368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    0.5 - [Total Healthcare Gauge Ratio (copy)_289637815316963334]&#13;&#10;)' />
            </column>
            <column caption='Dial Public Healthcare Ratio' datatype='real' name='[Total Healthcare Gauge Ratio (copy)_289637815316963334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244]&#13;&#10;) /&#13;&#10;MAX(&#13;&#10;    [Expected Total Healthcare per Capita ($) (copy)_289637815316807685],&#13;&#10;    [Actual Total Healthcare per Capita ($) (copy)_289637815316234244]&#13;&#10;)' />
            </column>
            <column caption='Dial Public Healthcare Right Lower' datatype='real' name='[Total Healthcare Gauge Right Lower (copy)_289637815329665034]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MAX(&#13;&#10;    0,&#13;&#10;    [Total Healthcare Gauge Ratio (copy)_289637815316963334] - 0.5&#13;&#10;)' />
            </column>
            <column caption='Dial Public Healthcare Right Upper' datatype='real' name='[Total Healthcare Gauge Right Upper (copy)_289637815329792011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(1 - [Parameters].[Apply Logarithm (copy)]) *&#13;&#10;MIN(&#13;&#10;    0.5,&#13;&#10;    1.0 - [Total Healthcare Gauge Ratio (copy)_289637815316963334]&#13;&#10;)' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Healthcare Actual Over ($) (copy)_289637815335673868]' derivation='User' name='[usr:Total Healthcare Actual Over ($) (copy)_289637815335673868:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Actual Under ($) (copy)_289637815335829517]' derivation='User' name='[usr:Total Healthcare Actual Under ($) (copy)_289637815335829517:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Expected Over ($) (copy)_289637815335989262]' derivation='User' name='[usr:Total Healthcare Expected Over ($) (copy)_289637815335989262:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Expected Under ($) (copy)_289637815336112143]' derivation='User' name='[usr:Total Healthcare Expected Under ($) (copy)_289637815336112143:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Gauge Left Lower (copy)_289637815329243143]' derivation='User' name='[usr:Total Healthcare Gauge Left Lower (copy)_289637815329243143:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Gauge Left Upper (copy)_289637815329423368]' derivation='User' name='[usr:Total Healthcare Gauge Left Upper (copy)_289637815329423368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Gauge Right Lower (copy)_289637815329665034]' derivation='User' name='[usr:Total Healthcare Gauge Right Lower (copy)_289637815329665034:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Healthcare Gauge Right Upper (copy)_289637815329792011]' derivation='User' name='[usr:Total Healthcare Gauge Right Upper (copy)_289637815329792011:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Right Lower (copy)_289637815329665034:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Right Upper (copy)_289637815329792011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Apply Logarithm (copy)]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Left Lower (copy)_289637815329243143:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Left Upper (copy)_289637815329423368:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Right Lower (copy)_289637815329665034:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Right Upper (copy)_289637815329792011:qk]&quot;</bucket>
              <bucket>&quot;[Parameters].[Apply Logarithm (copy)]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Left Lower (copy)_289637815329243143:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Gauge Left Upper (copy)_289637815329423368:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Action (Country name)]'>
            <groupfilter function='level-members' level='[Country name]' user:ui-action-filter='[Action10_1E4641D98BD44B658176C6EDC5844115]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (share-of-public-expenditure-on-healthcare-by-country.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-healthcare-expenditure-gdp.csv)]' />
          <filter class='categorical' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]' />
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-healthcare-expenditure-gdp.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (share-of-public-expenditure-on-healthcare-by-country.csv)]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</column>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Action (Country name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Parameters].[Apply Logarithm (copy 2)]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[Parameters].[Apply Logarithm (copy 2)]' scope='cols' value='false' />
            <format attr='display' class='0' field='[Parameters].[Apply Logarithm (copy 2)]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Actual Over ($) (copy)_289637815335673868:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Actual Under ($) (copy)_289637815335829517:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Expected Over ($) (copy)_289637815335989262:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Expected Under ($) (copy)_289637815336112143:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e6e6e6' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[Parameters].[Apply Logarithm (copy 2)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' />
              <wedge-size column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Multiple Values]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9450275897979736' />
                <format attr='mark-color' value='#e6e6e6' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[Parameters].[Apply Logarithm (copy 2)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Actual Under ($) (copy)_289637815335829517:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Actual Over ($) (copy)_289637815335673868:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Expected Over ($) (copy)_289637815335989262:qk]' />
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Expected Under ($) (copy)_289637815336112143:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#bdb5b1'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Actual Under ($) (copy)_289637815335829517:qk]>]]></run>
                <run>Æ </run>
                <run fontcolor='#ae123a'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Actual Over ($) (copy)_289637815335673868:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#bdb5b1'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Expected Under ($) (copy)_289637815336112143:qk]>]]></run>
                <run>Æ </run>
                <run fontcolor='#ae123a'><![CDATA[<[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Total Healthcare Expected Over ($) (copy)_289637815335989262:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([Parameters].[Apply Logarithm (copy 2)] + [Parameters].[Apply Logarithm (copy 2)])</cols>
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{C528929C-4E1D-4355-B46C-19BDCA9761DF}' />
    </worksheet>
    <worksheet name='Title Monitor'>
      <table>
        <view>
          <datasources>
            <datasource caption='population-and-demography+' name='federated.1nxw1zu0p0shoi149v20w0e9qdsb' />
          </datasources>
          <datasource-dependencies datasource='federated.1nxw1zu0p0shoi149v20w0e9qdsb'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#666666' fontsize='16'><![CDATA[Global Public Health Hotspots in <]]></run>
                <run bold='true' fontalignment='0' fontcolor='#666666' fontsize='16'>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</run>
                <run bold='true' fontalignment='0' fontcolor='#666666' fontsize='16'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</column>
        </pages>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{A6FB2E39-4F5B-41E4-AD43-AB35A75D02D5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Realtime Monitor'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='70' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97402' id='57' param='vert' type-v2='layout-flow' w='98504' x='748' y='1299'>
            <zone h='6006' id='61' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98504' x='748' y='1299'>
              <zone h='6006' id='65' name='Title Monitor' show-title='false' w='49299' x='748' y='1299'>
                <layout-cache fixed-size-h='29' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone count='6' dropdown='0' h='6006' id='69' name='Title Monitor' name1='Early Childhood Mortality Monitor' name2='GDP per Capita Monitor' name3='Healthcare Expenditure Monitor' name4='Life Expectancy Monitor' name5='Maternal Mortality Monitor' name6='Public Share Healthcare Expenditure Monitor' playctrls='0' show-title='false' synchronized='1' trailctrls='0' type-v2='currpage' w='49205' x='50047' y='1299'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='91396' id='20' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='98504' x='748' y='7305'>
              <zone h='45779' id='24' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98504' x='748' y='7305'>
                <zone fixed-size='141' h='45779' id='3' is-fixed='true' name='Life Expectancy Monitor' w='32835' x='748' y='7305'>
                  <layout-cache cell-count-h='10' minwidth='159' non-cell-size-h='71' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='45779' id='9' is-fixed='true' name='Maternal Mortality Monitor' w='32834' x='33583' y='7305'>
                  <layout-cache cell-count-h='10' minwidth='166' non-cell-size-h='72' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45779' id='11' name='Early Childhood Mortality Monitor' w='32835' x='66417' y='7305'>
                  <layout-cache cell-count-h='10' minwidth='152' non-cell-size-h='73' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='45617' id='25' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98504' x='748' y='53084'>
                <zone fixed-size='647' h='45617' id='12' is-fixed='true' name='GDP per Capita Monitor' w='32835' x='748' y='53084'>
                  <layout-cache cell-count-h='1' minwidth='159' non-cell-size-h='65' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45617' id='16' name='Healthcare Expenditure Monitor' w='32834' x='33583' y='53084'>
                  <layout-cache cell-count-h='1' minwidth='152' non-cell-size-h='65' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45617' id='18' name='Public Share Healthcare Expenditure Monitor' w='32835' x='66417' y='53084'>
                  <layout-cache cell-count-h='1' minwidth='159' non-cell-size-h='65' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='228' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='227' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='40' h='6006' id='65' is-fixed='true' name='Title Monitor' show-title='false' w='49299' x='748' y='1299'>
                  <layout-cache fixed-size-h='29' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45779' id='3' is-fixed='true' name='Life Expectancy Monitor' w='32835' x='748' y='7305'>
                  <layout-cache cell-count-h='10' minwidth='159' non-cell-size-h='71' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45779' id='9' is-fixed='true' name='Maternal Mortality Monitor' w='32834' x='33583' y='7305'>
                  <layout-cache cell-count-h='10' minwidth='166' non-cell-size-h='72' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45779' id='11' is-fixed='true' name='Early Childhood Mortality Monitor' w='32835' x='66417' y='7305'>
                  <layout-cache cell-count-h='10' minwidth='152' non-cell-size-h='73' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45617' id='12' is-fixed='true' name='GDP per Capita Monitor' w='32835' x='748' y='53084'>
                  <layout-cache cell-count-h='1' minwidth='159' non-cell-size-h='65' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45617' id='16' is-fixed='true' name='Healthcare Expenditure Monitor' w='32834' x='33583' y='53084'>
                  <layout-cache cell-count-h='1' minwidth='152' non-cell-size-h='65' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45617' id='18' is-fixed='true' name='Public Share Healthcare Expenditure Monitor' w='32835' x='66417' y='53084'>
                  <layout-cache cell-count-h='1' minwidth='159' non-cell-size-h='65' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='6' dropdown='0' h='6006' id='69' name='Title Monitor' name1='Early Childhood Mortality Monitor' name2='GDP per Capita Monitor' name3='Healthcare Expenditure Monitor' name4='Life Expectancy Monitor' name5='Maternal Mortality Monitor' name6='Public Share Healthcare Expenditure Monitor' playctrls='0' show-title='false' synchronized='1' trailctrls='0' type-v2='currpage' w='49205' x='50047' y='1299'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FCE548E4-2648-492A-9FF1-597B444CF200}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Western Biases in GDP'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#b5cbe1' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97402' id='3' param='vert' type-v2='layout-flow' w='98504' x='748' y='1299'>
            <zone forceUpdate='true' h='15909' id='5' type-v2='text' w='98504' x='748' y='1299'>
              <formatted-text>
                <run bold='true' fontcolor='#333333' fontsize='12'>&lt;Sheet Name&gt;</run>
                <run>
For better, or worse, every nation has experienced a dominate narrative portrayal in Western societies. To investigate how portrayal biases national GDP valuation² we began by categorizing each nation into one of </run>
                <run bold='true' fontcolor='#fde725'>Favourable</run>
                <run>, </run>
                <run bold='true' fontcolor='#21908c'>Ambivalent</run>
                <run>, or </run>
                <run bold='true' fontcolor='#490a59'>Stereotyped</run>
                <run>  portrayal, based on our own exposure to portrayals. Next, we estimated an expected GDP³ for each nation from population¹. Finally, we plotted expected GDP against actual GDP. Click on a </run>
                <run bold='true' fontcolor='#4e79a7'>summary label below</run>
                <run> to discover the biases. Use the slider to adjust the year. Highlight nations by clicking on the map or the scatter plot.</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='81493' id='6' param='horz' type-v2='layout-flow' w='98504' x='748' y='17208'>
              <zone fixed-size='320' h='81493' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='29935' x='748' y='17208'>
                <zone fixed-size='200' h='33767' id='14' is-fixed='true' name='Legend Selection' w='29935' x='748' y='17208'>
                  <layout-cache has-max-size-w='true' maxwidth='307' minwidth='307' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone count='2' dropdown='0' fixed-size='24' h='5195' id='12' is-fixed='true' name='Expected versus Actual Share of GDP' name1='Legend Selection' name2='Nation Selection' playctrls='0' show-title='false' synchronized='1' trailctrls='0' type-v2='currpage' w='29935' x='748' y='50975'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='42531' id='15' name='Nation Selection' show-title='false' w='29935' x='748' y='56170'>
                  <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='81493' id='8' param='vert' type-v2='layout-flow' w='68569' x='30683' y='17208'>
                <zone h='69155' id='10' name='Expected versus Actual Share of GDP' show-title='false' w='68569' x='30683' y='17208'>
                  <layout-cache minheight='155' minwidth='170' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12338' id='13' type-v2='text' w='68569' x='30683' y='86363'>
                  <formatted-text>
                    <run fontcolor='#858585'>1. United Nations, World Population Prospects (2022) – processed by Our World in Data.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>2. Feenstra et al. (2015), Penn World Table (2021) – with major processing by Our World in Data.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>3. The scaling of national GDP as a function of population (N) estimates the number of transactions between all initial suppliers and all final consumers as N×log(N).</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98720' id='20' param='vert' type-v2='layout-flow' w='95734' x='2133' y='640'>
                <zone fixed-size='208' forceUpdate='true' h='17280' id='5' is-fixed='true' type-v2='text' w='95734' x='2133' y='640'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontsize='12'>&lt;Sheet Name&gt;</run>
                    <run>
For better, or worse, every nation has experienced a dominate narrative portrayal in Western societies. To investigate how portrayal biases national GDP valuation² we began by categorizing each nation into one of </run>
                    <run bold='true' fontcolor='#fde725'>Favourable</run>
                    <run>, </run>
                    <run bold='true' fontcolor='#21908c'>Ambivalent</run>
                    <run>, or </run>
                    <run bold='true' fontcolor='#490a59'>Stereotyped</run>
                    <run>  portrayal, based on our own exposure to portrayals. Next, we estimated an expected GDP³ for each nation from population¹. Finally, we plotted expected GDP against actual GDP. Click on a </run>
                    <run bold='true' fontcolor='#4e79a7'>summary label below</run>
                    <run> to discover the biases. Use the slider to adjust the year. Highlight nations by clicking on the map or the scatter plot.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='200' h='16640' id='14' is-fixed='true' name='Legend Selection' w='95734' x='2133' y='17920'>
                  <layout-cache has-max-size-w='true' maxwidth='267' minwidth='267' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='2' dropdown='0' fixed-size='24' h='2480' id='12' name='Expected versus Actual Share of GDP' name1='Legend Selection' name2='Nation Selection' playctrls='0' show-title='false' synchronized='1' trailctrls='0' type-v2='currpage' w='95734' x='2133' y='34560'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='335' h='27440' id='10' is-fixed='true' name='Expected versus Actual Share of GDP' show-title='false' w='95734' x='2133' y='37040'>
                  <layout-cache minheight='155' minwidth='170' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='298' h='24480' id='15' is-fixed='true' name='Nation Selection' show-title='false' w='95734' x='2133' y='64480'>
                  <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10160' id='13' type-v2='text' w='95734' x='2133' y='88960'>
                  <formatted-text>
                    <run fontcolor='#858585'>1. United Nations, World Population Prospects (2022) – processed by Our World in Data.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>2. Feenstra et al. (2015), Penn World Table (2021) – with major processing by Our World in Data.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>3. The scaling of national GDP as a function of population (N) estimates the number of transactions between all initial suppliers and all final consumers as N×log(N).</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3400142B-9B83-4D93-AF57-9498306DF62A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Western Biases in Health Disparity'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#b5cbe1' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97402' id='24' param='horz' type-v2='layout-flow' w='98504' x='748' y='1299'>
            <zone h='97402' id='3' param='vert' type-v2='layout-flow' w='98504' x='748' y='1299'>
              <zone forceUpdate='true' h='15909' id='5' type-v2='text' w='98504' x='748' y='1299'>
                <formatted-text>
                  <run bold='true' fontcolor='#333333' fontsize='12'>&lt;Sheet Name&gt;</run>
                  <run>
For better, or worse, every nation has experienced a dominate narrative portrayal in Western societies. To investigate the relationship between portrayal biases, life expectancy⁴, and national GDP valuation² we began by categorizing each nation into one of </run>
                  <run bold='true' fontcolor='#fde725'>Favourable</run>
                  <run>, </run>
                  <run bold='true' fontcolor='#21908c'>Ambivalent</run>
                  <run>, or </run>
                  <run bold='true' fontcolor='#490a59'>Stereotyped</run>
                  <run>  portrayal, based on our own exposure to portrayals. Next, we estimated an expected GDP³ for each nation from population¹. Finally, we created a probability-probability plot of expected GDP against actual GDP parameterized by life expectancy. Click on a </run>
                  <run bold='true' fontcolor='#4e79a7'>summary label below</run>
                  <run> to discover the biases. Use the slider to adjust the year. Highlight nations by clicking on the map or the scatter plot.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='81493' id='6' param='horz' type-v2='layout-flow' w='98504' x='748' y='17208'>
                <zone fixed-size='320' h='81493' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='29935' x='748' y='17208'>
                  <zone fixed-size='200' h='33767' id='14' is-fixed='true' name='Legend Selection' w='29935' x='748' y='17208'>
                    <layout-cache has-max-size-w='true' maxwidth='307' minwidth='307' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone count='2' dropdown='0' fixed-size='24' h='5195' id='25' is-fixed='true' name='Legend Selection' name1='Nation Selection' name2='GDP Lorenz Curve Parameterized by Life Expectancy' playctrls='0' show-title='false' synchronized='1' trailctrls='0' type-v2='currpage' w='29935' x='748' y='50975'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42531' id='15' name='Nation Selection' show-title='false' w='29935' x='748' y='56170'>
                    <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='81493' id='8' param='vert' type-v2='layout-flow' w='68569' x='30683' y='17208'>
                  <zone fixed-size='401' h='66396' id='22' is-fixed='true' name='GDP Lorenz Curve Parameterized by Life Expectancy' show-title='false' w='68569' x='30683' y='17208'>
                    <layout-cache minheight='155' minwidth='159' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='15097' id='13' type-v2='text' w='68569' x='30683' y='83604'>
                    <formatted-text>
                      <run fontcolor='#858585'>1. United Nations, World Population Prospects (2022) – processed by Our World in Data.</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#858585'>2. Feenstra et al. (2015), Penn World Table (2021) – with major processing by Our World in Data.</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#858585'>3. The scaling of national GDP as a function of population (N) estimates the number of transactions between all initial suppliers and all final consumers as N×log(N).</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#858585'>4. UN WPP (2022); HMD (2023); Zijdeman et al. (2015); Riley (2005) – with minor processing by Our World in Data</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98720' id='20' param='vert' type-v2='layout-flow' w='95734' x='2133' y='640'>
                <zone fixed-size='208' forceUpdate='true' h='17280' id='5' is-fixed='true' type-v2='text' w='95734' x='2133' y='640'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontsize='12'>&lt;Sheet Name&gt;</run>
                    <run>
For better, or worse, every nation has experienced a dominate narrative portrayal in Western societies. To investigate the relationship between portrayal biases, life expectancy⁴, and national GDP valuation² we began by categorizing each nation into one of </run>
                    <run bold='true' fontcolor='#fde725'>Favourable</run>
                    <run>, </run>
                    <run bold='true' fontcolor='#21908c'>Ambivalent</run>
                    <run>, or </run>
                    <run bold='true' fontcolor='#490a59'>Stereotyped</run>
                    <run>  portrayal, based on our own exposure to portrayals. Next, we estimated an expected GDP³ for each nation from population¹. Finally, we created a probability-probability plot of expected GDP against actual GDP parameterized by life expectancy. Click on a </run>
                    <run bold='true' fontcolor='#4e79a7'>summary label below</run>
                    <run> to discover the biases. Use the slider to adjust the year. Highlight nations by clicking on the map or the scatter plot.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='200' h='16640' id='14' is-fixed='true' name='Legend Selection' w='95734' x='2133' y='17920'>
                  <layout-cache has-max-size-w='true' maxwidth='267' minwidth='267' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='298' h='24480' id='15' is-fixed='true' name='Nation Selection' show-title='false' w='95734' x='2133' y='64480'>
                  <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10160' id='13' type-v2='text' w='95734' x='2133' y='88960'>
                  <formatted-text>
                    <run fontcolor='#858585'>1. United Nations, World Population Prospects (2022) – processed by Our World in Data.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>2. Feenstra et al. (2015), Penn World Table (2021) – with major processing by Our World in Data.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>3. The scaling of national GDP as a function of population (N) estimates the number of transactions between all initial suppliers and all final consumers as N×log(N).</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#858585'>4. UN WPP (2022); HMD (2023); Zijdeman et al. (2015); Riley (2005) – with minor processing by Our World in Data</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{25941B31-8AD5-41DE-A198-27458E5708A9}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Expected versus Actual Share of GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' type='color' />
            <card mode='list' param='[Parameters].[Line of Equality (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593579008:ok]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_1622984762593660929:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FD6C70F3-17C8-4D12-9A9D-E297DA7BF64D}' />
    </window>
    <window class='worksheet' name='Life Expectancy versus GDP Over Allocation'>
      <cards>
        <edge name='left'>
          <strip size='155'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='120'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001046261760:qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2D4AD3C-0BA7-4303-B226-D6588CA043F0}' />
    </window>
    <window class='worksheet' name='Lost Life Expectancy versus GDP Over Allocation'>
      <cards>
        <edge name='left'>
          <strip size='153'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='122'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_562950001046261760:qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09E6D24A-2845-458B-87EA-D1F1DC4039E5}' />
    </window>
    <window class='worksheet' name='Lost Life Expectancy versus Public Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='122'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2016</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (life-expectancy.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity (share-of-public-expenditure-on-healthcare-by-country.csv):nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (maternal-mortality.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (share-of-public-expenditure-on-healthcare-by-country.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (total-healthcare-expenditure-gdp.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EDDDED7-57E0-4017-BD9F-8ADB2C51F6E7}' />
    </window>
    <window class='worksheet' name='GDP Lorenz Curve Parameterized by Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='168'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='103'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='122'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (life-expectancy.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B99A55A2-DCD9-43E3-9E4F-0A65E16316D3}' />
    </window>
    <window class='worksheet' name='GDP Lorenz Curve Coloured by Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='147'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='119'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (life-expectancy.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[sum:Period life expectancy at birth - Sex: all - Age: 0:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F60D59C-AB20-489D-9F20-A5AD367F1ADB}' />
    </window>
    <window class='worksheet' name='Population and GDP Distribution over Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='155'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='120'>
            <card type='currpage' />
            <card pane-specification-id='3' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2005</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_290482225317474315:qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (life-expectancy.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{46C74400-308A-4CB4-8EC0-0793517EC6D5}' />
    </window>
    <window class='worksheet' name='GDP versus Population Parameterized by Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='150'>
            <card size='29' type='pages' />
            <card size='45' type='filters' />
            <card size='291' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='103'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='122'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Line of Equality (copy)]</field>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity (life-expectancy.csv):nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (life-expectancy.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21413CA2-1290-41A0-9E35-9F2B590B16DF}' />
    </window>
    <window class='worksheet' name='Expected versus Actual Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2011</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-ghg-emissions.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation Set]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EFF86A6-91D8-4D92-B0B6-1085A4B514DF}' />
    </window>
    <window class='worksheet' name='Expected versus Actual Energy'>
      <cards>
        <edge name='left'>
          <strip size='150'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='69'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' type='color' />
            <card mode='list' param='[Parameters].[Line of Equality (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2002</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-ghg-emissions.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation Set]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Calculation_618963520809635840:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Entity:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year (national-gdp-penn-world-table.csv):qk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DAA7ABC-3798-4FC6-9B5A-6133F85CE3A0}' />
    </window>
    <window class='worksheet' name='Nation Selection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Geopolitical Jurisdictions]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Code (child-mortality-igme.csv):nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Code:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='8' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{91FB0D96-D6D5-4C35-BB82-F5B639239FC5}' />
    </window>
    <window class='worksheet' name='Legend Selection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Portrayal for GDP (copy)_2687523132076060687:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA95565B-5D1C-425D-B549-1AC086581981}' />
    </window>
    <window class='dashboard' name='Western Biases in GDP'>
      <viewpoints>
        <viewpoint name='Expected versus Actual Share of GDP'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Legend Selection'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Nation Selection'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='Generic Desktop Monitor' type='Desktop' />
        <device name='Samsung Galaxy Tab 10' type='Tablet' />
        <device is-portrait='true' type='Phone' />
      </device-preview>
      <simple-id uuid='{AD4B7F2D-605D-46D5-85F2-09F8D044C44C}' />
    </window>
    <window class='dashboard' name='Western Biases in Health Disparity'>
      <viewpoints>
        <viewpoint name='GDP Lorenz Curve Parameterized by Life Expectancy'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Legend Selection'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Nation Selection'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='Generic Desktop Monitor' type='Desktop' />
        <device name='Samsung Galaxy Tab 10' type='Tablet' />
        <device is-portrait='true' type='Phone' />
      </device-preview>
      <simple-id uuid='{99970C37-F23D-4FC6-8066-044F9BE42988}' />
    </window>
    <window class='worksheet' name='Life Expectancy Monitor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (life-expectancy.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{94621D86-B42E-4C70-8956-872909CCFA46}' />
    </window>
    <window class='worksheet' name='Maternal Mortality Monitor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2001</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (maternal-mortality.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9DE2A060-9037-429C-B44A-1E9A024CA1FA}' />
    </window>
    <window class='worksheet' name='Early Childhood Mortality Monitor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2000</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (child-mortality-igme.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DF078F66-0E42-4D40-969C-2E9819BAA10B}' />
    </window>
    <window class='worksheet' name='GDP per Capita Monitor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card type='currpage' />
            <card mode='slider' param='[Parameters].[Apply Logarithm (copy)]' type='parameter' />
            <card pane-specification-id='3' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{45805CBE-B483-4E0B-985F-0CDD984569E8}' />
    </window>
    <window class='worksheet' name='Healthcare Expenditure Monitor'>
      <cards>
        <edge name='left'>
          <strip size='279'>
            <card size='31' type='pages' />
            <card size='116' type='filters' />
            <card size='243' type='marks' />
            <card size='79' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='268'>
            <card type='currpage' />
            <card mode='slider' param='[Parameters].[Apply Logarithm (copy 3)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Apply Logarithm (copy)]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2011</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-healthcare-expenditure-gdp.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DA88BC20-5AD6-47B4-B061-F1D5ABF195EF}' />
    </window>
    <window class='worksheet' name='Public Share Healthcare Expenditure Monitor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='259'>
            <card type='currpage' />
            <card mode='slider' param='[Parameters].[Apply Logarithm (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Apply Logarithm (copy 3)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Target Total Healthcare (copy)_2555792852575272960]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[:Measure Names]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (share-of-public-expenditure-on-healthcare-by-country.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (total-healthcare-expenditure-gdp.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{715D1891-43CC-4787-8B0C-2AFA363F9714}' />
    </window>
    <window class='worksheet' name='Title Monitor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A789571E-56C9-4678-9B51-19F805A86026}' />
    </window>
    <window class='dashboard' name='Realtime Monitor'>
      <viewpoints>
        <viewpoint name='Early Childhood Mortality Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP per Capita Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Healthcare Expenditure Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Life Expectancy Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Maternal Mortality Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Public Share Healthcare Expenditure Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Title Monitor'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='iPad 10.2&quot;' type='Tablet' />
      </device-preview>
      <simple-id uuid='{01212545-3715-429F-8EEB-3E1F462AD1E7}' />
    </window>
    <window class='worksheet' maximized='true' name='Change in Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[usr:Calculation_2243637104270684160:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (life-expectancy.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE379B66-5319-4EB4-AF95-34B526E8CF40}' />
    </window>
    <window class='worksheet' name='Geometric Change in Population and GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation (national-gdp-penn-world-table.csv)]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[Is Nation]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Country name:nk]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:ok]</field>
            <field>[federated.1nxw1zu0p0shoi149v20w0e9qdsb].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE23DC11-C5C6-4FD6-A43B-FD038CC1EF92}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Change in Life Expectancy' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Early Childhood Mortality Monitor' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd5xU5aH/8c+ZurN9l2Vhe4WlF2lKUURFYxeNLYl6k6uJaeaa3CRGY0hM
      jEZjEn/GxMQYY1cEAXtFKdK7lF3YyrJs7zszO+38/sC7kYCy7AIi5/v+L2fOnHnOvsx85jxn
      eMYwTdNEREQsx/Z5D0BERD4fCoCIiEUpACIiFqUAiIhYlAIgImJRCoCIiEUpACIiFqUAiIhY
      lKM3OzU3N+P1eo/1WERE5DjqVQC8Xi8N9XUE/b5jPR4RETlOehUAgKDfR2dr87Eci4iIHEe6
      ByAiYlEKgIiIRSkAIiIWpQCIiFiUAiAiYlEKgIiIRSkAIiIWpQCIiFiUAiAiYlEKgIiIRfU5
      AOFwmH8+8RQ/vO0Otm7bjmmaAPh8fu6+7/eU7C7FNE3e+2AZd9/3AHX1DUdt0CIi0n+9Xgvo
      P5mmSeWePewoLmHRq68xpKCAqCg34UiY4pJddHZ1AZCdmYFpRoiO9hy1QYuISP/1OQAAhs3G
      2WfOZOPmzewoLmb82DEH7eNyuXA6nTgc+18qEolQWlZO8a7dOBx2crKy6A4EGDdmNAChUIiP
      tu+gak81yUlJnDJuDNHR0QQCAdZu2Mig1IEMSE5mw6bNFBbkk5OV1Z9TEBGxrH4FACBlQDJT
      p0zhnffeZ1jR0IMe31FczOJXX2fEsCKi3G5eeeNN5i9cTEx0DFFRbtra2kkbPIhxY0YTDAZ5
      ceEi3n1/KbExMXR5vaxau5bv3/xN/N3dLFj0MmNGjWRvTQ119Q1cc+UVCoCISB/1OwA2m41z
      z57F7/7wICW7dlOQn/ep+7a2tTF/4WJmzpjOl+dciicqij//7VFqavYBUFZRybIVK7n5v7/O
      +LFjKN61mz889DAlu3eTnZVFxIzw/rLlnD3zDL77rZuIj4vr7/BFRCyr/98CMiA3J5tRI4bx
      2ptvEw5HPnXXvTX7iEQinDFjOrExMdjtdpxOZ8/jZeUVdHR2suWjbTz9/DxWrl5DOBymrLyy
      5yZz0ZAhXHXFHL35i4j001H5GqjNZmP22bOo3LOHncXFn7lfJBIhEAgc8vFgMIjX62N3WTm7
      SsuoqNpDVmYGg1IHYgA2w0Z+Xi52u/1oDFtExNL6PQX0f3Kzsxk5fBhvvP0OwVDokPtkZqQT
      FRXFvAULufrLc/B6fWzfWUyMZ/83hNLT0xiQnMxXr76SoiGFAHR2dWG32wmHw0drqCIiwlEM
      gMvl4tyzz+K2X/yS7u5Df8KPj4vjxhuu42///Bc33/JDRo0Yjs0weh4fNmQIGRlp/OZ39zN5
      wgRM06SiqopLLjyfU8aNPVpDFRER+hEAwzA4ZewYBqak9GzLy8nmumuvpqKyipTkZAAy0tOZ
      euoUotxuAKZMmsjEU8ZjmiaGYfCHhx7ueX5MTDT/e8v3+GDZCnaUlOByurjs4gs5bfIkQuEw
      UyZNIC83p69DFhGRTzDM/7u7+hmqq6upqaro94/CB4NB5i96mezMDBISEtixs5iXXn6Fa668
      ggvPO7dfxxYRkSNz1KaAesNms+H1evnz3/5BW3sb8XFxnH/ubGZOn3Y8hyEiIhznKwARETlx
      aDVQERGLUgBERCxKARARsSgFQETEohQAERGLUgBERCxKARARsSgFQETEohQAERGL6vVSEE53
      FDEJScdyLCIichz1OgA2mx2H03UsxyIiIsdRrwPQ7evSWkAiIicR3QMQEbEoBUBExKIUABER
      i1IAREQsSgEQEbEoBUBExKIUABERi1IAREQsSgEQEbEoBUBExKJ6vRTEfzJNE7+/m9Xr1rF2
      /QYMw2BoYSEzZ0wjLi6Orq4u5r20iJzsLGbOmI7Ndnxb09nZxWNPPsUlF5xPTnbWcX1tEZEv
      gj6/KwcCAR565G/86+lniY2JISoqirfeW8JfHn2McCSCYbOREB9PdHT00Rxvr3UHuvlg2XKa
      W1s+l9cXETnR9fkKoGZfLSW7Srnxhus5bcokTNOkq6uLLq8Pu82G2+Vi+LChJMQnYBjG/se9
      Xkp27SYcDpOelkZGehoArW1tlJVXMHLEcOrq62lubmHMqJGUV1RiYpKTlcXOkl3Ex8WSkZ5O
      WUUlra2tgEFGehppgwcd0RVGOBymeNduOjo6SUyMpzA/H7vdDkAkEqGsooLm5hZcLhdDCvKJ
      jo7GMAy6urwU79pFfl4udfUNtLa2kTY4lcyMDGw2G5FIhKo91dQ1NOCJimJoYQFRUVF9/ROL
      iBxTfQ6AzW4jHAlTs28fXq+X6Oho4uLiiIuLA8Dn9/PYE08xcfx4vjznUlrb2nj4b/9gR0kJ
      ZiRCXFwc/3vL9yjIz6NkdykPPPgQ3/vWN5n30kJM0+S+3/yKeS8tIhQKMXrUCBYseplZZ5xO
      dlYmTz33Aj6fn0gkQnxcLLd+7zsUDR2CYRiHHXd3dzcvvfwqr735NqFQEJfTxeWXXcz5s8/B
      NE3efm8Jz85bQDAYxDBgxPBhfPebN5KYkEBNbS13/vpuRg0fTktbG83NzaQMGMBPf/g/ZGdl
      8v7S5Tw//yU6OjswDIMzZkznq1dfSbTH09c/s4jIMdPnAKQPTuOM6dN47ImnWLFqNRPGj+Os
      maeTNnjwQftGIhFee/NtOru6eOj3v8PtdvOvp5/l+fkL+OH3vwuAz+dn4SuvMufiC5l62qk4
      Pv5EvrusjHAkwq/vvIOM9DRKy8u548c/IiszA6/Px6/vuY/3l69g6JDCXgVgR3EJr7/1Dj//
      yY/Iy81h5eo1PPr4k5w6aRIdHR386+nnuP4r13DWzNOp3lvDXffexxtvv8uVcy4FwDAMJk+c
      wDlnnUlraxu3/eKXlJaXEx8fx5PPvcC1V17OmWecTll5Bff/8UHGjxnNpAmn9PXPLCJyzPQ5
      AE6ng69efSXTp57GG2+9w/IPV7L41de56evXM+uM0w/Y1+vz8dH2HSQlJbJ2/QbAwBMVxe6y
      crq8XgCCoRCXX3IRkydOxGb79xu5y+nku9/8b5KTkjAMg4K8/VcMS1d8uP9Tus2gsbGRUCiE
      y3X4H6zZ8tE2PJ4oyiurKK+swu/34+/2U7NvHzW1tUR7PJx95hk4nU5ycrKZOWM6O3YW4+/u
      BiDKHcX4sWOIi43FZrPhdrvx+/2U7C4lGAzS0dnJe+8vBUxsdjul5RUKgIickPocAAC73U5B
      Xi433/QNGhsbefLZ55m/8GWmn3baAfuFw2F8Ph+VVVWUlVf0bM9MT++Zu4+LjWVIYcEBb/4A
      ubk5DEhOBiAUCrHo1dd49Y23cDocgEFjUxNjRo/s9Zi9Xi81+/Yxf9Hinm2JiYm4XC4C3d04
      HI6e+wEGEBMdTTgcxoxEDnvc1tZWXnvjbewOe8/2+LjYXo9NROR46nMA2trbgf1v3IZhkDIg
      hSGFBWze+hHhcPiAfaPcbgYOTGHUiOH819e+0vMGGw6H//1ma+x/w/1Pn9zW0dnJm2+/y5xL
      LmL2rDOx2Wz89dHHaG5t7fW4M9LTyUhP4w/33I3b7Qb2T1EZhkFHRwctra00NDaSOnAgwWCQ
      bTt2kpiQgNPp/Mzjpg0eTHJyEj/731vJy83pOa6IyImqzwEor6jk/j89xNjRo8jNyaa5uZkl
      S5dzwXmz8XiieqZ2ANxuN+fMOpPf3vcAbe3t5GRn0draRvXeGm793nd6/ZpOp5OkxERWrl5L
      V2cX1TU1rF67jlEjhh9y/0gkwrLlH1JWVgFAbk42p4wby6tvvMXP5t7FlIkTCASDbNy8hZtv
      /DrDhxUxcvgwfvGbezh96mlUVe9l6/bt3PXz2w87vVSQl0d2Zia/vvd+Zs08HYfDwfYdO5l6
      2hTOO/usXp+jiMjxYp87d+7cw+3U3t5OR1srAb+vZ1tSYiLZmZlU7dlDye5SAsEgl110Ieee
      cxZOh4NwJMLevTXkZGeRk51F2qBBDCksoLhkFxUVVZgGXHbhBWSkp9HV5aWpuZnTpkzu+VQO
      UF1TQ2JCAqNHjgD2ByA/P5dtO3ZSW1/PuLFjKMjLIyEhgVEjRmC3//uroKFgiNKycppaWqiu
      qaG6pgaPx8PE8eOYMH4cNbW1lOze/1XQM2ZMY+zo0UR7PIwfM4a29nZ2FJfgdDr51jduYNjQ
      odhsBn7//nsFUyZNJDY2lkg4QkVlJcOLhpKdlcnY0aMIhUNs37GThoZGRo8ayenTTsOjbwGJ
      yAnIME3TPNxO1dXV1FRV6EfhRUROIloLSETEohQAERGLUgBERCxKARARsSgFQETEohQAERGL
      UgBERCxKARARsSgFQETEohQAERGLUgBERCyq16uBOlwuomLjjuVYRETkOOp9AJxuPLH2w+8o
      IiJfCL0OgL+rQ6uBioicRHQPQETEohQAERGLUgBERCxKARARsSgFQETEohQAERGLUgBERCxK
      ARARsSgFQETEohQAERGL6ncAwuEIb77zLo8/9Qw7S0qOxph6payighdfWkQgEDhurykicjLp
      dwDa2tt44pnneevdJSx65XUikcjRGNdhVVbtYeErrxIIBo/L64mInGx6vRjcoZimSfGu3cTE
      RHPOrDN5570ltLW3k5SYiGmaNDe3EDFNPJ4oWlpaME0YlDoQt9vd83yv10tTSwuRSIT42DjC
      kTBJSUk47HYCgQCNTU0EAkFioqNJTk7Cbj94RVLTNOnu7qapuYVAMIDT4WTAgGQ8UVH9OT0R
      kZNavwIQCodZv3ETI4YVMX7MaN569z1Ky8qZMH4coXCYJ597nh3FJSQlJrL1o21ETJPrr72a
      Ky67BLvdTl19A3/9xz9Zs249wWCQ3JxsYqKjufO2HxMTE8PTz73AK6+/SVt7Oxnp6Vx/7dXM
      mnk6hmEcMI7u7m6eeOY5Xn/rHdo7OoiOjuasmafznW/eiNPRr1MUETlp9WsKqLW1je07djJx
      /Hgy0tPITE9nzfoNRCJmzz7hcJjLL7mIBc8+ydVXzGHFqtW0d3RgmiZ/++fjtLa28v/uv5c3
      F83ngnNn09XlBeDNt99h2YcrueOn/8sbC+dz4Xmz+dfTz7JrdymmaR44EMNgWNFQ/vKn3/P2
      yy9x520/ZuXqtZTs2t2f0xMROan1KwBr1q+nrb0du8NOye5SsrIyWLriQ5qa//27AUMKChg7
      ehQul4usjAyCwSDBYAiv18e27Tu47OILyc/LxWazERMT0/PpfvnK1cyYehrjRo/C6XTwpdnn
      kJ6exkc7dh40DofdTkx0NA///TFu+t4PeOivf6Ojs5Pauvr+nJ6IyEmtz/MjgWCQNevW09rW
      zr0P/HH/RhN8fj/bd+5k2qmnHrC/YRhgwP99dnc47LjdbhoaGolEIhg2G8FQEPPjPRwOB8Fg
      sCcIkUiE4Kfc8C2vrOLPjzzKuDGjmTl9Gp1dXbywYCGRcLivpycictLrcwDq6urYV1vHHT/+
      IadNmQzsn4u//0//j3UbNjFpwimf+Xy3282MaVN5fv5L1OyrJTo6muUrV/a84U8cP47X33qb
      6VNPo2hIIUuWLqO+oYFhQ4ccdKz6+gYMm8EVl11CyoBkVq1dR1hv/iIin6nPAdhRXILDbqcg
      P69nm8vlYuIp41mw6BVaWloPe4yvXPVlBiQl8dH27URFuZk960yWrliJzWbjnLPOZE/1Xn59
      7/2EQiGiPR4uu+hCioYUHnQTuLAgn4EpKXzvhz8mLjaWrMwM/n2tISIih2KYB91RPVh1dTU1
      VRUH/CbwvtpaOjo6KcjPO+CrmR2dnVRUVpGfm0NTczORiEl2ViY2m43mlhbq6uopyM/D6XTS
      1dWF0+XC5XQSDAb51zPPUVxSwm9+8XPcbjc+n4+Kqiq8Xh/JSUlkZWbg+PhbPc0tLeyt2ceI
      YUXYbDYaGpuo3rsXjyeK9MFp1NTuI3XgQAYkJx+DP5uIyBdfnwPQX6Zp8vfHn6Cuvp6kxETa
      2tpZu34DX7vmKuZcctFBn/JFROTo+lwDsGfvXj5YtoKGhkacLidTT53C2NGjcBziH3uJiMjR
      9bkFQEREPl9aDVRExKIUABERi1IAREQsSgEQEbEoBUBExKIUABERi1IAREQsSgEQEbEoBUBE
      xKJ6vRqoJzYed3TMsRyLiIgcR70OQMDvw9/VeSzHIiIix1GvAxAOBen2dR3LsYiIyHGkewAi
      IhalAIiIWJQCICJiUQqAiIhFKQAiIhalAIiIWJQCICJiUQqAiIhFKQAiIhalAIiIWFSfAxAK
      hfjVPb/jL48+dtBjZeUVXH/Tzbzy+psA/OXvj3HnXXf3fZT/4eXX3uCGm75NWXnFUTumiIjV
      9HotoEMJh8KEw+GDtmekpzH39p+SlJi4f7/IoffrqxnTTmPUyOGkDx581I4pImI1/QrAp/F3
      d7Nk6XKmTp5EYkICAMFQiKUrPmT12vWkDUrl/PNmk5yUhGmaNDQ2seiVV2lta2PUiBGcNfN0
      nE4nNftqWfzqa1x+6cWUlVewactWrrz8Murq61m1Zh1zLrkIl8tFeUUl7y9bTn1DI3Gxscw+
      +0wK8/MxDONYnJ6IyEnhmNwD8Pn9rFqzlrr6+p5tO0tKWP7hKjyeKN5e8j53/+73BIJBqqqr
      mfub31JTW0u0J5r5ixbzxLPPA9DW3s7SFStZsnQ5Tz77PE6nE7vNTl1dPavWrMXv9xMKhXjy
      2efZV1tHUlIie/bu5e7fPUDlnj3H4tRERE4ax+QK4FCGDR3Kj275Lg6Hgw2TJnL3/Q9Qtaea
      FStXMXjwIH7yP7fgdDpZt2EjD//9Ma6+Yg4AgUCA9Rs38ZNbf0BmRjo224HNcjgc/M/3vk2U
      243T6aS2ro677rmPisoqcrOzj9fpiYh84Ry3ADgdDlwuFwCZGelEezw0NDZSVlFJWXkFv/zt
      vQD4fH6aW1ro6Nj/4zNOp4MvX3YpWZkZnzql09jYxFvvvkf13hq6AwFq6+rp7NJvF4iIfJbj
      FoBPCofDRCIRXC4XBpCaksKYUSN7Hp86ZTJxsTG0tLZis9lISUn+1Df/2rp67rrnPjIzMxgx
      fBjd3d3s3bcPzON0MiIiX1DHLQDBUIhQKIS/u5t3lnwAQEFeLiNHDOPd95dy6qRJZGdl4vf7
      KS2vwOV29+q4VXv24HK5+Pp1XyErI4Ot27bzwfIVx/BMRERODv0OwAfLlrOzuASA5ORkbv3e
      tw9+Ebud+oYGbv3pHfi7/fh8fr485zIS4uOZMXUqWz7azi/vvpeYmGgAXC4Xd/389l69fm5O
      Dk6nk9/c+3tiY2PweDx4vb7+npaIyEnPME3zsJMl1dXV1FRV0Nna3LMtEomwcfOWA77p4/F4
      OG3yJCKmyYaNmyjIzyNt8GBKy8rBgKo91XR3B8jOymTY0CE9N3Q7OjrZtHUrHR2dxERHM6xo
      CKkDB9La1samLVuZOH48cXGxPa+zr7aW0rIKJowfi8fjobJqDztLdhEV5Wbk8OEU79pFVkYG
      2VmZR/NvJSJyUulzAERE5ItNawGJiFiUAiAiYlEKgIiIRSkAIiIWpQCIiFiUAiAiYlEKgIiI
      RSkAIiIWpQCIiFiUAiAiYlEKgIiIRfV6NdComFgcrt4t0SwiIie+XgcgFAwS8HmP5VhEROQ4
      6n0AAt14O9qO5VhEROQ40j0AERGLUgBERCxKARARsSgFQETEohQAERGLUgBERCxKARARsSgF
      QETEohQAERGLUgBERCyqzwEIhUI8+JdHuP6mm3ny2ecJhUI9j3V0djL3N/dw/U0389y8+YTD
      4c88ltfn47Zf/IplK1YCsHnrR9z03R+wu7Ssr8MTEZHD6NcVQEtLK3GxsazdsAGvz9ezvWZf
      LfUNDYTDEdra2w97HDMSoa6uni7v/sXmsjIzuOFr15KaOrA/wxMRkc/Q68XgDsmAkSOGs37j
      Jmrr6oiPiwOguGQXWZmZNDQ29uwaDocp2V3Kpi1b6e7uJnVgCrNmnkGU++Alpk3TpGrPHoYX
      De3X8ERE5NP1+x5ATHQ0RUOGsGnLVkzTJBKJsHHLFkaPGoHN9u/D19bV89Bf/8aOncVUVFbx
      /PyXePhv/8Dv9x90zOaWFl5cuJi2Nq0+KiJyrPTvCgCw2WyMHTOKNWvX4/P7CQQCtLW1U5CX
      y/tLl/fslzIgmdt+dCuDUgdis9lYsWo1//jXk3R0dhHtiervMERE5Aj1OwAYMGr4MF578y0a
      GhpobGomOSmJAcnJB+zmcrkIhoI8+ezzdHZ20dLaitfrw+f3KQAiIp+Do/I10EGpqSQnJvHR
      jp2s27iJ8WNH44nyHLDPqjVrufUnt7O3Zh8RMwKAiQnm0RiBiIgcqf5fAQB2u51RI4ezeu16
      fD4f5509C4x/Px6JRNi6bTtjRo3k1u99G7vdweq169i6ffvReHkREemDoxIAgOFFRby0+BUG
      JCczKDWV4Cf+XYBh2MjPy+XdD5byuz88CEBLa+vRemkREemDPgfAZrNx+rSpJCclAZCbncVV
      l19GcnIyLpcLw7Bx9plnMCA5GZvN4IwZ03E6nZRXVJKXm0Nhfh7LVqwkIT4Op9PJReefR0F+
      LgDJSUlcccnFJCQkHJWTFBGRgxmmaR52Fr66upqaqgo6W5uPx5hEROQ40FpAIiIWpQCIiFiU
      AiAiYlEKgIiIRSkAIiIWpQCIiFiUAiAiYlEKgIiIRSkAIiIWpQCIiFiUAiAiYlG9XgzO5Ykm
      3mY/lmMREZHjqPergZpmzw+5iIjIF1+vAxDw+7QaqIjISUT3AERELEoBEBGxKAVARMSiFAAR
      EYtSAERELEoBEBGxKAVARMSiFAAREYtSAERELEoBEBGxqN6vBfQfwuEwTz//Alu37QDAZrOR
      nZXJ+bPPITcnG8Mwjtogj9T8hYvx+nx87ZqrPrcxiIic6Pp8BWCaJqVlFQRDQaZMmsi40aMo
      3rWbO+76DTX7ao/mGI9Y1Z5qysorPtcxiIic6Pp8BfB/CvPzueLSizFNk9lnz+LHd/yCdRs3
      Eh3tYcOmzZw6aSIxMTF0dnXx4ao15OZkM6QgH4CNm7fg8XgYNnQIDY1NbN+5E5/PR1RUFBNP
      GU9sTAyGYdDc3MLW7dsZMayIyqo9NDQ2kZuTTdGQQmw2G+FIhLLyCkrLyvFERdHa1obNtr9t
      pmnS0NjEjp3FdHm9xMbGMGbUSBITEvp76iIiX2j9DsD/MQwDh8OBy+nEjJh0dXl54pnnSIiP
      Z8L4cZSWlfOXv/+DqadO5pZvfwubzcbfHnuciy84n9zsLP78t0dpaGzEMAw6OzpZsXI137/5
      JuLj49mzdy8PPvwImRnp2O12Wlpbsdts/PRH/0NBXh5vv7uE5+bNx+12ERUVxb7aOkYOHwZA
      e0cHf//nv9hbsw/DZtDZ2UVWRjo//+n/4na7j9bpi4h84fQ7AKFQGK/Ph9/v57U336axqZkR
      w4pISkwgKzOD4l27GT92DLvLypg8cQJNzS10dnURDARp7+hgaGEBTqeTK+dcSk5WFtHRHop3
      7ebOu+5mX20d8fHxALhcTs4752xmzphGfUMjv7rnd1RW7iE5KYn5CxcxZdIErvvKNbhdLu7/
      00N0d3cDEOWO4vJLLyYjPY2YmBg2b9nKb+//A/tqa8nNyenv6YuIfGH1OwAvv/Y6L7/2OgCF
      Bfnc8p1vUfjxFM+IYUXsLN5FR0cn5RWVnDFjGotfeY2GhkZq6+tJGZBC6sCB2O12MtPTWbFq
      Na1tbfi7u+kOdNPS1tbzOm6Xm6IhhXg8HuLj43C5XASCAcrKK4hETM4752xioqM/3tfVEwC3
      28XgQamsXL2GlpZW2js6CIVCNDQ2KwAiYmn9DsC5Z5/Fxeefx0OP/J3k5GTGjhqJYRgYhsHo
      ESN44+132bN3L80tLRTm55GVmUFpeQV79u5l2NAheKI91NXX86t77sNusxEbG0s4HCYUCoNp
      Hvb1g8EQNpsNh+PQp1JVXc0DD/6ZUChEXFwcgUCAQCCAqV83ExGL6/e/A4iO9jCsaCjf+sZ/
      UbNvH08+9wLdgQAA2dlZmKbJpi1b8URFkZyURGFBPtt27GB3aRljRo3EYbezs2QXfr+f2350
      K7++83b+57vfJiqqd/PzKQOS8fl9VFbtIRKJEAgEel4foLhkF16fj5/97w/59Z238+0bv0FC
      Qnx/T1tE5AvvqN0EHjliON/8+g3c/6eHSEpM5PJLLiY2JobsrCzeePsdzpl1Jg6Hg9ycHOYt
      WEiX18vwYUMxDIOBA1JobWvn2Xkv4nI6Ka+swu/v7tXr5mRnUZifz18efYzNW7fS2tbO+o2b
      GDt6FAADkpPp7OzkmRfm4Xa52FVWTmtb+9E6bRGRLyz73Llz5x5up/b2djraWgn4fT3bTNOk
      ta2NjPQ08vNyMQyDtMGDyMrMoGT3bjLS0khKTMTtchMJRzhjxjRSB6YQ5XbT3tFBQV4+U6dM
      xjAMkpOTyEgbTPXeGpKTk7nq8ssIR8KMHTOK5KSknk/1Y0aPJCYmhkgkQltbO0MLC8lIT2P8
      2DHY7DYaGpuYftqpDBs6hNSBKQwvGsrAlBQGD0qlas9eUlIGcOlFF+B2ORk9ciRJSYnH8E8r
      InJiM0zz8BPt1dXV1FRV6EfhRUROIloLSETEohQAERGLUgBERCxKARARsSgFQETEohQAERGL
      UgBERCxKARARsSgFQETEohQAERGLUgBERCyq16uBOt1RxCQkHcuxiIjIcdTrANjsdhwu17Ec
      i4iIHEe9DkC3t0urgYqInER0D0BExKIUABERi1IAREQsSgEQEbEoBUBExKIUABERi1IAREQs
      SgEQEbEoBUBExKIUABERi+r1UhCHYpomgUCAJUuXs6O4GKfTyeQJpzDxlPG0d3Qwf+FiZs08
      nbycnH4NsmR3KavWrOXiC75EYkJCv44lIiL79esKoLauntt/+RueeWEehmEQCASYt2AhXV1d
      +Hw+Pli2gsbGpn4PsraujuUrV+H1+vp9LBER2a/PVwDhcJgXFy6irb2N38z9OUfpzZMAABqk
      SURBVBlpaZimSUdnJzExMXR2dX28X4TKqj00t7QQFxdLXk4ONpuNYDBIRWUVnV1d2Gw2MjPS
      GZCcjGEYALS1tVFVXU0oFN4fEfPonLCIiOzX5wA0Nbew9aPtnHv2WWRlZPRs/+QUTcQ0eenl
      V2hv76ChqRG7zcbPf/pjhhcN5bU332bB4lfw+32YJmSkp/GTW3/A4EGpNLe0cO8Df6K8shKb
      YcPlcuJ0OPt3piIicoA+TwE1NDbSHegmPzf3M/fLzc7irjt/xqN/fpCUAQPYsGkzJpCfl8vd
      c+/g2cf/wUMP/I4ur5dVa9YSCoV4/sWX6Ojo4Le/vJNnH3+Ua6+8AofD3tehiojIIfT5CiAS
      iWCaJh/P2BySzTCYeMp4UgYMoLu7m5SUAfj9fgxg5PBh7CzZRWl5BYFAEJfLRX1DA23tHWz+
      6CMuveB8CvLyMAyDmJgYPvOFRETkiPU5ACnJyTidTvbW1DB+7Jgjem73xzeL31+2HJthwzRN
      GpoaGTV8GOFwCJ/PT3x8fM/9ABEROfr6PAWUkjKA/Nxc3n7vfXx+/xE9t7GxkXeWvM+NN1zH
      I//vD/z1wQeYeMp4AFxOFwnx8VTt2UMkEunr8ERE5DD6fAXgcDi49qoruOf3f+CHP72DmadP
      JxQKsW3HTn566y2f+Vy3243H42HFqtXsq61jV2kZm7ZsZfasM4mJiWbmjGk89dwLdHR2EhcX
      y7tLlhKOhPs6VBEROYQ+B8AwDHKyspj7s9t49Y03Wb12HU6nk9MmT8Lj8RAIBikaOoTY2FgA
      bDYbOdnZpCQnMyA5mZv/++s89+IC2to7OH3aaSQlJjAoNRWHw8EF580mEAyyfuMmMtLTmHPJ
      hWzbsROXS98EEhE5WgzTNA/7Dfvq6mpqqir0o/AiIicRrQUkImJRCoCIiEUpACIiFqUAiIhY
      lAIgImJRCoCIiEUpACIiFqUAiIhYlAIgImJRCoCIiEUpACIiFtXrxeAcThdRMbHHciwiInIc
      9T4AbjfR9j4vHioiIieYXr+j+zs7tBqoiMhJRPcAREQsSgEQEbEoBUBExKIUABERi1IAREQs
      SgEQEbEoBUBExKIUABERi1IAREQsSgEQEbGoPgcgEonwwfIVPPP8POrq63u2BwJBFr3yGrV1
      dZimyfYdO1n06mu0tbcflQH/p7b2dl5cuIhdu0uPyfFFRE5W/QrAkg+W8sQzz/HiwsUEg0EA
      AsEACxYtpqa2DoCW1lYqK/cQCASPzoj/QyAQpKy88pgFRkTkZNWv5T0Nw8b4cWNZu24DF5w7
      m9yc7IP2GTd2DEMKC0hOSgTANE06Oztp7+jEMAxiYqKJRCIkJe5/PBKJ0NbeTleXF7fLRVJS
      Ig6Hg0gkQlNzM1FRUbhdLppbWomLjSU5KZHrrr2ahPg4AMLhMG1t7fj8PsAgLi6WuNhYDMPo
      z6mKiJx0+re+swFFQwpxu1y898FSrv/KNQftsvzDlSx+9XV+ecdtpAwYwI7iEh59/Ak+2r4D
      h91Obk4Og1IH8ouf/QTTNFm/cROPPPY45RWVDBiQzFeu+jIXn/8lOru6uOf3f2TKxAkEQyHm
      L1zMjf91HZMmnMJP75zLN67/GjOmnsbK1Wv4xxNPUb23BsOAsaNH891v3UhOVla/TlVE5GTT
      75vADoeDSy+6gLXrN1JRVfWZ+3Z5vfzp4b+SlJTIE3//K/OfeYL8vBx8Ph8A1XtrePzpZ7n0
      wgt4bcELfP/mb/LS4lcpr6wE9l89fLh6DVV7qnnw/ns59+yzDnqN2NhYvn/zt1j8wrM8+egj
      dHd389Y7S/p7miIiJ53+fwvIgBHDikgbnMqSD5ZjRsxP3XVvTQ2dnV1cfsnFDB6UisfjISYm
      pufxXaWlhIJBBg8eRGl5BVFuN/HxcZTs2g2miWmaGIbBzTd+nYz0NGy2g4c/ZtRI0tMGUbln
      D03NLSQnJbGvtrbfpykicrI5Kj/x5XK5uHLOZfz9n0+wYdNmPi0BNpuNSCSM1+fF/PgNPRKO
      9DweCATpDgTYV1uL2+UG4KIvnUfRkMKe50+eOIGE+PhDzumHw2Eee/Jpujq7GDq0EIfdQZfX
      S5TbfTROU0TkpHLUfuNx6JBCpp46maeffwG/33/IfbIzM8nJzubBhx9h1hmn4/P5+WD5CvJz
      cwDIy835OBIRZp0xg4hpUlpatv/JH7/hf9bN3O7uAMtWfMh1117DrDNmUL23hnfe0/SPiMih
      HLUA2Gw2Zkw7jdfeepuuLu8h93G5XPzgOzez+NXX2FVaxpiRIzhl3Jie/QvycrngvNksWPgy
      z81bgN1uIzExkRtvuI7ExITDjsHjieK0KZP5+z//xeNPPUNGehrtnZ0M1BWAiMhBDNM0P33S
      /mPV1dXUVFUc8JvAkUiE3WXlxER7yEhPByAciVBaVk5rWxtFQwqJj4ujsamJuvoGhhYW4HQ6
      e6Zk7HY7Xq+Pex74IwNTBvD9m78JQCgUorJqD41NTdjtdgalppKRnkYkEqFkdymJiQmkDRrU
      cyUQCATYUVxCVmYGyUlJdHZ1sbu0jGAwSG5ONp2dXQSCwZ5pJBER2a/PAeiLQCDAvQ/8iejo
      aOJiY6iorGJ3WTk/uuW7TJ44oV/HFhGRI3PUpoB6w+l0cuGXzmXVmnU0t7SQmZHOdV+5hqGF
      BcdzGCIiwnG+AhARkROHVgMVEbEoBUBExKIUABERi1IAREQsSgEQEbEoBUBExKIUABERi1IA
      REQsSgEQEbGoXi8F4YmNx+2JPpZjERGR46jXAQh0+/F3dRzLsYiIyHHU6wCEgwG6vV3Hciwi
      InIc6R6AiIhFKQAiIhalAIiIWJQCICJiUQqAiIhFKQAiIhalAIiIWJQCICJiUQqAiIhFKQAi
      IhbV66Ug/pNpmuwqLWPegoWsWb8eA4OhQwq5cs6lnDJuLDZb39vi8/lYt3ET48eMITY2BoDu
      7gD3/fFPZKSnc8NXr8UwjE99fnd3N8s+XMmz8+ZTX99AbGwM0049lWuvuoLkpKQjGkswGOQn
      P5/L9KmnMufii/p8TiIiJ5o+B6C9vYN//OtJYmNiuOuO2wmFw2zYtIktH21j/Ngx/RpUa1sb
      f3n0Me7+xR09AQCT7kCAYDB42Odv3LKVfz75DFdfMYe83Byampt5d8kH1Dc0HHEAYH9QQqHQ
      ET9PRORE1ucANDQ20tTczLVXXsGY0SMBGD92NMFgEJvNhmmaBINB3nznPXaXlZEQH8/5557D
      oNRUvD4fLy1+hbGjRzF65AjC4TBLli4jEAwypKCAFxa8RHt7O48/9SxxcXGcOmkCE8aPAyAc
      ibB2w0bWrluPy+VmziUXkpyUdMAVQcmu3aQOTOGC82b3XIlMP+1UIpEIkUiEVWvXUVtbx4Vf
      OheXy0XVnmreWfI+l1x4PslJSfh8ft59/wN2lZaSMmAAnV3/XgQvFA6zafMW1qzfgM/nIyc7
      i3NmnUl8XBzt7R0sfOVVJowfx96afewoLiYrM5MLzpuN2+X6zKsWEZHjrc/zNPHxcdhtNhYs
      foWdJbsIh8MYhoHr4ze6Lq+X+/70/1iw+GUMw0bxrt38z09up2rPHrq7u1mxajXVe2uA/dNJ
      23bsZMvWjzAMiHK7MQwDt9uNxxOFw+ns2e+Nt97hpUUvEwgGWbpiBY8/9cxBn84HDUqloqqK
      ha+8RmNTM6ZpYrfbcX58nN27S1m3YSOhcBiApuZmPli+gs7OLoLBEL++9z6en/8ShmFQ39BA
      a1tbz7HLyst5dt58vF4fLqeLV15/iz8+9BdCoRBen493lrzPXb/9Hes2bMTv9/PsCy/y3vtL
      +/pnFhE5Zvp8BZAyYAD/fcN1PP38POb+5h5SBiRz/rmzOWP6VKKjo9lZXMJH23Zw150/Iz83
      l7b2Du594I+8/tY7zLnk4k89bnZmFtdeeQXrN23mmi/PITcnB9g/DWMYBmfMmMY3v/5fREW5
      eXbefDZs2kwgGOx5cweYduoUamvrWPTKq8xfuIjhRUVcfslFFA0dctjz2r5zJ7vLyrjtR7cy
      ZtRIgsEgpWXlPY/nZudw509/TExsDHabjfeXLeeZF16krb0dAJfLxdVXzOGcWWcSDIW4+74H
      qN5bg2maugIQkRNKnwNgs9mYeMp4ioYMYUdxMStWreaxJ59iX20dN3z1Gqqqq0lKTCA/Nxeb
      zUZCfBxjRo2keNfuXs3jf5rYmBiioz0YhkGU2004HAbTPGifr11zFWdMn8b24mLeeuc9fnXP
      7/jl7bdRWJD/qcc2TZOSXbvJysyksCAfu91OJBI54Ia2YcCu0lKWLv+QtvZ2Wlpb6ejoxO/v
      xm63YzMMEuLjcblcmIDL6SQc1v0DETnx9OtroIZhEB8fx5RJE/nBd27m6svn8MHy5fi7u7Hb
      bITCYcyP35xNIBQKcbw+A9tsNnJzsjl/9jn88o7bSE5OZvXadUQikX4dd+nyD/n9g3/GMAwK
      C/LJSE/7OBDmYZ8rInIi6XMAqvZU8/6y5TQ0NmGaJl1eL7V19STEx2O32RlSUEB7ewer164j
      FAqxd28Ny1asZEhhAR6PB6fTSUtLC8FQiIbGRurqG3o+yDsdDrr93VTvrSESiez/lH8Elq9c
      xcbNW+juDhCJRGhoaKSzs4vExERsNhsut5v2jz+1e71eyisqiUQiGIZBXm4OFZVV7CguIRwO
      U1dfT5fX23PsHcXFjBxexLf+++tcfunFFBbkY7NpakdEvnj6PAXk8/uYt2Ahz0cW4Ha7CYZC
      dHd3c901V+N2u8jPz+NLs8/mkcce5/n5L+H1+YiPj2P2WWcSGxPN8KFDWPjKa6zZsBGnw0HN
      vn2MGjECgMTEREYMK+Jv//wX8xe9zOyzZjHz9Om9Hlt5RSXvvr+U+LhYbDYbXV4vaYMHMe20
      KdhsNoYXDeWF+S9xx69+TUx0ND6fj3B4/5XB6JEjGF40lAcffoSBKQM+DlVrz7FHjhjOP598
      mp/8/BdERbkJBIL9vqoQEfk8GKZpHnbuorq6mpqqCjpbm3u2maZJQ2MT23fupK29nSh3FCOG
      FZGZkd5zszMcDrNxyxb27asjOjqaiaeMIz4uDsMwaO/o4MNVazBNk+FFQ2lrbyccDjN29Gjs
      dhvNLS1s2LQZn8/PiGFF5GRnsX7TZmJjYhgxrAjDMCgtK6emtpZTJ0084CZwKBSitLyC3WVl
      hMNhBiQnM37sGDxRURiGQTgcYf3GjdQ1NJA2eDAZaWls37mTyRMmEBsbQ0dnJ+vWb8Tf3c2Y
      USMpLS8nIz2Nwvx8QqEQm7ZsZV9tLelp6QweNJCdJbuYMnEihs1gzbr1DBs6hLTBgwmHw2zY
      tBmPx8PI4cN0E1hETih9DoCIiHyxaS0gERGLUgBERCxKARARsSgFQETEohQAERGLUgBERCxK
      ARARsSgFQETEohQAERGLUgBERCxKARARsaherwbqjo7F4XQdy7GIiMhx1OsARMIhAt3+YzkW
      ERE5jnodgGC3H2976+F3FBGRLwTdAxARsSgFQETEohQAERGLUgBERCxKARARsSgFQETEohQA
      ERGLUgBERCxKARARsSgFQETEonq9FMR/CoVCPPLY42zYtLlnW3xcHGdMn8a555yFJyqqT8d9
      /sUFeP0+bvjKtRiGccBj815axLr1G/jlHbcR1cfj/6dQKMQz815k6bIVmJ/YPnvWmVx1xZyj
      8hoiIieiPgcAoL6+gYEpKZx79izMiEl5ZSX/fPJpoqOjOWfWzIPewHujuaWVTm/XIR87ZewY
      MtPTcDj6NewDmEBTUzNxcXGcf+5sHA47AFkZGUftNURETkT9fifNzEjnzNNnAODz+yktr2B3
      WRmnT5/KmnXriYmOYfzY0RiGQfGuXVTt2cvp06fidrlYsnQZCfHxFA0ZwnsfLCU/L/eAY4fD
      EdZt2IC/u5tpp04hEAzQ3NKCzbZ/5qq8spKtH21nyqQJbNi8hZbmFiZOGE9hQQEGUFpWzuaP
      tuHz+RiQnMzp06cSEx19yPMYPGgQZ8yYhsvp7NlmmiadXV2sWbue2vp67HY7kyacQl5uDjbD
      IBAI8OHqNezdW4PT5WL82DHk5+Vit9kwTZPtO3aydfsODMPgtMkTycrM7FMURUSOhaP2UToY
      DLJrdym1dXXMPutMzEiE95ctZ9DAgYwbMwqA7TuLWbZiJVMmTsDlcvHWu0sYkJzM0hUr2VNd
      TWJiwgHH3LptG/944iluvOE6bHY723bs5K13lnDeOWcDUF5eySP/+CdvvfseSYmJNDY18cHy
      Fcy9/Taiotz88c9/IS42FrvDQfXevWz5aBvf/daNnxqB/xSORJi/cDGbt35EbGwMXq+PV15/
      g9t+dCtFQwr5y98f46PtOxg8KJVQOMS27Tv4wXduJiEhntfefJsXFrxE2uDBRCJhXn3jTb5z
      038zeeIERUBETgj9DsCKlauorNpDKBSira2dmadP59TJkzBN8/BPBjZv2crss2fxjeu/Slxs
      LNu27wSgsbGJZ+fNZ+qUyUwYPw7bp7xpxsXFcfON32BoYQEVVVXcPvfXNDU3UTRkCD/6wfdI
      GzQYp9PB6rXreOSxx2lpaTlkALw+LzU1+3qmlxLi44mNjeHcs2dx6YUXEB8fh8/v58e3/4Kt
      27ZTkJfL9p3FnHPWmZx/7jk4HQ4aGpuIjY2ho6OTFxcu5qLzv8TF559HOBLh4UceZeErrzF6
      1EiiPZ6+/bFFRI6ifgdg0KBUpkyaSDgcYndZOes2bOS0yZPIzOzdHHphYT6XX3rxAW/KO3eW
      cP+DDxHt8XD5pRf3TPkcSlSUm8yMdJxOJ/FxcQCEQhEcDgcOu4MXFy6irb2dtrZ2urq8dHm9
      hzzO8g9XsfzDVT3/+6avX89Vl89hQHIyHyz/kLKKCsKhEG3tbTQ1NeFwOBk/djTPvPAiGzZt
      Jj8vlwvPm43D4aCuoQGfz8vUKZNwu90ATJ96Ko8//QwdHR0KgIicEPodgML8fK649GJM0yQQ
      CPDQI48y76VFfPumb/Tq+YNTUw96QwyFQ3R1dRHt8RCJRPo0rm07djL3N/cwbOgQEhMT8Hf7
      MTHhUy5Mzp41k1tu/hZO5/4/ic1mw+f3c/fvfk9dQwMFebnY7XbC4TCmaWK327jxv65nxrSp
      rFqzlp0lu7j9l7/mV3f8DEwT04RPXgQZhgEmvb4yEhE51o7e12mAQCCA3+/reY912B10dXkJ
      hcOEgkGam1sO+bz/nBMfNXIE115xOQ889DDPvvAi37j+azg/cXP2cEwzwpatOyjMz+OHt3yX
      mOhoNm7ews7iXZ/6HJthw+F0HPA67U1N7Cot5Ue3fI9xY0bT2dnF3pp9AASDIar27CE3J5vh
      RUOp2lPNT++cS1t7O5np6URFuVm/aROpA1OIRCIsX7mahIR44j6+ShER+bz1OwDrN2zint//
      AdOEtvZ2ikt28f1vf5PY2FhysrNYsPhlOru6CASDlJaVkzowpVfHTU9P44avXssf//wXcrKz
      mH3WrF6PyTAMcnOyeemVV3nw4UcwbAb1DY2Ew6EjOrfo6GgGpqTw1HMv8Na7S2hra6N6714K
      8nLx+X3c/+BDJCYkEB8fR1NTM6kDBzIwJYX4+DguueB8Xpi/kA2bNhMOhdldVs53v3Wjpn9E
      5IRhnzt37tzD7dTe3k5HWysBv69nm2mahMNhYmNj8Hg8RHuiyUxP44avfYVTxo3FbrMxpKAA
      t9uFOyqK06dPZeaM6QxITmbokAIcDgehUIi8nGwyP/Gd+1A4xOBBqeRkZ5E6cCC5OdlU7qmm
      IC8Pu91OUmICw4cVYRgG4UiY2JgYRg4fhsPh6JleGTViBMOKhpI2KJVgMMSIYUVcfunFRHs8
      jBo+nJiYT9wENk3CkQjpaYPJzc4+4H6Dy+lk7OjRdHf7SUpMYM4lF5OdlUVuTjaF+flMmTiR
      UCiEzbCRm53FN677GikpA7DZbAwvGkpBfh5+v58BA5L5+nVfZcyokfoGkIicMAyzF5PS1dXV
      1FRV0NnafDzGJCIix4HWAhIRsSgFQETEohQAERGLUgBERCxKARARsSgFQETEohQAERGLUgBE
      RCxKARARsSgFQETEohQAERGL6tVaQJ2dnXR1dBAM+I/HmERE5DjoVQBEROTkoykgERGLUgBE
      RCxKARARsSgFQETEohQAERGLUgBERCxKARARsSgFQETEohQAERGLUgBERCxKARARsSgFQETE
      ohQAERGLchzpE8JBLztWv8+G8hYcNhPciUydOYuclGiMYzFCETmAaUZorNrJ0vfepDpmMrdc
      Oe2TjxL0trB66ftUNHix2QxcSVmcPmMKqXHuz23McmI6wgBEqNm6jKXlcM3lV5Lghsbydcxf
      /CZXXXMRyZ4j7omIHIGQv43Vby3mw+JGYqODBF3hAx43TZNNSxZT7RzDZVeNwWMLs33lG7z+
      7lquvng6bl3zyycc0X8OZrCV9Rt3M2HGGSRGO7HZnQzMm0CeUcn2ms5jNUYR+Zi3vYE6fyxf
      vv5GzpmQd/D/gSNNrN3exbTJI4hxObA53IyYOAln7TZKm4Poxz/kk44oAN0tDdT54sjNiumZ
      7jHsDnJzUykv33cMhicinxSfWsicKy8jNzX2kFOu4b0ldCXnkxQT1bPN5kklKwWqqhuO30Dl
      C+HIAuDvJux0E2P/5FaDmLg4/J3thI7u2ETkCHV1tOH2xGM/YDbWQXy0m/aurs9rWHKCOsIZ
      QROMgz93GAD6ZUmRz58JGMZBVweG8fFjIp9wRAGIivLgCAbwRj651aSrs4Oo2IQj/0qRiBxV
      MYlJhLxthA64NxyivaubuJjoz2tYcoI6ogC4EgeQ4m6jstrb82HCDIeprGwgO3fQMRieiBwJ
      ++B8oporaO3q7tkW8TdS3QRZGQM/x5HJieiIAmC4EpkwLp8NKz+k0x/CjIRoqd5CaSCdkRlx
      x2qMItJb9oFMKHKzamMJvmAYMxxk16b1+AYUUZji0r/VkQMYpnlkk/eRoJ/tq95lQ2ULDiBk
      j2HaWbPJT43Rf1wix1jNtmW8v3kPAO11pZS3eRg7NB2IYeLZZzI0NZ6Ir5nl7y+hotGPw4hg
      xKZz5qxpDI6P+uyDi+X8fy3oO3NbQcuUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Expected versus Actual Emission' width='384'>
      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
      pCcToXi/zyQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Expected versus Actual Energy' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Expected versus Actual Share of GDP' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='GDP Lorenz Curve Coloured by Life Expectancy' width='384'>
      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
      2JgMrzcI7TV5uIJTCe8b8lFMNuKCoKC6pW/fKCE5Jclrr6+ZfdAd3X3fiU5nTw9Wi5nUiRPI
      zTyDSzdoqijALzrpthreL2PoTnrtToRhUFuchRaTgb8GSaMjuFBUgWHolOacZ9S42ztJweQX
      SrDeQlVrL7rLTv7FZlITwxmdkkb5hTPDtxREWFgoRTlZ1Lf2YvYPZdo9EzCbvLN715ReoKSq
      mc6WehS/CAJ9A5g+ZypqbzuZWedw6RCVOJbUuCivnlq256ONaMEx/T/i0Nhk0seMoqOxgrP5
      5QihMv6eqVcliDtL0FJbTmFZDW63gaqZiBuTxujIIISrh6zMM/Q6dYJjkkhPibtLazO7OHHs
      DNNmzkAzKfS01ZOdU4jbUEgcn0F8ZPCXb+IWCcNNeVEeVY1tCMMgKCqR9LEJmBRorCwir7QW
      xWRl4pQp/WPg3tLdWsfZ3CJ0ASExSaSnjAZDpyTvLLUt3Wi2EKZPTcfs5S8l//QRQibMIsrv
      cn9cuHrJysqix6kTFJVIRmq8F/cNQVVxLqW1rQD4h8UyaXwyJlWhsug8pXWtmCwBTJky8aqx
      9DvN1dtOdnYuDreO5hvC1MnpWEwKQneSe/YMrd1ObEHRTJmYiummPgtBRWEO5fVttDXWYQ2J
      wuYfwtzpGej2Dk5lncOtC6KTJpAS55n3aagoHL4JQNYCkiRJurFhOwQkSZIk3ZhMAJIkSSOU
      TACSJEkjlEwAkiRJI5RMAJIkSSOUTACSJEkjlEwAkiRJI5RMAJIkSSOUTACSJA0JhhDYHY4v
      LCoj3TqZACRJGhI6O7v49VsbaW3rGOhQhg2ZACSv6ulooaS4mOLiYsqranHpxh3bdntTHQ23
      sbaBEAbN9dWUlJRQ19R21dKNd5pw9fDp5nd59fXf0Py5QvNdbU2UXCyjx6lffwNuB5WVtbdU
      r9/RVMLbm3d94blCGLQ01FJSUkJVbSN6X0nqxpoKiouLKblYSmvn5Yq2bnsXF0s832VZeRV2
      5xejaa/O5aWf/IJ2h0FXWyOl5VW4+rYrdBc1dQ0IPCv2/cePX6aw/ua/P103KKuo4Y233qOh
      qUX2BO4A08svv/zyQAdxJ3V3d6MoCr6+vgMdigRk73yHf/qPP9DSUM3+ndvYl9PE4rlT7siR
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='GDP Lorenz Curve Parameterized by Life Expectancy' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3zV5b3A8c/z+52VTQhhBpA9BEGGCIQtOFqrHY5LHbXWqre141rE0Yo4
      EAettVhva929tc6qdYOyUdmVPWWFSAiZJzn799w/zsmRCCjJOck5yfm+X69UcpL8ztcanu8z
      v4/SWmuEEEKkHCPRAQghhEgMSQBCCJGiJAEIIUSKkgQghBApShKAEEKkKFuiA4hVKBQiEAjU
      e83lciUoGiGESDxd+0+0d8E3fl+LTwCGYeB0OqOfB4PBBEYjhBCJp4N7wL/sG7+vxScApdTX
      fi6EEOLEZA1ACCFSVEITgNaa2tpadu3aVe+1srIyVq5cyf79+6k7qKy1Zs+ePXz88cdUVVUh
      B5iFEC2J1hrLsrAsq1nar1N5j4QmgGXLlvHcc8/x8ccfR18rLS1lyZIlDB8+nAMHDrB161a0
      1qxZs4bS0lKGDRvGhx9+SFVVVQIjF0K0Fq+88goejyf6udvt5oknnojre2itWbZsGXPnzmXB
      ggXRxnn16tXMmzePJ554gieeeIL3338/puSgtQ/tX8+OnUX88YkKAHbv9fPm+24ADh0OEghG
      nq/SErsGkJ+fz+WXX84777wTfW3z5s2MHDkSp9PJWWedxb/+9S/69+/P559/zsUXX4zD4WDo
      0KFs3ryZMWPGJDB6IURrsHr1aqZNm0ZaWhoQ3kV43nnnxf19li5dyk9/+lPat28ffW3fvn0M
      GTKEc84555Sfo0NHwfvWib9mVUDNY2ivP/papw42sjLDff1//quaqy7Npl3bNFTWbxObAAYM
      GEBNTU291yoqKsjNzQXAbrcD4Pf70VpHP8/NzWXz5s3NG6wQIiUEAgGWLVvG9OnT2bVrF0uX
      LiUtLY3S0lLGjx/PkCFD2LdvHwsWLCAYDDJhwgQGDBgQ/fnKykreeOMNvF4vHTp04MILL+TT
      Tz/lk08+ITMzkwEDBjB16lQM4+QTMAcOHOCDDz5Aa00gEGD69Ons2LGDtm3b0rObl7IDd7N4
      pYfvXpDJweIgCxbXEAxBZobB97+VWe9ZFZUWn23x0a5tkE/XeTFMFx26fotvTduXfIvASqnj
      hkBf3dmjtf7a//OEEKKxgsEgGzZsAODo0aMcOnSICy+8kB/96Ee8/PLLWJbF/Pnz+c53vsMV
      V1zB008/jdfrjf78X//6V4YPH861116L3+/no48+4uyzz+bMM8/kyiuv5Nxzz422X1pr3n33
      3egU0IoVK/D5fMyf/wjfvmAMP/7RxRzYvwNPTTEH9m+lrHQvWFXUejWbt4d7+W2yDS75ThbX
      Ts/G79es+Y+33r9Pldti++4AI4a6GDU8nSuvmcv0H/QjSz2VfNtA8/LyKC0tJTMzE7/fj2EY
      OBwOTNPE5/PhcrkoLS2lXbt2iQ5VCJECCgoKyMzMJBAIYBgGFRUVHDx4kFWrVgHhHv+hQ4fo
      2bMnoVCIoqIiBgwYgGEYTJ06lccee4wpU6ac8NlKKc4///x6U0AHDhwgN2M3+eoiKAV74ChW
      6RvoSi9Whg1dXv+ga0WVxbsf1qAU7Po8QMf2JnltzRO8mxPlGAPB3Wj3P1DKSlwCCIVCVFZW
      Ultbi9frpaysjPT0dAYPHsySJUtwuVxs2bKF4cOHA3D66aezevVq+vTpw5YtW5g6dWqiQhdC
      pLD09HQ6dOjAmWeeiVKKYcOGRTukdR3W2tpaMjMzOXjwIHl5eQ16flpaGl6vH0trjK/Oflhf
      +afWPP1CJVdekk33AhsfLvMQCp1gEVm5UNm/A+M9Qu7nwRV+bkITQHFxMQCjRo2iuLiYzp07
      k5uby5QpU9i/fz+DBw+mXbt2KKXo378/JSUllJeXM3XqVNLT0xMVuhCiFXG73bz++uukpaXR
      tWtXTj/99K/9fpfLxahRo3jjjTfIy8ujqqqKyy+/HIfDgVKKSy+9lMcff5zOnTuze/dufvGL
      X5z0WVprli5dStmhvwEhOrW3MXqEk3bZO/jfZ6po385k1+fhUjc9utt54103+4oCfHE4hLbC
      DX3vHg7eXlBD21yTjVt9TBid9pV3MVDpl4JVyuCeC/n7Kx5697Bz/uQMVGu7ESwYDGKzJd3M
      lhAiSdXU1ETridntdtLT0/F6vaSlpREMBrEsC4fDgdY6Og2ttaampoZgMEh6ejoOhyP6PK01
      Xq8Xn89Henp6dPOK1+vF6XRiGAY6uB8IEvAHqK2twSr7IWg/drsiPU1haaipsTAMxbzHy7n+
      qhw65JvU1GosC9LSFKGQxuU0sCyNu0ZjGOB0KFBgKAgGNU5XBlbGbwn69uEIPIXWAdw14SY/
      M0Ml3xqAEEI0p4yMjONeq9sSemxnUikVLTSplCIzM/O4n6v7WlpaWvQZX30mgC77IViHsQHZ
      1P3Pl/P2poLsrPrz+EopMjO+nBKy28J/NgxFdtbxJXBM04bKmoVplWAE/gZYKKXIyvzye2UE
      IIQQTUzrALr6vi9f8PwLtOfkP3CMYEhjGg2sc6bSUFl3okNFUPM4EDrht0lLKYQQcWCV/xRC
      pSf7KgS3NOq5NrOhBS5tqKzfgXUEav4cfu+TfqcQQojYBbaDVZzYGFQaKnsWBA+iv6HxB0kA
      QghxyrRVEZ6+OeEXa078erNxoLLugNBhdM3jfFPjD5IAhBDi1Fml6Or7Ex3FCbjCPX+rGO2e
      z6k0/iAJQAghTkprC6zyLz8v/+8ERnMyLlT2b8E6jHZ/87TPsSQBCCHEMbRVCf61kU+q0ZUz
      EhvQ13JEev5foN1/oiGNP0gCEEKkGK09aPf/nvwbQl+A9yTz/MlEpYXn/K3iBvf860gCEEKk
      Fu2N7I1vyWyorDvBKmnQnP/xTxFCNIjWmoqKCmpra4FwAbAOHTpIifIWQIcOQ+hQosOIjQpf
      5oJ1CO0+td0+JyMJQIgGeuedd1i+fDl79+6le/fulJaW8uc//7lePRjRPLQOgfeNU//+2n9C
      YEMTRtTUzEjPvxTtfoxYGn+QBCBEg9RVsZ01axYvvvgiV155JU8//bSUH0mYILry1kQH0Twi
      5R0IFZ3yPv9vImNWIRqo7kY6j8eD1hrTNOvdCCVE/Nki0z6lkcb/xLV9Gv5UIcQpM02Tvn37
      EggE6NWrF7NmzSIrK+u4yo+imQS2JTqCZlB3yOtQXKZ9jiXVQIVoJK01brebtLQ0+Z1rBtq/
      BgKfAbCjsi3LvijgovxbybPvT3BkTckRvsnLKovs8w/G9enyWytEA5WVlbFu3Trq+k6maTJh
      wgRM80T3sIp40b4lUPMXADbs7cec1RMZPa2GvNwEB9ZknKjsuxp9yOtUyBqAEA1gWRZPP/00
      Ho8HpRRKKdn+2US8NV5KK6s5UlPD2zu28/fPWvLunYY6trxDfKd9jpV0IwCv18u6desIBoM4
      HA5GjhyJaZp4PB5Wr16N1pp27doxcODAhl2QIEQc1P3+XXDBBQnt8Wv/WrAqEvb+TUlr2Lw6
      g20fr+TubaXUDA1fqn7zYF+CI2sudeUdDqPdj9JUjT8kYQJYsmQJQ4YMoUOHDmzbto01a9Zw
      1llnsXz5cvr160dBQQGLFy8mJyeHgoKCRIcrUoxhGKSlpbFt2zby8/Ojr+Xl5TVrh0RX/x4C
      q5vt/ZpTMABP3tKLMedVARMSHU7zipZ3+KJJe/51ki4BVFRU0K5dO5RS9O3bl5dffpmRI0dS
      VlZGly5dMAyDAQMGsHXrVkkAotnVLfw+88wz0YNfLpeLmTNnykEwEaO68g5HmmzO//h3TDJ9
      +/blk08+oUePHlRXV1NdXU0gEACIzrWmp6dHj+GHQqHo1yH8F1R2ZIimYhgGP/7xjxMdRrMJ
      BDTLV3mYMDqNdxbW8N6iWq65PJthZ7iQGdg4qlfeoXGF3Roj6VrKoUOHcuTIEdxuN3l5eWRk
      ZEQbdK01SikCgUD0NdM0683FBoPx3SYlBIQXf1955RWmTJnCypUr2bdvX/RrDoeDa665Brvd
      nsAIm0ZltUVZeYhgED7fH+T+O9rx6ltuhp3hBCQDxIcZucO3rFmmfY6VdAlAKUX79u3Jz89n
      9+7ddO/ePTrvWlVVRZs2baI1WIRoLkopCgsLycrKYvLkyfU6GkqpVjvqVCqcBHbtDdA218Bm
      AyWbnuKnrrxDExzyOhVJ91tbXFzM9u3bAQgEAkyYMAGlFKNHj2blypWkp6djWRZnnnlmgiMV
      qUQpRefOnQGw2Wz1ph1b82603BwDl1Px6lvVXHdFDgeKgvToam/V/87Nxx5Z8C1t1mmfYyVd
      AujUqROdOnU67vX8/HwuuOCCBEQkxJe01jz11FPs2LEDl8sFgNPpZMaMGa1yEdgwFJdfnMWO
      3QHKKy06dzTp1DHpmo0WyIXKvjOy26fx9fxjJf8lhWgAy7IwDIP7778/JU7+hkKax56uxO+3
      8Hg1V1+Wzdr/+Lj4/AwZBTSaE5Wd2J5/HZnNE6IBDMMgKyuL6urqRIfSLMoqLDrkm/z6+ly6
      F9hp386kqjpxDVbL54wc8jqKdj9CvGv7NJSMAIQ4BWVlZdx55534/X7cbjevvfYaWVlZAKSl
      pfHggw/idDoTHGX8OR2KI6Uh/IFw3aPSMku2fzaaC5V9e8zXOMaTJAAhTkHbtm2ZP39+osNo
      dlmZir697Nw9r4zdnwfYeyDAdVfkyPRPg9kjc/5Hmry8Q0NIAhDiFGitefHFF5kyZUq0BASE
      DyI+8cQTXH/99a2yUfQH4MzBLiaOScfn1zgciqNloeiZHHEKVBoq6/YmL+zWGLIGIMQp0Frj
      9XrJza1fe9g0TTIzM/F4PAmKrGmVV4T4dJ0Hh0ORlWmgFCxcWpvosFqQukNeFU1Szz9WMgIQ
      4hQopQiFQpSXl9cbAQSDQQ4fPtzq5v+11qzb6GPjFj+79/qpO/dWVh7C6ZSe/ymJlndonsJu
      jSEJQIhToJRi6tSpzJ07lylTptCnTx/Kysp4/fXXGTNmTKvcEpqTZZDfzuRouUnH/PC/X7cC
      G4P6OWX65xuZkca/ImkWfE9EEoAQp6hr167cd999vPfee7zzzjtkZGRw0003nfDgYlOYu3wp
      Vb7w5fPXnlZOj4ymey+lFL17ODitq50Jo9PIzJDZ4lOXFrnGMbGHvE6FJAAhTpFSCpfLxcUX
      X5yQ939j21YO17gBuDC/pkkTQB3ThBWrPLz+bg0+f7ghGzMyjWunZ8so4ITska2eR5N22udY
      kgCEECdVWWWxc0+AGT/LZc++AN0LbOwvCiKVQE+krrzD4War5x8rSQCi1Vj0+R52HD2a6DCa
      RMamMqblfcbzNT2b9X19fk1BZxsOO/gDmm4Fdj5d5wU0kgSO5Yz0/EtbRM+/jiQA0Wq8vXM7
      r23dkugwmkSHp7bzl8c38Pz+5k0A2ZkG1W6Ltm1M1v7HS0VliEBy7WRMAo5Iz78U7f4jLaXx
      B0kAQoiv4XIpfnBhJi6n4rorctizL8CZg2QX0Jdcx/T8W8a0z7FkaV8IcVK1Hs2hL0IopejY
      3sbIoS727A+gtU50aEnAFun5V0R6/i1vaCQJQAhxUtVui607fdHPtYZV670JjChZpEWqeh5O
      qto+DSVTQEKI42iteeO9Glau9nDoixDrPgsngZpazbhRrgRHl2gmKvu3YJW3yGmfY0kCEEKc
      0AVTMhh2hpNN2/xMHJMGhO8IdjlV6q4BqLTINY7JV9itMSQBCCGOo5RCKU2XjjY65tuw22HH
      7gAo6Nuz9V19eWrMSONfGWn8Q4kOKGayBiCEOE4wpHnkiQpCIXA4FAuX1PJ/r1bx5ntuFq9M
      xWqgLlT2PZF6/vNoDY0/yAhACHECtR5Nlw4mDofCsjSrN/i441dt0Rpe+rc7xe4DqCvvUNYq
      pn2OJSMAIcRxTANqvRqtNVt2+OnS2YbTGW4urFAqbQF1orLvijT+v6clbvX8OjICEEIcJz1N
      YbcpZj1YxpGjQe6+JQ+Az/cHyW3T+kpfn5jzmMJuyV3Vs7EkAQghjqOU4urLsvH5NXYbGEZ4
      uqdrFxu9e9hTYPqnrrzDUbT7EVpj4w+SAIQQX8PpqN/Qp8a9AC5U9m0ttrxDQ6TCf00hhDhF
      tshlLlUttrxDQyTdCKCqqoqVK1eSnp6O1+ulX79+dO/enSNHjrBq1SoyMjJQSlFYWNgqr+ET
      Ihls2ORj0YpatAavT5PmCo8EAgHNgD4Ovj0toxVOA7lQ2XdEtnq2zjn/r0q6BLB27VoGDhxI
      t27dCAaDvPzyy3Tt2pWPP/6YwsJC2rZty6pVq9i1axf9+vVLdLhCtEp9e9np1CGLqmqLFas8
      nD8lfP1YSWmI3XsDCY6uKdSVd6hs0bV9GirppoByc3M5cuQIlmVx5MgRsrOzAaitraVNmzYA
      9OzZk7179wLhmiWWZdX7EELEJj3NoEO+jTbZBpmZ4T93yLfRr7eDqurW9nfMhcqeHen5/55U
      afwhCUcA/fr146233qKqqoqSkhImTZqEZVmRo+nhIafdbicQCPdCtNbRP9d9LoSIj5wck41b
      /Qzq56dPTzuLltdiJF23MRZmeNpHV0WmfVrHCd9TlXQJYOHChUycOJH8/HxCoRAvvfQS3//+
      91FKYVkWpmni8XhISwsXpzIMA6fTGf35YLB1L9oI0ZwcdsX/XN+Gv79SzbMvBhlyupPLLs5q
      JfP/rsiC75GUmvY5VtIlgDpaa0KhUHRKJycnh8OHD9OpUye2b99O7969ExyhEKkhO8vg2h+G
      p2LtNtVKrgK2R7Z6lqfMgu+JJF0CmDx5MqtWrcJms+H3+znnnHNwOByMHz+eVatWsXPnTnJz
      c+nWrVuiQxWi1bMszatvu1n2sQdH3bWQewOcNzmDljsIcEZ6/kdb3B2+8ZZ0CSAjI4NJkyYd
      93paWhoTJkxIQERCpK7KKovqaot5s/N54V/VdOti45O1XkDTMocCdeUdUrvnX6dVLecIIeJL
      Ey4DUdfb9/s1ltVSN1rYjznk9QegNW5nbZikGwEIIZJHm2wDrTVz/ljG5/sDbN/t54rvt8RF
      4LryDq23sFtjSAIQQpyU1nDZxVnU1GpKSoN0L7AnOqRGMCM9/4qUn/P/KpkCEkKcVGlZiCUf
      e8jPMzm9nxOHXfHm++4WdN7GhcqeFdnq+Qek8a9PRgBCiONorTlyNMTeA0EOFQfZsy88X374
      SBC3u6U0onWHvKpTdp//N4lLAggGQwSCQdJczm/+ZiFEi7B5u5+1//Gx72CAUKTtzEhT/Nf3
      slvAGoArUtun9Zd0jkVcEsDuvfv5aPkqrrr0O6SnuVrAL4cQ4usopZg0Np2zh7sor7Do3LEl
      TRbYwls9dVWk8U+t8g4NEZc1AJ8/wJbte/jrcy9T6/HG45FCiATy+TUfLa8FYNtOPwuW1EY/
      Nm31JfEagCtyh285uvphpPH/ejEnAI/Xy8rVG9CWxc49+3ny/17DXVMbj9iEEAmiFGSkGxhK
      kZNt0OaYj/T0ZN074kBl3xrZ7SPTPqeiUeO6QCBI0RclBINBFiz+mE3bdqG1RmvNlu27+N9n
      XuLGay4jIz0t3vEKIZqBw64YNcwFwPAhrgRHcyrq7vAta9V3+MZboxLA9l2f8+xL/8bn8xEK
      WdHGX2uLzIx0So4cZcWn65g6cYysBwjRgvn8mrvnHSUYJHoa+MxBTi69KDO5/m6nXx4p7yA9
      /4ZoVAI4vX9vvnXOOF57e2G9xr99fh6/+MkPaZeXG+84hRAJUFEZYtgZTr7/raxEh3Jyzsko
      W0901d1I498wjUoASin69T6N9LQ0gqEgbncNnTrkM+PnP5atoEK0Im1yTI6UhviiJIjNDPf4
      nU5FZoZK+AjAZbPhzP0t2Hajqx9CGv+Ga1QCcNfU8s9/vceF0ybQvWtnHn/mn5imSXpaS5gr
      FEKcKp/PYu+BII8+UYGKrP0OPd3JDy7MTGhcpmFw54RJdM9YDTV/Rhr/xmlwArAszaLlqzl/
      SiH9ep8GwM+vnc6evQfjHZsQIsGys0zm/rZdosP4ChfnD7yKZ7bVsufQU/TJkca/sRqcAJSC
      cyeNweH4sihUpw75dOqQH9fAhBCJ4/FaPPRYOcdct02aSzHu7DQKRyXysKeJyr6dVYey+cMn
      K5k4VRr/WDQiAah6jb8QovVxOhW/uK5N+EKAiJAFb77nptptcf6U9OZPAiotcsirjJKSf2Lp
      cc37/q1Qsp7oEEIkkKEUbbJN2uR8+ZGXa/Jf38uipDTY7PHYDIO+BddHCrtJeYd4kQQghDhl
      tR4dLQzXXJymjbsnTWFQm92R8g7Nn4Baq7hVeLIsi1AohGmaKJX4LWJCiMbz+iye+WcVgWPa
      WgXs2R/gp1fkNNvfb6dpMnP8BCq9Xv695R1+0k/m/OMppgSgtWbnzp0sXLiQXbt24Xa7yczM
      pHfv3kybNo1evXpJIhCiBbKZiuFDXPXu/01PM/jplTk4HM3zd9rhsvPbC8+j2Odn3sfL+fUg
      mfaJt0YngJqaGp566imKioqYOHEi3/nOd7Db7QQCATZt2sQTTzxBQUEB1157Lenp6fGMWQjR
      xGw2xcihiTvXo5SLSVf8iH/uM3jkkxVYSVt9tGVrdAL47LPPGDp0KD/72c8wjPpLCQUFBUyb
      No0VK1bwn//8h9GjR8ccqBAiNSjDznk//W/+s7Kcxz94m8BgKS3TVBqdAEaNGlVvrn/Lli28
      8sorBAIBzj//fEaPHk1hYWES1w0XQiQfF2abW2nXoYTdq58gFBqT6IBatUbvAlJKUV5ejtYa
      y7L461//yre+9S2uuuoqnnvuOTweD0qp40YHQghxYuE7fEMBD/933wugA9/8IyImMS0CL1++
      nEOHDnHJJZeQk5PD5s2bycrKwmazYbM17tE7duzg8OHD0c8DgQATJkzAsiw2bdpETU0N3bt3
      p6CgQBaYhWg1XOFrHK0ydPV8rFC3RAeUEhqdAJRSXHjhhezevZuXXnqJ0aNH4/f78Xq93HHH
      HTgcjkY9t2/fvvTt2xeA4uJiNmzYgGEYrFy5kry8PAYNGsSCBQtwuVzk50v5CSFaPhOVfRvo
      WrT7UeSQV/OJeX7GbrczduxYHA4Hhw8fZsSIEXTs2DHmwCzLYuXKldEF5EOHDtG3b1/sdjtD
      hgxh8+bNMb+HECLR6u7wrYiUdJbGvzk1egSgtWbRokW8+eabdOnShaKiIm666SYWL17MggUL
      +PGPf4zd3viaQUeOHMHpdJKTk0MoFP6lME0TgMzMTNxuNwChUIjAMRWrtNaNnn4SQjQnW/gO
      X+2W8g4JElNLuXr1aq644gqGDx/OH/7wB0pKSrjmmmvYunUrwWCw0QlAa82aNWsYMWLECReS
      604cQzgp1P0ZIBiUY+JCJD8nKvu3kQvc/4DU80+MmHYBffe73+XJJ5/k2muvpaamhjPOOAOl
      FAMHDiQtrfEXwldUVBAIBOjQoUP0vex2O7W1tUB4baBTp06Nfr4QIpEc4Z6/VRWZ85fGP1Ea
      PQI4cOAAnTp14s9//nO9GkDHqqqqoqKigm7dTn1FX2vNqlWrOOuss6LPU0oxcuRIVqxYQYcO
      HSgqKmLq1KmNDV0IkTB2VPbvwKpEu3+PNP6JFVMpiEceeYSpU6cyevRosrKyUEphWRbV1dWs
      WLGCDz/8kOuvv77Bzy4sLDyufERBQQF5eXn4fD5OP/10mecXosVxRnr+lWj3H5HGP/Ea3Yr2
      79+f2267jZdffplXX30Vh8MRrQXk9/sZMWIEt99+O3l5eQ16rlKKjIyME76enp4udYWEaJHM
      8Jy/rpaefxKJqRvdrl07brjhBrxeLzU1NQQCAWw2G5mZmbhcibw2TgiRPFyRnn95ZLePNP7J
      IuZ5FKUUaWlpMS36CiFaq/AdvuFDXo8gjX9ykYl0IUQTcYVP+FoVstsnScWUAPx+P//4xz+i
      e/Yvv/xyXK7E1RAXQiQLM3LIyxNZ8JVDXskoplIQb775Jnv27OGHP/whe/fu5fXXX5fyz0Kk
      PGekvEMVuvpBpPFPXjGVgtixYwf/9V//xYABA2jfvj3PP/98PGMTQrQ49mPKO8i0T7KLaQoo
      FAqxd+9egsEghw8fpqysjI0bN2KaJv369ZO9+kKkFEekvEOVbPVsIWJqoTt27MhLL72EUgqt
      NVprHnnkEex2Ow8//DBZWVnxilMIkdQcqKxbwaqWQ14tSEz3AVx33XVcd9118YxHCNHi2CM9
      /2q0ex7S+LccMc/RlJeXs3DhQoqLi3E4HIwfP57+/fvLVZBCpAQnKmtmZNpHev4tTUyt9JEj
      R/j1r3/Nzp076devHzk5OcydO5e33norXvEJIZJWpLwDvsicv9zh29LEtAvonXfeYdq0aVx+
      +eXRHv/48eOZPXs2F1xwgSwCC9Fq1ZV3kENeLVlMI4CDBw8yYsSIetM9HTt2JCMjI3pjlxCi
      tam7w9cXucxFev4tVczbQF988UVyc3Ojr2mtOXjwoBwIE83CKrsK/BsA0J6xQO/EBtTq1ZV3
      qJSefysQUwKYMmUKu3btOu71iy66SIrDibgJhEK8unXzCb82OaecdnZv5DM5cdq0TFT2TNDe
      SOMv16+2dDFtAx07dixjx46NZzxCHMcfCnH7hwtO+LUXJ1fQLr+ZA0pJTlT2HZGev9zh21rE
      NALYvHkzu3bt4tvf/jYPPfQQZWVlAAwcOJCrr75a7gMQolWwh7d66hqZ9mllGr0IrLVm4cKF
      dOzYEa01u3btYvLkyUybNo1ly5bh8/niGacQIiEc4Tt8tQdd/RCy4Nu6xDQCcLvdtGnTBsMw
      OPfcc5k0aRI2m41///vfeDweKQ0tGmzDok1sW1V/XenoyIZdKyrixRHp+bvlMpdWKqY1gD59
      +vDRRx/Rp08fLrnkEgB27txJTU2N1AESjbLqnfW8PO/Neq/tn3kGdJS7oJuXLXKHrxtd/TDS
      +LdOMY0AzjvvPH73u98xY8YM+vTpQ01NDZ9++ik33nijHAITp6zc48EbDOIyg0BIZTkAACAA
      SURBVJRPbYP35Uxc++UcSeJIeYdUEVMrnZ2dzdy5c1mzZg1FRUV06tSJSy65hK5du8YrPpEC
      bvvwAz7YvYvzCvZQkFGNls5DApnh3T66Vko6p4CY/6alpaUxbty4eMQiUkggFGLex8sB2HG0
      NMHRiDBXeJ+/HPJKGdLVEgkRtCz+unZNosMQUXV3+PoiC75yqC4VNDoBBINBtm3bRih0/C+K
      YRgMGDBA1gHECelQMQSPJjoMEeVEZd9+zJy/NP6potEttM/n4/3336empob169czbNgwDMOg
      pqaG4uJi5s+f36gEUHfXcFFREaZp0rVrV3r27Inb7WblypU4HA6ysrIYNmyYHDRrYaqOVrPs
      1U8YNOT/aNflU+AniQ5JYEa2enojjb+Ud0gljU4AGRkZ3HzzzRw5coTf//733H777Zimid/v
      584772x077+4uJgDBw4wZcqUaAOvtWbp0qWMGDGC9u3bs3z5cvbu3UuPHj0aG75IgNKiMh65
      4a/86uEDTLw00dGIL8s7yB2+qSrma7ucTiclJSXs3bsXv99PSUkJhw4dIhhsXE9i27Zt9O/f
      H7/fj9/vj1YVra6uJi8vfCCoT58+7N69GyB6F/GxHyL5eINBfvne24kOQ0TZUVm3RHb7yFbP
      VBXzJH1WVhbXXHMNs2fPxuPxYJoml112GRkZGY163tGjR9mxYweHDh2isrKS7Oxshg8fDoBp
      mgC4XC683nAFSMuyCAS+PJ6utcZut8f4byXi7ZrXX2Xn0VJkg3AyiNzhq2vkkFeKizkBKKUo
      LCxk+PDhVFZWkpmZ2ejGHyAzM5MhQ4aQl5eH1prXXnuNwYMHA+HG3jAM/H4/DocDCCeFusQA
      NHrkIeLvjcfeo7baA0CJQ7Z6JgfHl4XdqqWqZ6qLyzadoqIi/vGPf/DFF19w44038sknn3DF
      FVc06lm9evVi+/btjB49OjqdY7PZyMjIoLy8nLy8PHbv3i3z/y3APx94ndKD4d0+xT8bAOmy
      KyyxbF8e8pKevyAOawC1tbXMnTuXIUOG4Pf7SUtLY82aNXg8nkY9r1evXpimyeLFi/nwww8Z
      NmwYdrudcePGsXbtWhYvXoxlWfTq1SvW0IVIIU5U1m1gudHVsuArwmLukrndblwuF5MmTWLh
      woUopQgGgwQCgUbdCmaaJqNGjTru9ZycHKZNmxZruKIZefpkw0HZ7594Znifv/ai3fOQxl/U
      iXkE0KZNG+x2O48++ihFRUU899xzZGZmSjXQFLfguSXsL5QyzonnDC/4WtUy7SOOE/MIwOFw
      cNttt7FgwQICgQA9e/Zk2rRpckgrhX30wnL+9+Zn8VzZLdGhpLi68g6ByDWOcsJX1BdzAigt
      LeXvf/87N910E6ZpEgqF+Nvf/sbVV18tF8K0Ikdra/nC/fUlmm/9+2vssHuwQhbtOsuCb2I5
      UdmROX9p/MVJNPpvad2hK7/fz+HDh7Gs8NCyvLyclStXMn36dEkArci/tm1hzrIlX/s9XR7d
      RODXg0ABMgJMIDNyyMsntX3E14qpm/a3v/2Njz76iJKSEq655hqUUiilmDBhApmZmfGKUQhx
      yhyR8g5uWfAV3yimBHDttdfyve99j7feeovp06djGOE1ZdM0ZQ1AiGZXV97BI3f4ilPS6F1A
      SilM06RNmzbRPfk2mw2fz8fbb78tNXmEaFaR8g4E0NUPAoFv+gEhYt8GWlFRwZtvvhnt/Tsc
      Dj744ANqampiDk4IcSrqyjvUSnkH0SAxJwCbzUZ1dTVVVVVAOCHU1tbKZTBCNIvIHb4E0dUP
      Af5EByRakJhb6ZycHM477zx+8Ytf0LlzZ4qKirjkkktwOp3xiE8IcVLO8Jy/5ZY5f9EocakG
      evHFFzNq1CgOHjxI165d6dChgywCC9GkzPA+f+2X3T6i0WKeAtJas3z5cu68807uuusuSktL
      mTVrliwCC9FEnKaNzLYzI4XdHkQaf9FYMSeAyspKXnjhBW6//XYGDhxIXl4e1dXVsggsRBMw
      leK2cePpl3M4Mu0j91+Ixos5AYRCIWw2G+3bt0cphdfrpba2VqaAWgld+09Wb5rE3OVLEx1K
      yrObdmZNnIwnEOA/+55GGn8Rq7hUA+3Xrx833XQTmzdv5p577mHQoEGkp6fHIz6RQGWeWlYV
      7UfrEJZM6SWUzW4jL/8m/KEQv/94BUFLpn1E7GJeBDZNkxtvvJF9+/axa9cuTjvtNHr16iUj
      gFbgUHU1/96+je90T3Qkqc1hmvxizpUEM/cy560lkoxF3MScALTWrFu3jqeffpqKigq6devG
      ddddJ1c2thBBy8ITOPGp0dqTvC6aj8M0ubVwPCwvpiJ3Ppb+XqJDEq1IzAmgqqqKRx55hBtu
      uIEePXqwbt065syZw+OPPy6HwVqAVUUHuOK1V0769ely82bC2A2D346fiDcY5I9P/ps/D5OE
      LOIrLovA3bt3Z9SoUXTu3JnzzjuP9PR02QUkRAycpslt4ybgCQR4eOVyQjLnL5pAXG4Eq6io
      4JlnnsHlchEMBjl8+DBvvPEGLpeLiy66SE4FC9EAplKRnn+IB1csIyRz/qKJxGWO5uyzz8bv
      9+P3h+uQTJs2jWAwiN/vlwNhQjSA0zS5tXACNYEA81aukMZfNKm4JIBhw4YxYMAAlFJYlsWy
      ZcsYPny4XAojRAOYSnH7uIkELYuHpOcvmkFcEsDzzz/PaaedxjnnnMOTTz4JhEcFIrm9+ODr
      rK84Ah0SHYmom/OvDQT4/cfLpfEXzSLmReDMzExmz57N7t27+dGPfkS3bt24++67Zd6/BVjw
      3BKWvfpJosNIeaZS3Fo4gZClmffxcgKy4CuaScwJoLa2lnvuuYf09HQee+wxtm/fzl/+8heC
      QTmmLsQ3cZomsyZOxhcKMmfZYjnhK5pVzFNAgUCAc845h7Fjx2Kz2bj//vt555138Hg8ZGVl
      Nfh5WmtCoVD087qrJ7XWWJaF1lruHBatgs0wmFk4Hn8oxLyVMu0jml+jE4DWmkOHDpGXl8f4
      8eMpKSkhPz8fp9PJ8OHDSUtLa9Rz3W43r7/+Or179wYgPz+f3r17U1xczLp168jJycHj8TB5
      8mQ5aPYVL23eyKcHD57y928tbAOLqpowInEyDtPkt+Mn4gkEeXDFUmn8RULE1II+++yzXHbZ
      ZXTv3p158+Zx11134XK5mD9/Prfffju5ubkNfqbb7aZnz56MHj06+prWmlWrVjFp0iRycnJY
      v34927ZtY9CgQbGE3+qsLy7mX9u2nPL3q55pdFzUhAGJE3KYJjPHjscXDDJPFnxFAsW0BlA3
      JQPg9Xqjfz52CqehSktLKS8vZ8uWLRw+fBitNVprvF4v2dnZAHTr1o2DkZ5u3ZRR3Yclc6gi
      idki5R0sbTF3+VL8MfxdESJWMc+h1NTU4Ha7CQaD0X/GkgD69u1Lly5dCIVC7Ny5k127djFq
      1Kh6c/42my26yPzVNQM5eCaSldM0uWXseDwB6fmL5BBTAsjIyODhhx/GNE0qKyu55ZZbUErh
      8XgwjMYNLpxOZ3QLabt27XjhhReiCcCyLEzTpLa2NnrfgGEYOByO6M/L7iORjEyluGP8RAKh
      kMz5i6QRUwL47//+7xM2uEqpRi8CHzhwgDZt2pCZmUlJSQlZWVmYpkl+fj779u2je/fubNq0
      idNPPz2W0JuN1prNmzezbt266E6m0aNH079//0SHJpqJM1LSuVbKO4gk0+gEoJSq11uPl4yM
      DDZu3EgoFMI0Tc455xyUUowdO5b169dz8OBBunfvTqdOneL6vk1l586dvP3222itGTRoEOvX
      r2/06Ei0POE7fCdgaS3lHUTSiWkbqGVZGIYR/Wc89ua3bduWMWPGHPe6w+Fg1KhRMT+/ue3d
      u5dLL72UzZs3M3z4cIYPH87atWvp27dvXN9nffEh1n9xKK7PFLGpK+/gDQbDJZ2l8RdJptFd
      Ubfbzfz58ykpKeHxxx+XxdeTyM3Npbi4mIKCAlavXk1ZWRmBON+0dWj3F8ye8QQ7jh6N63NF
      45lKMbNwPJbWzFu5XE74iqQU0xTQxo0b6datG5s2bWLNmjXRqQ3DMBg8eDB2uz1ugbZUQ4cO
      paSkhE6dOrFhwwa2bNnCr371q7g8+8nb/o8XH3wDjabqrHwYKdVXk8GXh7wCUs9fJLVGJ4CM
      jAx+8pOf8P7773P48GEWLVoUnQKy2Wz0798/pRNA3fkFm81G586dAbj66qvj+x7IttdkYzMM
      Zo4dRyAUYt7HsuArkltMI4Czzz6bQYMG8cknnzB58mRZ3DzGli1b2LlzJ4MGDeL111+vd0Bt
      6tSpnHnmmQmMTjSF8B2+k/CFgjywXLZ6iuQX80GwjIwM+vfvz5w5c9i9ezd9+vThqquuoqCg
      IB7xtVj9+vWjd+/e2O12fvnLX9b7mmmaCYpKNBWHaXLL2HH4QyFZ8BUtRswJwOfz8eCDD3LO
      Oefw3e9+l61btzJ37lz++Mc/pmxDV7f3v7i4+IRfHzhwIN26dWvmqERTsRkGd4ybSMAKMXf5
      Emn8RYsR85xNVVUVLpeLCy64gNNPP52LL74YwzBwu93xiK/FstvtOJ1O9u/fz4EDB6JnJjZt
      2kRZWVmiwxNx4jRNbiucgC8UlAVf0eLEPALIysqipqaGDz/8kIEDB7Jhwwb8fn9K3weslGLg
      wIEMHDiQUChEr1696NGjBxDeFbR48WKGDh2a4ChFrI495PXAMpnzFy1PzCMAl8vFLbfcwsqV
      K5k1axbr1q3jtttuS9npn6/q1q0bCxYswOfzYVkW69atIyMjI6ZnHqyqZG9FOVVeb5yiFA3l
      NE3uGD8RXzDI/dL4ixYq5hGAUoru3bsze/bseMTT6vTp04ft27dH///p0KEDN954Y0zPvOzl
      Fyl2V9N2034afuOCiFX4Dt/xaOAhOeQlWjC5UquJKaX49re/zQUXXCDXWbYCdeUdfMGgNP6i
      xYtLArAsC5/PV+81l8slDR1w5MgR5syZU69k9cUXX1zvxjPRMphKccvYcHmHh6XxF61AXC6E
      +cUvfoHf748eBHM4HMybNy96g1cqW79+PTfccAP9+vVLdCgiBg7T5I5xE8OHvGTOX7QSMScA
      j8dDXl4e9913X0qXfjiZgoICSktLJQG0YHbD4Jax4whalhzyEq1KzAkgNzeXDh06sG7duugl
      MEopBgwYgM0mSwymafLoo4+yZMmS6Gvnnnsuw4cPb/CzPn17Lf8q2k1FwBPPEMXXqCvv4A+F
      uH/5Ymn8RasScwtdW1vLZ599xsaNG6NbP+12Ow899BBZWVkxB9jSde3alQceeKBe0ba8vLwG
      PUNrTXWZmx1r9/D25xvwDG3Yz4vGOba8w0Mr5ZCXaH1iTgB+v58uXbpw9913S4//BNLT0znt
      tNMa/HM1fj+rig4CEAqGmD1tDq59bri6T5wjFCdiKsUd4yYStCzp+YtWK+YWOz09nWAwyMqV
      K+td1J7q9wFs2bKFP/3pT4RCoeO+Nn36dCZOnPi1P3+ouopr3/xX9HPXhd3oMn9LvMMUJ+CM
      9Px9IbnJS7RucSkG53K5eOutt6Kv2e12+vbtm9IJYODAgTz++OOJDkM0UPiQ1wRAM2eZFHYT
      rVvMCSAnJ4c777zzuNelFIRoaZymyczC8ZGSzjLnL1q/mBNAWVkZv/vd76itrY2+5nA4ePjh
      h+UcgGgx6u7wVcBDK5fJIS+REuKyDfT++++Pfn706FFefvnlVl0NdOfRo/z9sw1N+h6VPin0
      1lwckZLOdbt9pPEXqSIuxeCO7elnZGRQUlJCbW1tq00CRdVVPN/ECUA0j3B5h3GAlHcQqSfm
      BFBZWcmjjz6KN1Ka2OfzUVJSktILwKJlCJd3CPf875UFX5GC4rIN9Ac/+EH00nOlFB06dMDp
      dMYcnBBNxW4YzBgzjqCleUi2eooUFdOFMGVlZezbt4+BAwfSt29ftm3bxvvvv19vQbix/H4/
      u3btiu6j11pTUlLCjh078HikFIJoPJthcMf4iSgFc5Ytxn+CsxpCpIJGJwCtNW+++Sbbt28H
      YNGiRXz00Ufk5uYyb9686Iigsc/euHEjCxYswOPxoLVm69atbNmyhYyMDD744ANJAqJRHKbJ
      zLHjCVqW3OErUl5MI4CioiL69u2L1pr333+fn/zkJ1x55ZUAVFdXN/q5ZWVluN1uOnXqFH1t
      8+bNnH322XTp0oWBAweycePGWEIXKchUitvHTcA0FPcvWyI9f5HyYkoAXbp0Yc2aNaxevZrK
      ykr69+9PIBDA5/M1ehE4FAqxatWqetUyLcvCsqzoukK7du0oLS2Nfs3v90c/TlR6QYi6m7wC
      oRBzl0s9fyEghgSglOLiiy9m+/btPPXUU9xwww2kp6ezZ88eunXrFi0N3VA7d+6kXbt2X3tx
      ulKq3qKzaZrRD7mFTHxV3SEvUxnMXb5Uev5CRMS0C6hNmzbMmjULy7KipR/69evHjBkzGtUQ
      W5bFmjVr6NKlC8uXL+fAgQOsXr2akSNHYhgGgUAAh8NBRUUFubnh69DrEkAdLT07cYy68g5B
      y+IhmfMXop6Yt4EahhG9ChKIqSS0YRhcccUV0c+PHj3KyJEjycjIoEePHnz22WcMHjyYDRs2
      fGM1TSHqDnkpFA+tWEZADnkJUU9MawBN7YwzzsDpdKKUYvjw4bRt25Z169YxceJEcnJyEh2e
      SGIO0+S34ycR0pr7li2Wxl+IE4jLjWDvvPNO9CRwnYyMDKZMmRJTQbiePXtG/6yUomfPnvVe
      E+JETKWYMWYcgJR3EOJrxDwCMAyD1atXk5GRQXZ2NoZh8Omnn3Lw4EFmz54d03kAIRrKbhj8
      bsIklIJ7ly6SBV8hvkbMCaCqqgqtNRdeeCHf+c53uPTSS3G5XFx55ZX4fD7cbnc84hTiGzkM
      kxljx2FpLYe8hDgFMU8BZWVlUV1dzbvvvsuAAQP4/PPP+eKLLzAMA6WUFIUTzcTGtSMvYFmx
      wX1L5Q5fIU5FzAnA5XJxyy238Oyzz/Liiy/SuXNnbr75ZizL4pxzzsHlcsUjTiG+hgOVdTPr
      9uTz4Ao55CXEqYrLfQDdunXj5z//efQUbt0dARdddFHMAQrxtZSJypoJwKd7nsUX6p3ggIRo
      OWJOAB6PhzvuuINDhw5FX3M6nfzpT3+SKyFFk3KYJmltfgMcQVfPA8YkOiQhWpSYE4Db7UYp
      xfPPPy/z/aLZmEoxc+x4+rXZiq5+EJDdPkI0VMy7gHJycmjTpk20gmfdh5RkEE3FYZrcPm4i
      lrbYvP8JpPEXonFiHgFUVVWxevVqVq1aFR0BOBwO/vKXv8hpXRF3deUdTEMxd+ky/j5RGn8h
      GivmBJCXl8drr7123OvHFmgTIh4cpsltheMJWpp7ly6WE75CxKjRCaDu1q7OnTuzd+/eenX4
      DcNg6NChsiYg4sZmGPxmTCGgeGjlUmn8hYiDmEYAmzZtwm63s3Dhwnq1gOx2OwMHDpQEIOLC
      YZj8JjLnf+/SRbLPX4g4aXQCUEoxffp0APr3708oFIou/H61Rr8QjWVz2PjNuHFopLyDEPEW
      8xpAIBDg6aef5pNPPolOAzkcDubNmyfnAERMTJvB9Q9fRWX7DCnvIEQTiDkBlJeXs3btWmbN
      mhWd8lFKfe2VjkJ8E7vTxo/vm44Vspj35geEcmU6UYh4i0sxuIKCAjp27Bi9tF2IWJg2g+se
      uBLDNPjzr57G95tBgCQAIeIt5gTg8/nYuXMnt9xyS/QieLvdzsyZM8nMzIw5QJFanDaT6+/9
      IdaBGp6Y+XeskOz2EaKpxJwA0tLS+OUvf3ncNlAZDYiGM7nsjG+z5jU//3vr3wkF5JCXEE0p
      5lIQDoeDzp074/f78Xg80Q8pBSEawmGajOtzBWtKO/DHP7wijb8QzSAupSBmzJhBjx49sNnC
      j7Pb7QwbNgyHwxFzgKL1C9/hW8iw/BJe/exVAiEd+y+mEOIbxfz3LBQK0aNHD2bNmhVNAEKc
      KodpcmvheCyteeyTd+mYFiAOv5ZCiFMQ89+0zMxMbDYbmzZtIisrCwivAXTr1k0Og4mvZTMM
      bh5diKEUc5cvZXInWfAVojnF5T6Ao0ePMn/+/OhrDoeDBx54IJoQhPgqw7Bxx7gJaOCeJVLe
      QYhEiDkB5Obm8sgjjxz3ulIq1keLVsuOM/tX6BJ4YLnc4StEosScACoqKnjggQeOKwY3a9Ys
      OQcgjmOYBu37/Q8+yyvlHYRIsLicBL7xxhuxIuV5y8rKePfdd6OHwhrK6/Wya9cuKioqyMzM
      ZMCAATidToLBINu3b6eiooLevXvTvn17GWW0MHannevmXsGA4ZVY1fMI6SsSHZIQKS3mcwA2
      m43u3bvTo0cPevTowZAhQygvL683ImiIiooK2rVrx9ixY2nfvj3vvfceWmtWrVpFMBhk5MiR
      rFq1ivLy8lhDF83IVAY3XzQNR5qd5S/+GXTjfj+EEPETl3MAzzzzDD6fDwiXhiguLm70DqCO
      HTtG/5yTk0MgEEBrzcGDB/nud7+L3W5nyJAhbN68mXHjxsUavmgGdqedmZMnoY94+N+bn+Vn
      98luHyGSQcwJwOFwMGLECILBIBDeAnr11Vfjcrka9TytNXv27GHfvn3U1NQwZcoUtNZoraPn
      DHJycqisrATC5xACgUC9n5fzCMnDMA2unTMdT7dsHnz5HTr6gokOSQgREXNL6fV66dixI/n5
      +WRlZWFZFh9++CE5OTmNvg+gW7dutGvXjk2bNvHZZ59RWFhY7+uhUCg6wvhq3aG6RCQSz+Gw
      c/3DV6G15qG//5uAFPQUIqnEtAbw+eefc8MNN3DzzTfz85//nAMHDvD222/z0ksvNboMhFIK
      u91OTk4OY8aMoaSkhGAwiM1mi64rlJSUkJ+fH/3+r36IxDNtBr+eOhGb3caTt/0fgYAkZiGS
      TUyXwv/73//mRz/6Eeeeey4LFy5k5syZ5ObmMnfu3EZPAW3cuBGtNVlZWVRWVtK+fXscDgdn
      nnkmK1eupGvXruzcuZNp06Y1NnTRxOyGwX/f/UNCpsljv3oKKyhz/kIko5imgKqqqujVqxdK
      Kfr27YvD4eDee+8lNze30c8cOHAgZWVl+Hw+CgoKGDJkCEopevToQV5eHm63m2nTpkm56SRl
      Mwx+M6aQ9DVlzNq7hvbS+AuRtGJKAJZl8eSTT5KdnY3b7aaqqorHH38cm83Gz3/+c9LT0xv8
      TNM0o9M7x1JKkZOTQ05OTiwhiyZksxncPm4CCnj4L//CP7HjN/6MECJxYkoA3/rWt9i3b1/0
      8xEjRgDhRlwKwaUWu2Hwk7suJwjMXb6UNpac8BUi2TU6ASilGD58OMOHD49nPKIFMpXitnET
      yFhdygwp7yBEixHzSWCR2hymyS1jx6M1zH/wZWn8hWhBJAGIRjOV4pax40iz25izbDE+2eop
      RIsiR2ZFozhMkxljClHAvTLtI0SLJCMA0WCmUvxmTCEO08bc5Uvxh+QCdyFaIhkBiAYJz/mP
      i/T8FxGwZJ+/EC2VjADEKTOU4ubRY3GYJg+sWCaNvxAtnIwAxCmxGwa3jZsAwOzFH8mcvxCt
      gIwAxDeyGQY3jynEUEru8BWiFZEEIL7R4IKLcdls3LNkET5Z8BWi1ZApIPG1MtLPZHv1ady/
      bIn0/IVoZWQEIE7IVIpfjhrNt/t0pbbqWen5C9EKSQIQx6nb6pnjcvH65ncgVJLokIQQTUAS
      gKjHVIoZYwpJs9uZs2wJPrliU4hWS9YARJTDNPnNmEIMZXDv0sUEZZ+/EK2ajAAEEO753zy6
      EJfNxgMrpLyDEKlARgACu2Eys3AchlLcvWSR9PyFSBEyAkhxNmVw85hIeYflS6XxFyKFyAgg
      hdltJr/8+XepNm1S3kGIFCQJIEXZDINfjx1LsNjP3OVyyEuIVCRTQA3kcXt58cHXEx1GTEyl
      uK1wAhnaZP6tz8khLyFSlIwATuBnI2dSXV5zwq9ZIYvP0/zQb0AzRxUfdsPgf0aHC7vdv2wx
      bYLS+AuRqiQBnMAX+45QVVp98m/on9N8wcSRoRQzC8fjME1mL/4ISw55CZHSki4BaK0JBAK4
      3W5sNhtZWVkopdBa4/F48Pl8ZGVlYbMlXehJzWGa3Dx6LIZS3Be5w1clOighREIlXSt66NAh
      tm/fTn5+PlVVVdhsNs466yz27dvHtm3b6NSpE0VFRUydOhW73Z7ocFuEujt802w2Zss+fyFE
      RNIlgDZt2jBx4kQMw0BrzQsvvMCIESNYt24d5557LhkZGdhsNjZv3szQoUMTHW7SqyvvYDMM
      7pHyDkKIYyTdLqCMjIxo479q1Srat28PgN/vJz09HYBOnTpRXFwMgGVZBIPB6EdIdrREGUrx
      P6PHkmazM3e5lHcQQtSXdCMAALfbzcKFC8nPz2fy5MlYloVSX85Ym6ZZr6HXsof9OHbDYGbh
      eEylmL3kI+n5CyGOk3QJwOPx8NprrzFp0iQKCgpQSkU/QqEQNpsNt9tNZmYmAIZhYBhfDmSC
      srMFM9Lzd5qmVPUUQpxU0k0BrV+/nmHDhtG1a9d6vf7OnTuzc+dOAoEA//nPfzj99NMTGGXy
      shkGt42bQJrdzl2LP5JDXkKIk0q6EUBmZiZHjhxh2bJlAKSnpzN06FDOPvtstmzZwqeffsrg
      wYNp165dgiNNPjbD4H9Gj8VumMyRO3yFEN8g6RLAGWec0aivpTrTMLj1mENe0vgLIb5J0k0B
      JVqVz9fiFpVtDhs3/dd52AyD+5ZKz18IcWqSbgSQaL9+720qvF7MRAdyigzT4No507FOz+fO
      JYuk8RdCnDIZAbRgdqeNa+//ITa7jT/d84I0/kKIBpEEcIzXt21hwxdfJDqMU2IoxU9/9T3S
      Ml38ZcZz+D3+RIckhGhhJAEc40BlJeVeT6LD+EZ2w+TWwvFkH6jl8V89h3N3ZgAAHvpJREFU
      TdAvZx+EEA0nCaCFMSNbPdNsdn7/4rsEpPEXQjRSyi8Cf/DsYrZ+uhOAT/N8kMTHC2wOG7ec
      O5mg3cbsJR+RHQqRnuighBAtVsongA0fbWLB80sAKJvWBc7vmuCITsy0mVw9+zKs3rncv2yJ
      lHcQQsRMpoBaAJth8D/TLyA9y8WDj78m5R2EEHEhCSDJ2SNz/hklPv4y43lCcoevECJOJAEk
      MUMpbhk7niyHk3s+WChbPYUQcZXyawDJqq7nbzcN7l26GCVz/kKIOJMRQBIylGLG2HFkOZ3c
      u3QxvpBs9RRCxJ+MAJKMwzSjJZ3vkQvchRBNSEYASaTuDt9Mh4M5y5bIbh8hRJOSEUCSsBsG
      vxkzLlLPfxEBSxp/IUTTSukRwP6tBynanfjib4ZS/Hr0WDIcduYuXyKNvxCiWaT0CGDDok1s
      Wbk9oTHYDIOZY8dhN03uWvyRzPkLIZpNSiYArQOABhLb0zaV4tdnj8Fls3PfssXS+AshmlVq
      JoCyKyGwDl2VBxQkJAZTKW4tnIDTZnLX4g/lMhchRLNLyQSQaHbD4Fdnj8FpM5mzTO7wFUIk
      RkouAj/7QEcStc5ad8grx+Vi9uKP8AblkJcQIjFSLgHUVNWyZrGLRHS6w1s9C3GYJvcsWSw9
      fyFEQqXcFNDzd73MjjW7m/19DaW4eUwhmQ6H7PYRQiSFlEoAez7bx6YVW5v9fe2Gyc1jxuKy
      2aS8gxAiaSTtFFBxcTGVlZXRz7XW7N+/n7Vr1+J2uxv1zP1bD7J9dfP2/sPlHcZIeQchRNJJ
      ugRQU1PDq6++ynPPPcehQ4eAcOO/YcMGioqK6NOnDwsXLqS6ujrBkX4ze+SQV5rdzuzFH+GX
      xl8IkUSSLgF4vV7OPPNMxowZU+/1Xbt2MWzYMLKzsxk8eDCbN29OUISnxlCKX509lkyHk/uX
      LSEg0z5CiCSTdAkgLy+Pnj17opSKvmZZFpZl4XA4ot9z9OjR6Nd8Pl/0I5gE2ypthsFthePJ
      dDi4c9FCmfYRQiSlFr8IrJTCbrdHP090ArBFDnml2e3cu1S2egohkleLSACGYWCaJn6/H6fT
      ydGjR8nLywPCCeDY0YJhnHhQ4/f62b+1qEnjNJVi5thxuGx2Zi2S8g5CiOSWdFNAfr+fmpoa
      /H4/Xq+X2tpatNb069ePtWvXUl5ezqZN/9/encdHVd+NHv+cOZlJMjPZ94XsEAIJIBjAQgEB
      FV4FH9Si+HrU2kKX5/b29upj68vX06q19ml9fF1btIu3eq/1FisVURFqpCwJCQGFhC0sSUgC
      2feFbLOe87t/pDklLBYKAyT5vf9LZuac75z5nd868/seJzs7+6qO29XSwx9f2OSjqP+ew9ff
      z4+fFcmevyRJt75brgHo7OykoqKC0NBQhBBUVVXh9XrJzs4mJSWFuro6li5dit1uv9mhGkyK
      wlNf+jKhAYFyewdJkkaNW24KKC4ujri4uEs+Fh8fT3x8/D91XG+ohfYHUojafPYaoruY2WTi
      iTuGfuT1wp582fOXJGnUuOVGAD5jUtBs17e9G/qR13xC/AN4sTAflyZ7/pIkjR633AjAV7b8
      5tPreryhOf/5BJr9eGHPbvk9f0mSRp1xMwLY+cfC63Ys09+mfYL9/eX2DpIkjVrjZgRwvfiZ
      Vf77untxmy08X7BL9vwlSRq1xs0I4HowqSYee/5BzFMi+U+5vYMkSaPcuGgAtvw6j8FexzUd
      Q/VT+eZLj2APtfPLp96SC76SJI16Y74B8Hq8HPj0CC6H+58+huqn8tjzDxJgC+B/P/U2ulfO
      +UuSNPqN+Qbgvf/awoFPDv3TrzepJtb94l8Jjgjite+9eU0NiSRJ0q1ELgJ/AT/zUM/fP9Cf
      15/8A7pXzvlLkjR2yAbgMkyqia//7GHsITZe/e4baLLylyRpjBnTDYDb6Wbgn1j89bP48fX/
      uJ8AawC/+Z9vycpfkqQxaUw3AMf3lvPey1uu6jUmReHxnzxEkH8Av/7e/8Hrlt/2kSRpbBrz
      i8BXw2JS+cGX5mNTzfzmf/xfWflLkjSmjekRwNUwqSb+272L8fMP4PX/2IDX5bnZIUmSJPmU
      HAEw9G2ftT//V/yyo3m+YBcuj+z5S5I09o37BsCkmnj0uQexh1h57X9tkts7SJI0bozrBkD1
      U1n3i0cIjrCz/rtvyB95SZI0rozfBkDxY97qrxFoD+D1J9+WP/KSJGncGTWLwE6nk8OHD+Px
      eIiNjWXixIkoinLR84QQHN5dBkDVkbOXPJZJNaHY/53qfXG89r03ZeUvSdK4NCoaACEExcXF
      pKamkpyczO7du7Hb7ZfMD6xrOj9c+sJlj+VnVnn0+Qcx+bloPPYyujfSl6FLkiTdskbNFFBH
      RwfJycmoqkp2djbl5eVXfQxVVXn8pw8TGhmMfu6nIJw+iFSSJGl0GBUNgPa3lIsm01C4VquV
      wcHBqzqG2U/l377+FQKDhrZ3ELr8qqckSePbqJgCGq74h3m9Xvz8rjx0k2ri8X+/j8BOndef
      /AMel6z8JUmSRsUIQFEU/P396e3tBaCuro7ExMQreq2fxY9v/Oxh/CeE8OLHn8rKX5Ik6W9G
      xQhAURTmzp1LcXExQUFBOJ1O7rzzzn/4uqEfea0mKNzO+h/8P1xLY29AtJIkSaPDqGgAAGJi
      Yli2bBm6rqOq6iW/Ano+1azyjRcfJjAokNe++yYu+6h5q5IkSTfEqKkVFUVBUZSL1gMuxaSa
      ePTZ1djDbPz2+2/h9WiMorcqSZJ0Q4y5WlFRFL75X4+QNWcibzy9gdRpSQB4g830psUSPmfo
      ecIPQuJCmDwnynhtb2YUfdHRxOWmY3JcPvG7M9lOTHSMT9/HhSzeIKLmuIlOS8QRHQxA8GQI
      6rcCMDA1jJ6rjEnx6ERMd3/he0kMcWANMDPjCo4dddsAUX97XniOm76kSKLnuACISE5AD/Aj
      Zo6DkJhg8Bu46JgpYRpRAYNMmaHiH/X3b3mFJcbjDfe/5DkDA6agq0NTe0khqVcU52gUnuMm
      wOYx3p8tIAtdjb7JUfmGEJA0NZGwhH6mmf5e3qODJqKrAoAwWxIzomPw95+CrvbezHBHNUUI
      IW52ENdC0zQ8npFbN1/JKEGSJGm8G/UNwIU8Hg+KolzV10R9weVyYTabb3pj5HQ6CQgIuKkx
      uN1uVFVFVdWbGofT6cTf3/8frh/5khACl8t10z8TTdPQNA2LxXJT47gVyoau63g8Hvz9Lz3K
      vFG83qFvKN7Iukt2lSVJksYp2QBIkiSNU2OuAbiZw/vzyThurRhAxnGhWyGOWyEGuHXiuNHG
      3BqAJEmSdGXG3AhAkiRJujKyAZAkSRqnZAMgSZI0To25XwIPG17a0HXd2EbClws9QgiEECPO
      M/w/IQQmk8nnC03nn+/8bTOEEOj6UNpLX8dxYQznXw9d12/YtTg/Hl3XjXPeyGsBf3/Pwy6M
      40aUTfjHZcPXcZx//vMNX48bWTYuVwZu5GfyRfXTtVyLq6mHhBBjtwFwOp3s2LGDsLAwent7
      +fKXv0xwcLBPzqVpGseOHWPHjh2sWbOGpKSh7SdqamooLy/HbrejKArz58/36Q/DysvLaWpq
      IiAggO7ubmbPnk1UVBQHDhygv78fXdeJi4tj6tSpPivczc3NnDp1isDAQAYHB4mKimLatGk0
      NzdTWlpKaGgoTqeTRYsWYTabfRLDMCEE+/fv5/Dhw3z729/Gz8+PsrIympubMZvNBAUFcfvt
      t/v0Ri8qKsLtdmOz2VAUhezsbGw2G3v27EFRFJxOJ5MmTSI1NdWncdTU1FBVVYXdbsdsNjN7
      9mwcDge7du0iJCSEc+fOsWDBAp/dIzC0jXtTUxMw9IPN48eP881vfpOuri4OHjxolI2FCxf6
      7Adquq5TXFyMpmmYTCbcbjcLFy5EURR27NiBzWajr6+PWbNmERvru92D+/r62L9/PzabjXPn
      zjFjxgwSEhLo7u6mqKiI8PBwent7ufPOOwkMDLyiY3o8Ho4cOcLOnTtZt24dUVFD29xUV1dT
      UVGBzWZDVVXmzZsHQEFBAYgxqrCwUFRXVwshhGhqahI7duzw2bmqq6vFzp07xYcffihqa2uF
      EEJ4vV6xceNG4XK5hK7rYufOnaKpqclnMQghRHt7u9A0TQghREtLi9i+fbvo7u4WH3/8sdA0
      TWiaJjZv3iwGBgZ8FoPX6xW6rgshhHC73WLTpk3C7XaL999/X/T39wtd10VJSYk4efKkz2IY
      1tLSIgoLC8Wf//xn4fF4hMfjERs3bhQej0foui4+/vhj0dPT47Pz67outm3bJgYHB0f8v7a2
      VuTn5wtd14XT6RSbN28WHo/HZ3G4XC6xadOmi86xb98+UVFRIXRdF+3t7SIvL8/47HztxIkT
      Yt++fULTNPHBBx+I3t5eIYQQhw4dEsePH/fZeTs7O8XWrVuFruvGfVlfXy/KyspEaWmp0HVd
      nDt3TmzZssWn1yI/P180NDQIIYRwOp1i06ZNwuv1iu3btxv1RHV1tdi7d+8Vx3Hy5ElRUFAg
      Nm7cKNra2oQQQ/fgcPnXdV3s2rVLNDY2irNnz4r8/HwxZtcAmpubjaQx0dHRdHZ2XjT8vF7S
      0tJYsmTJiJa6r68Pu92OxWJBURSSk5Opq6vzyfmHRUZGYjKZ8Hg8lJSUkJSURGtrK3FxcZhM
      JkwmE+Hh4XR3d/sshuGf9DudTo4ePUp8fDxerxeTyURgYCCKopCQkGD0BH3F6/Vy6NAhZs6c
      afSsOzs7iYiIwM/PD0VRiI+Pp7m52Wcx6LpOT08PVVVVVFZW4nQO5aBuaGggOTkZRVGwWCyo
      qmo85gtNTU1ERkZSX19PRUWFkU61ubmZCRMmoCgKERER9PT0+OweOZ/X6+XYsWPcdtttuN1u
      hBDYbDYAn5cNq9WKx+Ohr68Pp9NJX18fwcHBnD17lvT0dBRFISgoiMHBQWOayBc0TTOutb+/
      P2azmcHBQc6dO0dkZCQAsbGxtLW1XfExs7KyWLhw4YgtLYbroeEyn5iYSFNTE3V1daSlpY3d
      ReDhvAGAMed6Iwr3sAvTVlosFtxut0/PKYSgs7OTzZs3k5ycTGZmJm63e8Rw2mw2X7R53vVW
      XV1NYWEhtbW1pKamjpiDv1ExnDp1iri4uBF77rhcrhHXwt/fH5fL5bMYTCYTK1asID4+nsDA
      QD755BO6urrweDzG9NfwvlXD+8D4Ql9fHx0dHVgsFmw2G5988gkDAwN4vd4R9wjg83tECEFV
      VRWJiYkEBASMmAMHfH4tLBYLiYmJFBUVUVRUREREBDabDY/HY9yvw2skvmwAZs+eTVlZGYWF
      hezbt4/W1lY0TTPuFRgqP9dab2madlE95HK5jDI4ZtcAAgICcLlcRovv5+d3QzdmCwwMxOFw
      GH/39vb6dH4Vhnp0u3btYuXKlYSGhgIQHBxMQ0OD8ZzBwUGsVqtP48jIyCAjIwOn08lHH33E
      ypUrjR6PoigMDAwYPT5fcDgcFBUVMXfuXI4dO0Z7ezvl5eXExcXR19dnPK+3t5e4uDifxaEo
      CiEhIQBEREQwMDBAVVUVwcHBRhxCCNxut083IgsLCyMyMpKEhAQA0tPTqa2txWaz4XA4sFgs
      eL3eK863cS2EEBw/fpx77rkHGOoMiL8tvqqq6vPyWV9fT39/P1/5ylcQQvD5559TUVFBcHAw
      /f392Gw2o6z6clO2oKAgli9fDgxdk/r6eqxWq9FRDAwMxO12Yzabr2ltaLgeHDZcD7lcLvr6
      +sbuCCAzM5OjR4+i6zrl5eWkp6ff0PNbrVZUVaW9vR2Px0NNTQ2pqak+PWdxcTHLly83Kn8Y
      mv5qaWnB6XQyMDBAX18f4eHhPjm/EIKuri4cDodxU5vNZmPBtaGhAV3Xqaio8Onn4e/vz6OP
      PkpGRgapqamEhIQwYcIEwsLCcDgcnDt3DqfTSXNzs1Ep+oLb7ebs2bN4vV40TaO5uZno6GhS
      UlI4ffo0Xq+Xjo4O/P39fdoAxMXF0dHRQW9vL5qm0d7eTlRUFBMnTqSsrMz4TNLS0nz+DZyG
      hgZCQ0Ox2+3AUI8/JCSE+vr6G1I2zGaz0QPWdZ2BgQEsFgtZWVkcOXIETdOoq6sjJibGp9fC
      6/XidDrRdZ3Tp08TFxeH2WwmMTGR06dPo+s6p06dYuLEidcUh81mQ9d1Ojs78Xg81NbWkpSU
      RHp6OuXl5WN3Kwhd1zl+/Dg9PT3Y7XamT5/usy1na2pqaGxspKurC5vNht1uJzc3F5fLxeHD
      h9E0jeTkZJKSknxaqLZu3UpISIhxjvj4eNLT02lra6O8vByAadOmjWggrichBC0tLZw5c8YY
      2k+cOJGoqCg8Hg+lpaV4PB5iY2OvuWBfKV3XOXDgALm5uaiqSk9PD2VlZQghyMzMJCbGdwlk
      hm/utrY2dF0nNjaWSZMmoSgKdXV1nD17FlVVmTFjhk9HRADd3d2cOHECXdeNciGE4OTJk3R3
      dxMYGMhtt93m822ZS0tLmTRpEkFBQcb/hsuG2+0mJibGuEa+IISgurqapqYmFEUhPDycrKws
      TCYTlZWVtLS0YLFYuO2223zaKA8ODnL06FG8Xi9Wq5UZM2agqqqxPjIwMEBISAg5OTlXdC2E
      EJw+fZrW1lba29sJDQ01vuXmcDg4dOgQuq6TkpJirPvU1taO3QZAkiRJ+mJjdgpIkiRJ+mKy
      AZAkSRqnZAMgSZI0TskGQJIkaZySDYAkSdI4JRsASZKkcUo2AJIkSeOUbAAkSZLGKdkASJI0
      KuhC4HS5buimjmOdbAAkSRoV+vr6ef0P79Hd03uzQxkzZAMg+VRvby/V1dVUVVXR0NBwXbf6
      7ejooKur659+/fDeRdXV1bS3t/u0Z+nxeHj//fd57bXXRuwSC9DT00NNTc0Xbhfu9XqNzfSu
      VltbG5s3b77otUIIWltbqa6uprm52Xi8qamJqqoqampq6O39e2XrdDqNz7K2tvaS8dbX1/OT
      n/wEh8NBd3c3tbW1aJoGDG1N3NLSghACh8PBCy+8cFX5GDRN52xdE7/7w59p6+iSI4HrQH3+
      +eefv9lBSGNXXl4er7zyCm1tbeTl5XH8+HHmzZt3XTb72rt3L11dXSQnJ1/1a4UQfPDBB7z9
      9ttUVVWxdetWYmNjfbY76N69e9mxYwerVq0iNjZ2RE7e9evX8+abb5KammqkE71QV1cXTz/9
      NCtWrLjqDdsaGxt57733WL58uXHdNU3jjTfe4E9/+hNnzpxh165dqKpKeno6zzzzDAcOHKC8
      vJyNGzcSERFBUlISFRUVPPnkk3R1dVFYWMju3btZtGiREY+maaxfv5777ruPgIAAnnvuOUpK
      Sujp6SE7O5uSkhL279/PjBkzMJvN2Gw2Nm/efEXlQQhBQfFBKmvOcq63n/LTNUyfmklggO82
      bBsPxmw+AOnWMXPmTJ555hkGBgZYt24dzc3NdHV10draytKlS6mtraW0tJT777+fjRs3kpCQ
      QGlpKcHBwTzyyCN0d3eTl5dHVFQUZWVlLF26lNtvvx2r1Yq/vz9ut5sNGzaQmZnJZ599RnJy
      MqtWrUJVVfbv309RURHx8fFERkaybNkyFEXB7XazdetWfv7znxMbG2vsy9/a2sru3bt56KGH
      6O/vZ/PmzTz22GPs2bOHgYEBamtrsVgs3HHHHeTn5xMeHs7q1auNnSN1XWffvn3s3buXxMRE
      Vq1aRXNzM++88w4ul4tPP/2UjIwMY6/5/v5+zpw5wze+8Q2Kior40pe+hKIodHZ2smXLFjo6
      OrjnnnsoKCigqamJX/ziF+Tk5DBr1iwOHjzIAw88QGdnJ9u2beNrX/saZ86cYdu2bfT39zNn
      zhwWLVp0yc9k9+7dnDhxgldffdVIkjOcpEdRFB555BFyc3Opq6vjBz/4AZmZmcBQxq4f/ehH
      APzwhz/k0KFDzJ07F4Da2lr6+vrIysrir3/9K/PmzWPVqlU89dRTrFy5kr179/Ktb33LqOxn
      zpzJu+++y5kzZy65BbQuBB2d3bhcbo4cL+evBfvQtKGE6U0t7az//R/5t6+vISYq4jqV1PFH
      TgFJN4ymaUYGrLq6OsrKyoChqZzPP/8cGOopl5SUsGTJEg4ePMjhw4fp7e3lo48+wmKxMGvW
      LH73u9/h9XopLy+nuroaTdPYtWsXNTU13HXXXXz00UfU1dVRWlrKm2++ydKlSwkODmbbtm1G
      LGazmbS0NNavX09paSmapuHv709vby/FxcXGNEVBQYGRxOSzzz5jwYIFHDlyhL/85S8sXryY
      3bt3U1lZaRy3pKSEd955h+XLl9PX18drr71GbGwsubm5pKWlcd99943ISnb69GkiIiLIzc3l
      1KlTuFwudF3nxRdfRFVVli9fjqZpLFy4kPDwcB544AHmzp074pr19/dTWFgIDE3f5ObmsmzZ
      Mt56660RyYCGDSdCueuuuzCbzWzfvp333ntvxPsAjBSCKSkpVFVVjXhM1/WLsk0dPnyY6dOn
      4+fnR1hYGM3NzTQ2NhIYGEhxcTHz589nz549nDhxAiEEJpOJnJwcjh07dsny0tHZzatvvMPL
      v/nDiMp/KFmLSldPL1vydsupoGsgRwCSz5WUlPDss8/S0tLCsmXLiI6OvuxzVVXl7rvvZurU
      qUyYMIHBwUHCw8NJTExk8eLFdHV1sWHDhovms1VVZcWKFQQHBxMZGYnL5aKoqIivfvWrzJo1
      C5vNxs6dO43nm0wmnnnmGfLz83n33Xf57W9/y7PPPnvZuBRFYfbs2UybNo3ExERmz55NdnY2
      CQkJ9Pf3A0MVa2FhIffeey/Tp09nwoQJfP/730dVVWJiYnA4HEycOHHEcffs2cMdd9xBVFQU
      drudyspKYmJi6OrqYs2aNcbIoqOjg4CAACZOnIjFYrns3HlKSgoffvghra2t9PT00NbWdslM
      dC6Xy0iXabVaKSgooLu7m+zs7BHPM5lM2Gw2Y76/oaGB5557zsilO336dOO5zc3NZGVlGdfq
      2LFj/PrXv+bBBx+kqamJo0ePEhYWxqeffsoTTzxBWloaCQkJVFRUXPK9REWEsfreu/njpq0M
      DjqNyt8a6M/XH76P7Kwbk1NiLJMjAMnnJk+ezPz583E4HCxduvSG3bRf1DMc7oHefffdvPzy
      y9xxxx1s3779ms95fk7bC/PdXsjpdHLgwAE2bNjAunXrqKmpobCw0MgFe34jd7mcvef/rWka
      L730EsnJyaxdu/YLM2tNmjSJI0eOALBgwQJjiudCg4OD1NTUMGHCBGAow9zatWt5+umnee65
      54zcxsMxDsfj5+fHd77zHV555RVOnTrF/PnzaWho4KGHHmLWrFnU1tYa8V/u+iiKQk7WJKZN
      yQSGKn+TovD4mlWy8r9O5AhA8jm73c4999yDEIIf//jHvPTSS4SGhlJeXk5+fj75+fk+ScCd
      m5vLW2+9RWBgoDHNM8zhcPCrX/2KGTNmYLVaOXToEGvWrMFut9PW1kZBQQEnTpxgcHDwis+n
      KAqLFy/m1VdfxWq18tlnnzFr1qzLZpaqrKwkOjqaX/7yl5hMJmpqavjpT3/K2rVrmTBhAr//
      /e+ZPn26MfWlKAoff/wxU6dONXI9FxQUUFJSYvTQh9cySktLLzn9Mxzn8uXLefrpp3n99deZ
      Nm0alZWVpKSkGM8Zfu95eXnMnDmTlJQUTp06hcViISkp6ZIL0QkJCdTX1xuVuhCCvXv3EhER
      QUxMDDExMeTl5XHs2DHmzZsHQF1d3WUXvoUQHDl+itr6Rv5l2WI+2VmI2+0hMyNVVv7XifwW
      kORzkZGRJCcnk5aWRnh4OK2trcyZMwdd1zl37hwLFy4kNjbW6LFmZGRgs9kQQpCcnExoaChW
      q9VII2k2m400fnFxcURHR2MymcjKyjLmpDMyMpg0aRKRkZFUV1eTlJRES0sLd911l7EOERcX
      R2VlJR0dHaxcuZLZs2cTFBREVFQUZ8+eZd68ecTHxxvTGgkJCURGRgKQlJREWFgYgJF3GIZ6
      yBkZGZSVlTF58mRWr15t9JIjIyNJTEw0rkt7eztTpkwx/hccHIymaaSkpLBgwQJ6enpobGxk
      2rRpREZGkpOTQ3l5OVarlenTpxMUFERjYyMLFiwgNjaWKVOmMHXqVE6ePElSUhI5OTmkp6cT
      FBQ04vrB0LTPokWL6OjooLa2lqlTp7JixQr8/f0RQtDd3U1PTw933nkn9957r3FdbTYbmZmZ
      l6yAbTYbH374IUuWLEFVVXRdp7q62vg7OzubiooK5s+fT05ODpqmsWHDBu6//37j+p2vrrGF
      gr0HeeyhfyFnykRioiNo6+hi/tyZqD5OXj9eyJSQ0ph18OBBqquriYyMJC8vjzlz5rB69WrZ
      e/QRTdN4+eWXWbJkCbm5uf/w+cXFxXz++ec88cQTl/xMqs7UER8bjTVwaK1CCMHAoAObNVB+
      hteJbEalMWvy5MnYbDYaGxt54IEHuP/++2XF4UOqqrJ27Vry8/Mv+rHbhRwOB/v27ePxxx+/
      7GeSkZpkVP4wNHVlt1nlZ3gdyRGAJEnSOCVHAJIkSeOUbAAkSZLGqf8PSy4/CpMgGyIAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='328' name='GDP per Capita Monitor' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAFICAYAAABZfClmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEmUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUR+GlwaMGi0g
      4AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='GDP versus Population Parameterized by Life Expectancy' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Geometric Change in Population and GDP' width='384'>
      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
      UBykbgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='328' name='Healthcare Expenditure Monitor' width='384'>
      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
    </thumbnail>
    <thumbnail height='332' name='Legend Selection' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Life Expectancy Monitor' width='384'>
      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
      AVFSusHUbMSNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Life Expectancy versus GDP Over Allocation' width='384'>
      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
      ito7/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Lost Life Expectancy versus GDP Over Allocation' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXwU9f3H8dfs7JHNnUCAAEm4wikQ7vsW8cATVFpsFa3SelCt1p9Va4t3
      PavVKqKtV1WUaj1BbsRwK/d9QyDkvo/dneP3R0wQE1B3ApNsPs/Hw8dDdrOz79lN5jPz/X7n
      +1VM0zQRQgjR5DjsDiCEEMIeUgCEEKKJkgIghBBNlBQAIYRooqQACCFEE+W0O4BVuq4TCARO
      eszhkLqm6zqqqtodo16Eyr6Eyn5YZZompmk2+r9Tv99Peno6Y8aMsTtK0Bp9AXA4HHg8npp/
      a5qGy+WyMVHDUFZWhtfrtTtGvQiFfTFNE03TcLvddkexnaZp6LoeEp9FQkJCo96PRl8AFEU5
      7b+FEOJMMAyDzMxMu2NY0rivwYQQwiamaeL3++2OYUmDKwCmaZJ1ZA/p6Ss5nFVA9Y3Kpmlw
      dP8O0letJa+kErl9WQhhJ6fTSWpqqt0xLGlwBWDX+qXszlMYNKg/mVtWsOlgHpgmu9cvY3e+
      g0F9u7Nm0WdklQR+fGNCCHGGBAIB1q1bZ3cMSxpeAdiXRd/enXA63QwcPZKd69ZiYLLzYDYD
      0zrj9EQypE8HNm7db3dUIUQT5vF4GD9+vN0xLGlwBaBVfBh7D2ZjmAalJX4Cpfn4TB8Vehjh
      zqoOXm+zBCpys21OKoRoynw+HwsXLrQ7hiUNrgD0Hz0BZ9EhVqav5lB2IYpDwYGCopjfa/c3
      QWlw0YUQTYjT6aRbt252x7CkwQ0DVd3h9EgbAIC/8ADbm7fHrXgId/op9RtEux2UZh0nsmVL
      m5MKIZoywzAoKSmxO4YlDa4AFOccJa/SQYRL55u1mxg+6gIUIK17B9as20haxxas3X6coeP7
      2R1VCNGEmaZJQUGB3TEsURragjB6wMeRw4eoCECb5HZEh1ffZWdSkH2UzPxyklLaEeWt++47
      TdNwOhtcXTvrysrKiIiIsDtGvQiFfTFNk4qKCsLDw+2OYrvqO4G/fwd/Y6RpGvv27aNLly52
      RwlagztSqi4P7Tp2ruMZhbgWbYlrcdYjCSFELX6/n5UrVzbqAiA9qUIIEQS3283YsWPtjmGJ
      FAAhhAiC3+9n+fLldsewRAqAEEIEQVVV2rdvb3cMS6QACCFEkHRdtzuCJVIAhBAiCLquk5GR
      YXcMS6QACCFEENxuN8OGDbM7hiVSAIQQIgh+v59ly5bZHcMSKQBCCBEEt9vNiBEj7I5hiRQA
      IYQIgt/vl/UAhBCiKVJVlRYtGvfUBFIAhBAiCIqi4PV67Y5hiRQAIYQIgqZp7Nq1y+4YlkgB
      EEKIIMiSkEII0UTJkpBCCNFEuVwuBg0aZHcMS6QACCFEEDRNY8eOHXbHsEQKgBBCBEFRlEa/
      wpsUACGECILD4SAhIcHuGJZIARBCiCBomsaWLVvsjmGJFAAhhAiCDAMVQogmSoaBCiFEE+Vy
      uejTp4/dMSxx2h3gh3R/GWtWrkZT3QT8Abr3HUJinBd/WQErV63H4XLijGnNkLQuKHaHFUI0
      Wbquc+TIEdLS0uyOErQGdwWwffVSvCl9GDF8OGNG9mfp/C/RTZM1y5eQ3GsII0aOJqp4D5sP
      F9odVQjRhJmmiWEYdsewpMFdAThdKpWaBoChBVCcTsAgu0RnUEIkigIduqWyeON+eif3xTTN
      k15vmiZ+v9+G5A1LKH0OobIvhmGExH5YZRhGSHwWpmmSkpLSqPejwRWA1L7D+eKTz1iSkUh+
      1nGGnXcpDrMSvxmG+7s2H9UbiVZ5HKj6ZQoEAjWvN00Tp7PB7ZYtFCV0GslCZV9CZT+sUhSl
      0X8WgUCAb7/9lh49etgdJWgN7ki5MX0Z7fqP45x2CVSW5PLl4sW0uOR8XA4/mglOBQx/Baqr
      6g48VVVRVbXm9ZqmSQGgarUil8tld4x6EQr7YpomgUCg0e9HfVAUBV3XG/1nERkZyXnnndeo
      96PB9QEUFpaS0CIeh6IQHhmLVlaAX1eJDzc5XlgJQMbufbTu1M7eoEKIJi0UhoE2uFPlwaOG
      k75iMXvCw/H7yuk6aBxRboXBw0eQvnY5+90uNFcCIzs0tzuqEKIJczqdjbr5BxpgAYhslsSE
      85NqPR4e24rx57WyIZEQQtRmGAYFBQV2x7CkwTUBCSFEY2CaJsXFxXbHsEQKgBBCBMHpdNKz
      Z0+7Y1giBUAIIYIQCARYtWqV3TEskQIghBBB8Hg8nHvuuXbHsEQKgBBCBMHn87F48WK7Y1gi
      BUAIIYKgqiqdOnWyO4YlUgCEECJI35+GpjGSAiCEEEHQdZ1jx47ZHcMSKQBCCBEEt9vNkCFD
      7I5hiRQAIYQIgt/vZ/ny5XbHsEQKgBBCBMHtdjNy5Ei7Y1giBUAIIYLg9/tZs2aN3TEskQIg
      hBBBUFWVVq0a9wSVUgCEECJIHo/H7giWSAEQQogg6LrO7t277Y5hiRQAIYQIgsfjYfz48XbH
      sEQKgBBCBCEUloSUAiCEEEFwuVwMHjzY7hiWSAEQQoggaJrGtm3b7I5hiRQAIYQIgqIoREZG
      2h3DEikAQggRBIfDQbNmzeyOYYkUACGECIKmaWzdutXuGJZIARBCiCDIMFAhhGiiZBioEEI0
      US6Xi759+9odwxIpAEIIEQRd1zl48KDdMSyRAiCEEEFyOBr3IbRxpxdCCJuoqkpSUpLdMSyR
      AiCEEEEIBAJs2LDB7hiWOO0O8EO+ynL8Ab3m3w6HE2+4F4di4vdV4g8YhHm9OFWpXUII+8gw
      0DMgP/so+/btY9++fezd8S3//s/HaCbkHdnFgiXp7Nq5lS8XLaNCM+2OKoRowmQY6BmQmJxK
      WloaaWm9CdNK6TdyDC7FZN36TQweOYp+/QfRO9HJuh1H7Y4qhGjCnE4nPXv2tDuGJQ2uCaia
      XlnCpsM+Lh/cAghQ7HMSF+ECoFlKW9anZ0DPthiGgWEYJ16n6/j9fptSNxyGYVBeXm53jHoR
      Kvui63pI7IdVpmlimia6rv/4DzdgPp+PrKysRv2dNtgCcHDbehK79cWtKGBqGDhrLlcU1YOh
      nzjIm+bJzUFer/csJm2YysvLQ+ZzCIV9MU2TioqKRr8f9UHTNAzDwO122x3Fssb+nTbMAmBU
      smFXNhMmj0ZRwCSMMNWHz4AwB2glhbiiYoGqcbjfH4uraRqKotiVvEEJpc8hFPZFUZSQ2A+r
      qj+Dxv5ZuFwuunfv3qj3o8H1AQAc2bqG2C4DiXLXnPOT0jKKHfszMTQ/GzftpnuPTrZmFEI0
      bYFAgDVr1tgdw5KGVwBMg8JABIN7ptQ8pCgKvYaMwVVyhPTVa0noNoQOCeE2hhRCNHWhMAy0
      4TUBKQ569utf62HVFcY5fQbaEEgIIWqrHgY6bdo0u6MEreFdAQghRCPgdDrp0qWL3TEskQIg
      hBBBqB7Z1ZhJARBCiCDouk52drbdMSyRAiCEEEFwu90MGDDA7hiWSAEQQoggBAIBvv32W7tj
      WCIFQAghguByuejdu7fdMSyRAiCEEEHw+/2sXLnS7hiWSAEQQogguN1uxo0bZ3cMS6QACCFE
      EPx+P0uXLrU7hiVSAIQQIgiqqtKhQwe7Y1giBUAIIYLU2Nc0qJcCUF5RSVZOXq15+YUQIlTp
      uk5GRobdMSyplwKwZ/9hXvr3HDKOZUkREEI0CW63m2HDhtkdwxLLBcA0TQzDIK+gkFlvvM+x
      4zlSBIQQIc/v97Ns2TK7Y1hiuQAcz87lk/lLMQyD/MIiXvr3exw5erw+sgkhRIPldrsZMWKE
      3TEsCaoAFBQVs+Trtcxb/DWz3viA7Ny8moWec/MLePFf73Lk2HG5EhBChCy/38+6devsjmFJ
      UAvCFBQWs3DZKkpKyzBNo+bgb5omqR1SiI2JJis7l7aJLes7rxBCNAiqqtKiRQu7Y1gSVAFo
      n9yGG6Zezuy35n5XBExME9LO6cr1U6/A7XLVd04hhGhQFEXB6/XaHcOSoJqAFEWhRfN4wjwe
      FEXBNE1aJjTj2imXysFfCNEkaJrGrl277I5hSVAFoNLn4+25nzOwb09m3HgNkRHhOJ0q3rCw
      +s4nhBANUigsCv+zC4BhmCxYtoo+PbtywbjhdO6Ywo2/mkzfXt3PRD4hhGiQqheFb8wU82cO
      1TFNk4pKH+Hehnm2r2kaTmdQXRshpaysjIiICLtj1ItQ2Jfq9WPDw8PtjmI7TdPQdR2Px2N3
      FEsCgQB79uyhe/fGe/L7s68AFEVpsAd/IYQ4WzRNY8eOHXbHsEQmgxNCiCAoitLor+ikAAgh
      RBAcDgcJCQl2x7DEcmO5aWgc2r2dXQcOkZdfTHR8C5I7pNKjcztUpT4iCiFEw6NpGlu2bKF/
      //52Rwla0AXANHR2b1jB629/gC+sOT06dyQy3EPe8YOsWz6PWb4wrvr1dQxP6yyFQAgRckJh
      GGjQBWDvmnm8v/IoN9w5k45tm/P9Y7xpmuRm7GHu++9T5ruaCwen1kNUIYRoOKqHgU6bNs3u
      KEH72cNAq1WWl+MK86I6Tn16bxoaFT7tZ44aMinOzWT7ngNopoP2qT1okxCNHqhgx9atFJb5
      aZWSSsekFtT1zjIMtEooDJ2sFgr7IsNATwilYaDbtm0jLS3N7ihBC7oTOCw8HNWhYOo+5n/8
      MfmVGjtWfsJNN97Em5+vBEBxOH/2kFFfcRZLV22he9pAhgzsS1SYE0yTLauWUhnemiGD+3N0
      y9cczKsINroQQlim6zpHjhyxO4Yllk+VK4uymP/1ekadO4JXXvuYm/90N7Mfeo4LJgwlIYit
      79n0De17DyPaWzWnUHQUmKbBgeMlXDC8NapDoW9aZ5Zv2Uv70T3r3EZjX6ezvoTS5xAK+2Ka
      Zkjsh1WGYYTEZ6HrOoZhNOr9sD4KyNTBMMk9upfiyGR6dkiihddBhRbc1rOys6jwb6PksElp
      STFtu/Wje3IUPiMMz3fNTa7oOPwl+4CqLyEQCHwvj4miSK+zaZonfS6NWajsS6jsh1XVBaCx
      M02T5OTkRv2dWi4A3tjW9EtSuOuB57jk+jupyD5CaauOtAnyZmG3J5zO/YeQFOMAU+Pj9z8g
      KXESqqJjACpg6n4cqhuompNbVdWa10sfQJWysjLCQmRyvlDYl+qlUxv7ftSHUOkDKC8vZ+PG
      jfTp08fuKEGzfKTU/BV0GDCRWdN6EB0dgRHw8cAff4v64y+tU9vWLTl05Bhto9uioOJxKei4
      iHQHKCrXiA93kn/kKHFtk61GF0KIoIXCMFDri8Lrfj798APKFTcORcHpDiMqIvhFEpJ7DiSQ
      sZlvNm5i/ZqviUjuTaxHYWD/NNakr2Dzxm/YeKSSAd2SrEYXQoigNcnZQH9ID5Sz8sv/8fna
      g1wy8XzC3Q7ASZee5+AN8jLA0DVKSkpAdRMdGf5dm76Jr6Kccl+AiMgo3M66Ny5NQFVCYehk
      tVDYFxkGekKoNAH5/X42bdrEgAED7I4SNMtHSn95IemrN6D74KMP3gVAcUTxh67BFwCH6iQm
      Nu4Hjyp4vBF4GvcKbEKIEGEYBnl5eXbHsMR6J3BMa+55+Mn6yCKEEI2GaZqUlpbaHcOSemgr
      Mdi5ZjFvffQl5b6q8bAONZq7Hp5Jogx4EEKEKKfTSY8ePeyOYYnlTmB/cRbPz36HYSOH4SOG
      6646n+iWycTL2vBCiBAWCARYvXq13TEssV4A/GV4m3VgYO8ueCO89Bw0AsfRnRQa9RFPCCEa
      JhkGCngjmqEGCtG9Caj5u/nnK/9iR1YZTrkZVwgRwmQYKIBpkJedTUSzFpRl7WX56m106jWA
      Xqlt6ynizyPDQKuEwtDJaqGwLzIM9IRQGQbq8/lYv349w4YNsztK0KwvCak4cFLJO7Oe5al/
      vEvPAWls3LilHqIJIUTD5vP57I5gieUCoFcW8tTjjxPRPg01/zBaeAw7li4mt/FOkCeEED9K
      13WOHz9udwxLLBeAytI8ylyJXD5hBHGRHlCduLQySv31EU8IIRomt9vNoEGD7I5hifVO4OiW
      tCST5199h4PZ+Xz57r/JjGlPW7ljVwgRwvx+P1999ZXdMSyxXAAc7kh+f9+DdIo2aJHalYjo
      tsy895b6uMNMCCEaLLfbzahRo+yOYYnl43RF8THeeedT+o46l/GXJxMe5qpzrV4hhAglfr+f
      VatW0aFDB7ujBM1yAXB7Y+me2oqP33qJjNxS+g4dw7nnjqVzUkJ95BNCiAZJVVVat25tdwxL
      LBcA1RXOkHMvZfDYiWQf3sM/nnqY37z1L3r16c/ka6Yxuk+n+sgphBANjsvVuOe8sb4msKGx
      /ZuVfPrpJ2zam0P/kefx0u1jiCWbRx5/kXNeepbmjfszEkKIWnRdZ+/evQwfPtzuKEGz3gdQ
      dJQP5s5jwPlXcvsDAwhzVvcrJ3LdNcW4rb6BEEI0QB6Ph3Hjxtkdw5KgRwEd3rmBfccLCYtN
      4oHHHuGiMYO+d/AH01Tp0iWZffsO10tQIYRoSHw+H4sWLbI7hiVBXwFER4fz7DMziUvtz/jR
      w0lt3xa3U0UP+Mg4tI+vFs3j2/0l3PKHO+ozrxBCNAgul4shQ4bYHcMSS5PB+StKWLN8AV8u
      /orDWQU1j8e1TGbMeRcybnh/orxntxFIJoOrEgoTqFULhX2RyeBOCJXJ4CoqKvjss8+48sor
      7Y4SNEtHSrc3ihHnT2LE+ZMwdI2ApqOqTpynWLBdCCFChaIoREdH2x3Dkno7VXaoTjyqnHkL
      IZoGh8NBXFyc3TEssTwVhKEH8PkC9ZFFCCEaDU3T2LZtm90xLLF8yl5ZnMkD//cA0R37Mu7c
      cfTq1onIcI9MByGECGmhsCSk9RXBMKkoKWDb5o18tfwr9hzJomPPgVxw/gS6tW+N4yxXAukE
      rhIKHafVQmFfpBP4hFDpBC4vL2fOnDlMmzbN7ihBq4cjpYI3Mo72HTuSk5nBvv0H2L1jJ0UH
      vsGRNJw/z5giM4MKIUKOy+WiX79+dsewxPKx2V+exz//9gird+fQd9g4brvvUTqltMZhlPDA
      rX8is2IKSbI2gBAixGiaxoEDB+jVq5fdUYJWL1cA/cddxW//PPCkO4FxRPHAc8/glLkghBAh
      SFEUHA7ry6rbyXJ6pzOM48czCBhVXQmB0mxemv0fNFPB7fGc9T4AIYQ4G1RVJSkpye4Yllgu
      ABXFmaz6ZjsetWpTrogocr5JJ6PScjYhhGiwAoEAGzZssDuGJfWwIEw0WtFhth/KomvrWPIO
      bWa/30uzIDv4A+UFfPLZAlokVi20ENuqHT1TkygvPM7XqzcSFuZG98QzclBvVLm8EELYJBSG
      gVouAK6I5tx6/ZU8+fAf0QyVgCOcX998B1FBXlv4ynOIatmdESN61jxmmiZrvl5B16ETSY73
      snPVfDYcaEv/js2txhdCiKD4fD4WLlwow0A7DRjP0537U1rhx+ONwOtxY5gE1f5fmp2L5ooi
      Ly8PjzeCCK8H0Mkrg+FxVcOJkjt3ZOH6g/Tv2BzTNPn+rQymaeLz+azvViMXSp9DqOyLYRgh
      sR9WGYYREt+pYRj06NGjUe+H5QJgBMp568W/sXDtbrTvOoIdzjj+9spLJAVxz0t0m1TakUNW
      5jFys47gatmDwd2bEzA9uL4rKA5POLr/WNX7GwaaptW83jRNuRGMqiFqqhoak/KFyr6Eyn7U
      B8MwGv1noWkaubm5jXo/6mFFsEzW7CnjmX++Qriz+pRfITzIsf/hMQl0j6laUN7s0Y3/vjMX
      X4/JeBw+/Ca4FdArS3GGRQJVPfHf/wLkTuAqPp8vZD6HUNgX0zRRFKXR70d9auyfRSAQoKKi
      olHvh+VRQN6oBJISm+ENDycyMvK7/yKCHv6Zn5uL/l2LjukrQXNF4kKleaTCsbwyAA7u3EtS
      ager0YUQImhOp5Nu3brZHcMSy6XLV1nMsW3p3HLLbcSEVZ2JK2o09zz2CK2DuAowfYUsXbwJ
      j8dFebmPseePR1UUBo8+l1WrVnJYVXFEdWBYSqzV6EIIEbRAIMCaNWvo3r273VGCZnkyOD1Q
      ycEDB/Dr39uo4qR9aioeG5rGpAmoSihMoFYtFPZFJoM7IVQmg9N1nczMTNq2bWt3lKBZbgJS
      XWG0a9cOl6rUjMgxTROLU4wKIUSDVj0MtDGzfKpsBsr55yP38G1GGTm5xXRqG0NeZSxPvvgU
      rRpv57gQQpyW0+mkS5cudsewxPIVQHlRJnuKo3n8gRl07z2MJ594hE7JrYkLq494QgjRMFU3
      6zVmlguAQ3WjOAzcYdGUFB2jOGBSeXgXxxv35yKEEKel6zrZ2dl2x7DEcgEIi05geK/O+MJb
      cX6v5vzh93/CTB0Y1AggIYRoLNxuNwMGDLA7hiWW+wC0gJ8OPfvTItLLJdPuZPyUMo4cOg4m
      yMLAQohQ5ff7WbFiBZ06dbI7StAsXwH4So4z54PP0E1QHCrh4S7mPP+sTActhAhpbreb0aNH
      2x3DEgtXAAarv/wvy9ZtZs+uvfz92WdQFagszmGbL4YW0gkshAhhfr+f9PR02rdvb3eUoFko
      AApJqecwRFHZe7iMYcOGoSpVVwHXtkslQpp/hBAhTFXVRn0TGFgsAG06dCMxuQMdug4ksW0b
      nA4FQ/NTUFxefwmFEKKBaswzgUI99AHolSX86/U3qNQMAEytmKcffpZiuRVYCBHCdF3nwIED
      dsewxHIB8FcWUVDkx/XdmsAOVxjOsizypRNYCBHC3G43o0aNsjuGJdang45pRaLzOC+8/gFb
      Nm/iP7NfJDMmlbZyH4AQIoT5/X6WLFlidwxLrN8J7Irg9vseopV5nP+8/R8K3R149P5b6mOt
      SSGEaLDcbjdDhw61O4YllgsAgOL00KpVa9q178LFFwxlw4bN9bFZIYRosAKBAJs2bbI7hiWW
      C4DhL+W5h+9jw5EStq9cRpnqZsH7/6XIqId0QgjRQCmKQlxcnN0xLLFcACqKs8gMJHDbTVNJ
      SYhCcXuJNoqlE1gIEdIcDgdRUVF2x7DE+mRwkc0IKz/E/778itzicjYu/YK9ZjMSZeEjIUQI
      0zSNHTt22B3DEusrgoXFcPd9fyJrSzq5poPtO45xz723IzNBCCFCmcfjYfz48XbHsKQeOoEV
      YlqmMHzESCZechmXXnIxXZKaW9+sEEI0YLIkJGD4y3j6/t+zX29F93YtWPr5f/nfORfy4Iyr
      62eIkRBCNEAul0vWA6goPs7hyuY8+fSDRLocaOVZ3Pm7B8j0XU0bT31EFEKIhkfTNPbs2cM5
      55xjd5SgWS4AYZHNSWweQX5+AQG3A4wA4RHhVBYXUOByEB0TgyozgwohQoyiKLjdbrtjWGK5
      APjKCzi4eTW337K56kBvGhSXlnPPzTfh9rbkiVkv0EamhRBChBiHw0FiYqLdMSyxfgUQ25Z/
      vvcJTueJaVG1ilI0dyRhjXumVCGEOCVN09i0aRN9+/a1O0rQLPfTVhYd5bGZD7HjSB6mobNz
      /RLuuv1esnz1EU8IIRqmUBgGavkKIDw2iWuuPJcXnvgLETHhZJd5+M0f7iZFbgQTQoSw6mGg
      06ZNsztK0CxfAZimgd/vp6KsmIBm4PSEER7mRtaDEUKEMqfTSe/eve2OYYnlAlBecIS33l/E
      9Pv+xqOPP8mtkwbxyt8e41hFfcQTQoiGyTAMMjMz7Y5hiWKapqWTdcPQ0HUFp0ularSnScBX
      jqFG4LHQwGRofrKz82mW2BKXogAmpYX5FJX7iW+egNdd98Y1TcPplNUIysrKiIiIsDtGvQiF
      fTFNk4qKCsLDpW1U0zR0Xcfjadw3ClVUVDB//nwuv/xyu6MEzcIVgMG8N2exM8eHy6Xx3zfe
      ojgAoDF39qvkBawFO7htPf9973/kfbfWcNa+TSxfv4OK0kIWLVhIaUAamYQQ9nE6naSmptod
      wxILBcDk2IE9FFdqgMaGNWup1AEMDu3eSbke/Jb9RcfYmafSNSm+6p1Mk3UbdzJ8xFA6de7G
      wE6xrNlyMPg3EEIIiwKBAOvWrbM7hiUNrq3ENDRWr95Av6Hnsm3+oe8e9FMWcBPlqapX0YmJ
      lHydCbTHMAx0/US1MQwDn0/GoBqGQVlZmd0x6kWo7Euo7IdV1a3OmqbZnMQawzAYO3Zso/5O
      LRYAP/M+eIutsSr7jmbw7uuvEuHU2Xm0MOgtZh/Ygj+mPS2iPGyreVTHxEH1jBKK6sQwTrQx
      KcrJc0009vbi+hAK7ebVQmFfpA/ghFDpAygvL2fJkiWNehiohQKgMOKSKew8kgvAL2848SFM
      mjaNFkF9t35WLF1NRMcefL1iBfuPHqNi9TqG9k3Dq/qp1E28qoKvMB9PbDOg6nZsh0PmHRVC
      nF1Op5Nu3brZHcMSCwXAQec+Q+ncp/7CgJvJv/ldzb8CxzPpPngAcU4HnZLi2bjjEAO7tGT9
      xj30GjaxPt9YCCF+FsMwKCkpsTuGJQ361Ll9jx5EOhRQFLoNGEVLtYhVazfSeeA42sY17stH
      IUTjZpom+fn5dsewpH46gU2NXZs3cOh4MWkDepOVVUzPbh0sb7Z99x41/+9QXXTo1hvrWxVC
      COtcLhd9+tRrE8hZZ30qCK2Sfz/1AK+8/wXvvDKL7Eofr730L8pkmL4QIoT5/X7S09PtjmGJ
      9akgio6x6biTh2f+iZ4pzVHD40jQ88mSqSCEECHM7XYzduxYu2NYYrkAuMOiUSsy2bhjP+W+
      ABk7vmFvRQQtZBEYIUQI8/v9LF++3O4YlljuA3BFNOOWm67hxVlPs233AQ7+52Om3jKdSFkG
      UggRwlRVpV27dnbHsCToAmBoPvYfPEpyUiuMyBSe/MdsHHLQF0I0IRbn0rRd0E1A/vIc/vnC
      K+TnHmHWq++hGSam+f3/6jOmENaYponf7z9j28/MzGTHjh1nbPui4dF1ncOHD9sdw5KgrwDc
      3ma09RZw/4NPknE4m3vu/mPNFYBDjeKOmX8hMay+YgphTWFhIU8++SSPPvpovStiuRoAACAA
      SURBVGyvrKyMJUuWcPHFFwNw4MAB9u3b1+jvDBU/ndvtZsSIEXbHsCToAuBwebnlz09xeP9m
      Zr21hFtvnYbzxGQ9NHfXU0IhzhDDMCgqKgIgJiYGh8OBaZoUFBRgGAZRUVF4PB5M06SoqAhd
      14mJiUFVVbKzs1m/fj2DBw/G660a8WCaJsXFxQQCAWJiYnA6nSc95nbLH0Uo8fv9LF26tKnO
      BQSe8Cg6dhvIn+/tRXR0FIr0AYhGwjRNXn/9dRRFwe/3Ex8fz+TJk3n//fcpLCykWbNmhIeH
      c/755/Phhx+Sn59PZGQk2dnZTJ8+nQ0bNnDw4EHS09Pp2LEjAKtWrcLr9dYUlRtuuIGPP/6Y
      rKwsYmJiOHjwIDNmzJAJ4UKE2+1m+PDhdsewxEIB0Jn74jO0HXsJi994mdzvzcDsUKO566GZ
      JMpQUNFAZWZmcvToUe6//350Xef+++9n4sSJbNmyhSlTppCamorb7aa4uJiNGzcyc+ZMVFXl
      gw8+YN26dYwdO5a9e/dy2WWXAbBy5UoGDRrElVdeWdPcVFhYyLp163jooYdQFIU5c+awevXq
      Rj92XFQJBAJ88803jXpRGEuTwQ2fOImw5q1oPf02tJM6fVXiZaoe0YAVFBRw4MABXn31VaDq
      tn5N07jzzjuZP38+S5cuJSEhgZEjRxIWFoaqqgC0bNmSwsK6pzuv/hk4Mf2z1+utma68efPm
      p3ytaHwcDgfNmze3O4YllqaDbpVSNTNPbPvvz9Cj8eX7HxDVJoUEKQKigUpOTqZ169ZMmTIF
      r9fLoUOHCAsLIyMjg8svvxxFUXjwwQeZMGEClZWVZGdnExMTw8qVK7nqqqtQVZXi4uLTLmoS
      Hx9PRUUFOTk5xMbGsnbtWiZNmnQW91KcSYqiNPp1Ks7AimA6G77+io4X/kIKgGgw3G430dHR
      zJ49G0VRGDZsGNdccw3vvvsuqqqSlJRESkoKeXl5LFmyBF3Xufjii4mNjeW3v/0tn376KZqm
      MXbsWNq3bw/Aueeey2uvvUZaWhoJCQk1Y8Ldbjd9+vTB4/EwY8aMmtcOGTKEzp07n9X9Li+p
      wFfuJ7ZFdK2Fk4Q1mqaxc+dOhgwZYneUoClm0HcymBRkZ1JQWvmDx/28+tiTXP/sa3SKtJzv
      Z9M0Daezwa10edaFwipa1UJhX872imA5GXm8cvdbrPzfWnTNoG3nRG54bCqDJ/azvRCEyopg
      uq6TmZlJ27Zt7Y4SNAtHSoNlH73O3K+21XrGJBJ3g15pQDR2pmlSlFtC+kdryD2aT0r3JIZe
      NgCX22n7Ac5uAb/Go1OfY+uKEzemHdqewWNTn+OxeffTY1gXG9OFDp/Px8KFC5vqMFCVy6ff
      y+XT6y+MED/VjtV7+MsVT1CYVVTzWJeBnfjL3LtIaNvMxmT2W79gI9vSd9Z6vKK0kg+e+YRu
      Q+7CIfO2WOZyuRg4cKDdMSyR83TR6JQVl/P8LbNPOvgD7Fq7l3/f/26jn5/Fqsx9WZhG3Z9B
      9qFcNF/gLCcKTZqmsWvXLrtjWCKN5aLRydh1jH2bDtb53NovvqWyzIc3suHNQ3Js33Eytmfi
      UFW6DupEi6QzM4QwIak5iqLUWQjjE2NxuuXPvj4oikJYWMP7Pfs5LF8BVBRl8Nq/30czvnvA
      9PHJ2+9TZJz2ZUIEze8LwClO8nXdQAucemimHQzd4OMX53PniL/yyC/+zkNXPc2tg/7Ekne/
      PiNXK/3H9yKlR+2OSZfHycTp5+FQ5cK/PjgcDlq2bGl3DEss/ybo/nJ27d5f8/foLy9k2Zfz
      KTxzEy+KJq5taiLxiXF1PtehVwqRsQ1rxNDGpVt55Y9vUV58Ypm8guOF/H36LA5tz6j39/NG
      efnznDtJG3MOyndt/c3bxHPr8zcw6KK+9f5+TZWmaWzevNnuGJZYmgri49lPMGfJt2RmFTLt
      2m0ogKHrJPe7gLaN+8pI/ICu6WQfySU/s5D4xDhaJDVDdao//sIzILZFDNc9OIV/3PYqgcoT
      7dlxLWP5zePXNLhRQEvfSydQR7t7RWklK+aupl2PpHp/z+RubXjki3vJOZJHZVklLVMSiIgJ
      b3CfTWPm8XgYP3683TEssTQVxMRpdzH6siO8+f4KbvjNL3AqoCgOnE4n8msWOsqKynn5zjdY
      8u7X+Cv8eLxuxl0zkulP/orw6LM/sZmiKJx//Riat41n4RvLyM8soG3XNlx26wWkdG94Y7KL
      80pO/Vz+qZ+zyu1x0aZTqzO2/aauiQ8DVVCdLqKbJTFueG8MRaXo6Dbe/+wr+o6dyJAe7eot
      pLCPYRi8cvdbzP/XkprHfBV+vpi9CFV1cNsLv6lpZjibFEVhwIQ0+o/vjWEYOFRHgz277TKg
      Eys/Xlfnc537dzzLaUR9cblcpKWl2R3DEst9AP7SXGa9/i7o5bz09PNEt2nFK0/9gxLpBA4J
      ZUUVLH77qzqfW/DmMirKfngn+NmlOBRUp9pgD/4AE64bQ3K32lcmPYZ2YdhljXsceVOm6zpH
      jx61O4YllguA5i/D6YrAl5/BAVrwi8suolN4Bbn2HhdEPSnOK8ZXUXePvq/cf9rmDVElPjGW
      JxY+wNhrRpDctQ0pPZK44vaLeOiTexrkcFXx05imedrJABsDywOCvVGtiNUOcuefHqLTyKlo
      RdlkKHGyFkCIiGsZS0RsOGWF5bWei4yNIK5FzFnLYpomhmGcNO3yT6XrOg6HPc1EiqIQnxjL
      jJduQFWqpqpwh7ka9FWL+HFOp7NmMaDGyvIVgMMTyZ8ee577//IY91x/IaYzkrvv+T1h8rsd
      EryRYVz1x0trTR3gUB1Muecy3N4zs8yhaZrs3r2b2bNn8+abb5Kenk5GRgaPP/54UNt78MEH
      CQTsvQNWURTCwj14vG45+IeAQCDA+vXr7Y5hST3cEmhSmnecz99/i637jtKmcx9+9eup1jcr
      GgRFUZj8h4txuZz89++fU1pYRlRcBJP+cDGX3jzhjB3I9u7dy9y5c7ntttswTZOysrJGf7kt
      QksTHwZaRfeV8MwTj9Fl7FRuv7QVGdtX8tDDzzPrhQdo3JO9impuj4sr77qEy2dcSElBGVHx
      EThdZ3Y6gc8++4xJkyYRFRVFWVkZiYmJZGRkkJmZydy5c8nNzSU1NbVmacZly5ZhGAbx8fFc
      ccUVOBwONmzYwLp163C73WRlZZ3RvKLpaeLDQKtUlmRT6k7hyovG4FYVundtx+pFd3KsHNoH
      MUQ8UFnG/n17yCkoxRvdjO5dU/G6nRh6gP27tnO8oJx2nbvTJiFG7jU4y5xuJ3Etz06bf3Z2
      Ni1atKidwelk/PjxREREcOeddzJy5EhatWrF1KlTCQsL4/nnn2f37t1ERkby6aefcvfdd+N2
      u9m7d+9ZyV0tJyeHOXPm4PF4UFWVtLQ0unT5edMw+/1+Pv/8cy655JKg+j3EmeV0Ounevbvd
      MSyxXADCIprjLjvE58vXMrhrW/ZuXsE+I55WQXYClxTkEd48maHd4yg+vpdP533F5EvGsH3t
      UooiUxkysDNL5n8BwyfSNk6uMUKV2+3G5/PVejwhIYGYmBNFyDRNjh8/zuLFi1FVlX379lFa
      WsqBAwfo378/Xm/VL+LZXiSo+orjxhtvpKKigmeffRaAvn1/+lQMDoeDlJQU6S84DZ/Px+OP
      P07r1q2Bqu/5oosuqvPkIRhlZWXk5OTQrl07ALZv387mzZuZMmUKhmHUucbzc889xzXXXEOz
      Zg1/WnLLfxWqN4a77r6DV//1Jp+9nUvz5G7cc/8deIP8nY1PTCb+u/+PiG2G6d+FicneIwWc
      N6kdqqowMK0T6Vv30nZEjzq3YRhyEwI07s8hLS2N9PR0Lr/8cqBqFI9hGDUjgaDq4K/rOq+9
      9hq33347LVq0YM6cOZimSXR0NIcOHTrpZw3DOGufiWmaNe/p8Xho06YNOTk5GIbBvn37WLFi
      BZGRkVx00UV4vV6++OILWrVqxaZNm4iNjeWSSy7BMAyysrIwDIOFCxeSkJDAli1bcLvdXHrp
      pY12Jsoffo9WBAIBSktLue666066Sqqv7/n48eMsWrSIG2+8EYCOHTuSlJSEYRjouk5RUVGt
      97r22muJjIxsFH9/9XBapNA85RzumfnEd//W2bx6DcWJzYl2BbM9k6P7drL/yFEKSjVGjR+L
      w6yk0vDgVauqiieuGZUb91e9m66fNLqjqc8FX80wjDrPoBuLcePG8dZbb/Hiiy8SHh5OTEwM
      vXv3Rtf1mv3SdR2/309KSgrvvvsuUVFRbNy4keTkZLp3786iRYuYNWsWYWFhZGZm4vf7z9rv
      h9/vZ/369bzxxhtkZ2fj8Xi4+OKLOXbsGK+88gp33303+/bt46WXXuKWW27h008/ZfLkyVx1
      1VXMnj2b7du3k5SUxIIFCxgxYgQLFixg1KhRXHrppXz++eesWLGCkSNHnpV9qW/VxbE+fj/9
      fn/N78T3C8C2bdtYtmwZXq+X1q1bM2jQID755BOuvfZaMjMzefjhh3n66acJCwvjlVde4brr
      rmP+/Pnk5uZSUVFBWloaffr0Ye7cuWzZsgXTNBk8eDAul4tdu3ZxwQUXsGjRIjIyMpg9eza5
      ublcfvnltG/fnvfee48rrriCqKgoy/t3pp2B62KNL955i8nnDA2yAEDL5I5EN0tgz7ZNbNyy
      i/HDuuNQDExAAUxDw+Go2rjD4ThpbVFN03C5gnzjEFJWVlbT/NEYeb1ebr75ZsrLyykrKyM+
      Ph6Hw8E999xT830//fTTeDwepk+fTnl5Oaqqcu211+JwOFBVlfvvv5/KykqcTie//OUvcbvP
      3vBLj8dDr169mDx5Mrm5ubz33nscOHCAvLw82rZtS3Z2NlFRUezduxen00lMTAyDBw8mKiqq
      pjnD6/XidDoJCwsjPDycoUOHEhsbS5s2bfD5fI32+63PNYFN0+To0aO88847NfPzX3bZZXz6
      6afceOONtG7dmkAggNPpZNeuXSiKwvbt24mNjeXAgQOkpKRQVFREdHQ0l156KW63G03T+NOf
      /sSYMWO46qqriIuL46abbgJg48aN5OTk4PV6ycnJIT8/n9///vccOHCABQsW0L17d44cOYLT
      6WwU308DXBlCwelyExXbnL7DxvLp++9SqqcR7gxQ4jOI8TgozjxOVGLVJFc//IOW9tLQoShK
      zWLw1W343z9oVDeBKIpCZGRkrdc7nc46Hz9bPB4PUVFRREVFMXHiRBYvXsyAAQMoKSmhqKhq
      NbPp06dLB69FKSkp3HDDDSd9jhdeeCFvvPEG8fHxTJgwgQ4dOtClSxd27tzJtm3bmD59OgsX
      LuTIkSMMHz4cqBp5lpWVhdvtJjc390ebcFRVZciQIaiq2mib4yxNB/3+P2by7pItP3jcxO8P
      4+ogj8N7tq6nnAhiIr1UFOfgadmFKCcM6NOdVStX0zkpnu178hl93qDgowtxFmRkZLB+/XoC
      gQDz58/niiuuIDU1lUWLFuHz+XA6nezfv5/evXvbHTXk9O3bl4EDB1JaWsr999/P008/zejR
      o/noo48ICwujc+fOvPfee2RmZnLvvfeSk5PD5s2bmTlzJoZh1IwaUxQFTdMwTbPWyaWu62ze
      vJmLLrrIjl2sF5amg77w17cz8so65olRHDQL8uqnY/c0CvLyKK/0E9+6E116xuJQFFp2OIfh
      8fkUlFYy7rzz8LrlTF80XB07dmTKlCmYponL5WLGjBl4vV7Cw8Nr2v8VRWHAgAE4HA5+//vf
      Ex5eNW56woQJhIWF4fF4uP3221FVlZtvvpnY2FgA+vXrV299GVXt8VB9bLPjCtrqNB1Hjx7l
      tddeQ1GUmlFA6enpHDt2DNM06dKlC6qqkpyczIoVK7jjjjtQFIUWLVqwefNmwsPDcTqd6LrO
      rFmzUFWVgoICAFq0aEFeXh6zZs1ixIgRKIqCw1E1gYLT6axprgNqHm9MV3SKGWK9ppqmnfUh
      fw1RWVlZTfNJY9cQ9sUwDMqLK/CEe3AFsaauaZpUVFTUHOQbgoLsIr6YvYht6TvxhHsYdeVQ
      hl0+8JT7Z5omjz/+OEOHDmXUqFFBv+8P+wCefvppLrnkElJTU4Peph18Ph8rV65kzJgxdkcJ
      mhwphTgN0zTZuGQrbz88l8z9WYRHeTn3V6OYdPtFuDyNd7BBYXYR9098jN3r99U8tuqTdVx2
      24VMf+rXdZ6NZ2ZmkpWVxbx58xg5cmST72/TdZ1jx47ZHcMSKQCiSSvOK2Hr1zspLSyjfc9k
      OvZud9Ki6RsWb+GBS/920pTYr/3pP+Qdy+d3z1zXKBdYN02T/z772UkHfwBdM/jo+S8YM2UY
      XQZ0qvW6efPmMXXqVN577z0KCwuJi4tj9+7drFixAq/XS35+PgMHDmTAgAEUFBQwd+7cmjb0
      iRMn0rp1a+bNm0dGRgaKonDllVcSHx9fs33TNFm+fDl79uzB7/fTt29fhgwZcsY/j2C53e4G
      ne+nkAIgaqkoqSD943VsX7WLiJgIRkwaTKc+7WraOBsr0zQpL65gxX9Xs2fDAWIToln89lcc
      25eFaZq4vW7OnTqSW1+4AZfbiWEYvP3Q3DrXQ/jy30uZOP28eluCUtd0DN3A6Xae8TNrXdPZ
      mr6zzucM3WDr1ztrFYBAIMDOnTuZOnUqubm5LFiwgKuvvpq8vDxyc3O59dZbCQQCPP/886Sl
      pfHMM89w4403kpyczIsvvkheXh67d++muLiYadOmceDAAWbPns0f//jHk96nd+/eDB8+HE3T
      uO++++jXrx9u95mZcdYqv9/P8uXL6dChg91RgiYFQJykrKicv17xJBuXbq157KPnPue3z1zH
      xOmNe+bD4rxS7r/4MXau2VPn8/4KP1+8uojk7m2ZdPtFlBaUcXTv8Tp/tqK0ksM7MiwXgIBf
      Y/HbX7F0TjoVJZV07t+RSbdfRGKHlpa2ezqKopx2Mj9nHX0AR44c4ejRo8ybN4/y8nK+/PJL
      Jk+eDEBiYiIRERGUl5fjdDopLi7G4XCQnJyMoig19+Vs3LiRK664AlVVSUlJoaysrNYU3Rs2
      bGD37t2oqkp2dja6rteZ0TRNKst8BPwaUXERtjRHud3uRnszXjUpAKKGaZq8/9QnJx38oWoN
      4FfveZs+43o22kXGTdPk7Yc+OOXB//uWvLOCS2+egKEbpx1to+vWbvU3DIPZd7/F/16Yh2lU
      vc+O1btZ/el6nlryV1q1r5/5bH7IoToYcnF/Ni3bVmv/wiI89J9Qe1jqypUruemmm+jRo2r6
      lT179pxyOUSPx1MzdYfD4ah5j4SEBLKyskhKSqKiogJN004aMVNaWsq8efN45JFHcLlcHD58
      uM7t52bk8a/732XN59+i6zrte6Zw42NT6Tak81ktBH6/nzVr1jTqRWEa9zW9qFeaX+ObhZvq
      fK6sqJytK3acsfc2DIPtq3bz379/xuezF5GTkVev2/dXBvh20Q/vWanbsX3H2bvxAFHxkcQn
      xtb5M063k9YdrRXDfRsP8vkrC2sO/tWyDuXwzmMfnrFpKxRF4cIbz2XE5MEnPe7xupn+5K9p
      0ynxpMcNw2Djxo0MGjSIhIQEEhISGD58OOnp6XVuPzw8nIEDB/LMM88wZ84c1q5dC8DFF1/M
      smXLePvtt3n55ZdrzXIaFhaG2+3m3Xff5fXXX6+zAGh+jZmTn2Lhm8spziuhrLDq9/IvVzzJ
      wW1HrH40P4uqqrRq1ThPiKrJFYCoYZrUOhh9X7CTW+mazsalW1n+/ioqSivoMawr4345gqj4
      qrt0/ZUBXpjxGgteX4quVb1HVHwkM/55I6OvGhrUe/6QaZg/+YBaWlDGI1P+zkvfPkGvEd3Z
      t+FgrZ9JSGpGm9ST//hN0yTvWAELXl/Kvs2HiG8Vy5gpw+k2uO7hjbvX78NfWfcqZdXPec7Q
      imthER7ueWsGE64bzdYVO/FEeBh++SCSu7ap9bOKovDII4+c1BY/duzYmvH7/fv3B6qmrrjr
      rrtwOBxccsklVFZWVn0meXl4PB7i4uK46667KCsrw+FwEBkZiaIozJgxA1VVURSFmTNn4vP5
      cLlcTJ06tda0Lis/WcfOtbWn9i7MLuKj57/gjlnTz9pVgKIo9TKdhZ2kAIgaLo+Tc4Z3rTU6
      BKrODrsN6RzUdt9/8mPenPkBmr9qRa9lc1ayfM5KHvrkHiLjIlj45jLm/2vJScWnJL+U5383
      mx5DuxAeZ/02e0+4m+5DOnNkZ93NFj90/GA2Kz9ex4bFdV81ZB/K5fCOo3QbdOLgfvxANvdd
      9ChHdp0YGjjvtSXc+ervGH117ULmCT/1wcMd5kL93ggj0zQpzC7GHeYiPNpbLwc5l9vJwAv6
      MvCC009RXdeBzuFw1LrxSVEU3G43hmHw4YcfkpeXVzNrZnVHqdPpJCIiAl3Xa/bh+wd5p9N5
      2vt4Dm3POOVzGbuOoWsGTtfZuRFL0zR2797NsGHDzsr7BcM0TYpyS3A6VSJiw2v93kgBEDUU
      RWHqfZPY+vXOk4qAy+3k13+9ipRuP7/D88CWw7z14ImDf7Wt6TuZ8+T/uO7BKSx7f2WdVx4l
      BaWs/eJbRk+1fhWgKArXP/wLdq7dy6Gf2FRwZNcxSgrK6nxO13QKjp+YC940TWb/31snHfwB
      fOU+Xr7zDXqO7EZ47MmFrM+4nsQnxpKfWXtO+ZGTh6C6VEzTZP2XG3n5zjc5svMoikNh4AV9
      +N0z19G6gfbHOBwOJk2aVHPFpShKvZ2VN2976jn24xPjTiqaZ1pDXhLSNE22rNjBizP+xYGt
      h1EUhd6je3DLc9eT3K1NzfchfQBNjGmap+3cjG4WxaOf38v0p69lxKTBnH/9WB765B4m3TEx
      qD/iLSt2EPDVvZbv5q924K8M4CuvYzqR71SUVv7s9zyVuFaxPLHwz9zw2FRGXTmEa2dezaCL
      6j77VRSFLgM60bxtfJ3Pu71uWrZLOCnnjlN0MOdnFtRZdJolxjHjxRuJanZiwjqHQ2H01UO5
      +HdV6y3vXr+PR6c+x+EdGTXf3erPvuGvk5/CX3nqz81u1VMmWJnioS7DLhtIXKva/TIuj4vz
      rh2N4jh7ncDVS0I2RIe2Z/Dw1c+wf/MhTKPq92bD4i38ddKTlBaeOKmRK4AmwjRNDu/I4OMX
      55OxO5OEpGZMuG4MPUd0q/UHGpMQzeQ7JsIdEy2/7+n+IBVFweV20nVgJ3as3l3reYfqoNvg
      4JqdTvV+8a3imPJ/l9U8tufb/WxfuZuSgtKTfvac4V0ZfFFfHKrCw1c/U6uIjZkyjHbnJJ+0
      beU0i5Qqp7iHYthlA+kysBNrPv+WsqIyug5M5ZxhXXGoVaNn/vfCPErruAo5sPkQX3+0lrG/
      GP6T9t0upmnirwyg+bV6abqKjo/kwY/u5rlbZrN3wwEwq878r515NQPOT6un1D+Ny+Vi8ODB
      P/6DZ5lpmnw2awEFWUW1nsvYdYxlc1Zy8W/PA6QANBnbV+1m5qSnKMg60dywYu5q/jD7t4y6
      augZ6zjrPboHnnAPvvLai3/0G98L1aUy6Q8TWTvvW47uOTHmXlEUxv9qFN0GpVJRWXFGsgF0
      6tOeB+beyWv3vsOh7RmoTgdDLx3I9Q9Pwel2MnhiP/7vjdt488EPyDmciyfCw7hfjuDXf73q
      pOaGsAgPvUb3YPHbX9V6jxYpCbQ/J+mkx0zTxFfuI+dIHq4wF+f9elStqSV0Tef4gexTZj92
      insUfqrqsfQ5R/LwhLuJT4wLap6jUynJL+WdRz8k/X9r0QIaHXq3Y9qDU0jpYe3eia6DUnl6
      yUwydh/DXxmgTWorYlvEnPV7ATRNY9u2bXTr1u2svu9PcbrfjWN7M2v+XwpAE2CaJi/f+cZJ
      B3+oaraYfc9/6Hdeb6Lizsy8+cld2/CrP0/mX/e9g/G9dv5+43txxe0XoSgKLZMTeGLhX/jg
      6U/YuXYvHq+bkVcO4fxpY874VAuKotCqfQsun3EhRTnFnDOiG53S2p1oI3U4GHXVUEZMGkxx
      finhUWG4w2qPzFEUhesf+QUHthxm/6aDNY+HR3m55e/TiG0RQ0VFVSEzTZMV/13Nq/e8Teb+
      bBRF4ZwR3bj1+etp3zO55r1VVSUhqfkps3+/Capa1qEctq/aja7pdBnQibadE+s8MJqmyZJ3
      v+bf971L1qEcFEUhbcw53PL89fVyd7MW0HnkF8/yzcLNNY/lHMlj97q9PPbl/bTtkniaV/+4
      8GgvnfvbO/7+VOtQNAQt2536HpKWKSeek9lAQ9T3Z9Aszivhlym/PWVb+z/X/43Uvmfmdvaj
      ezJ5eMqz7N1YdbkO0LpjK/628M+0+sEvqWmaaH4Nh+rAoZ5oOz5Ts4GahsnCN5cx6+63KM4t
      AaoOLNMe+gWX3DzhZxcf0zQpyS9l6Xvp7N98iLhWsYy6cgjtelSd/VfPBrplxQ7um/goFSUn
      928kdmjJS98+QUT0iRlDNy3bxv2XPE7lD/pCEju25OVvnyQ8yluzL4v/8xUv3/UmRTnFAHij
      vFz716u4bMaFtTpHv62e4+gHV2bJ3drwwprH8UZaG3m1dt4G7p/4WJ19TedNG82Mf/7mrA2h
      9FcGWPP5N2xatq3mqq7niG6oTmujhfx+P5s2bWLAgAH1lLT+7Fq3l3smPHxSez9AQlJzXljz
      GPHf9aNIJ3AToLrUU7ZBo9R963998FX4eXb6rJq22mrH9h1nzhMf146iKLg8LlSnelYu5/dt
      Psg/bnut5uAPUF5cwSt3v8Wm5dt+9vYURSG6WRSX3nI+d8yaznUzr6b9Ockn7Ytpmnw+e1Gt
      gz9A5v4svv5w7UmP9RrVnTtn/7amWCqKQq+R3Zn54d01B3+Ag9uP8NzNs2sO/lA1p9Nr9/6n
      1lBWwzD47OUFdTbLHd5xlNWfffOz9/2Htq3cdcqBBoe2Z6AF6p7iob75dIAYngAAIABJREFU
      yn08c9NLPHjl03z84nz+++xn3DPhYd5+cC6GxTu5NU1j69atP/6DNujcvyP/9+ZtNfeqKEpV
      09lf5t5JXMuYmp+TU+UmIDzKS7/xvUj/aG2t51L7djhjUw5k7s9iyynuHl7+/kqmP/Vrwk4z
      Fv5MWzF3NZVltQ+CAV+AZXNW0mdszx/dhmmY5GUWkLk/i4iYcNp0anXa8f2GbpBzOPeUz2cd
      PLnNX1EURl01lEEX9SPnSC6uMBfNW8fX6i849b5oLJuTTv/zTkzvoAd0co+e+k7r7EM5p3zu
      pyjOL2XZnLrvEoaqjtyzMVzTNE0Wv7OCJf/5+qTHdU3nncc+pP/5afQY2iXo7TfkYaCKojDo
      or6kjelBTkYeqlOleZv4Ws2XcgXQBCiKwk1P/IoOvVJOerxZ6zhue+E3eCPOzHqm5cXlpzzL
      Cvg1fHUcsM6mkvzSUz9XcOrnqpmmybuPfcj0tLv4w6gH+F2/u7n3wkc5uifzlK9xqI7TFty6
      xvYrioI3Mozkbm1JbN+yznUIvp/XdCiUdY+lYEwiJX2bUVR58tWG0+WkZUrt/oOqN6tqXrIi
      Y9exU3ZCOhwORk8ZdtaGa66dt6HOKxFDN1j/5UZL227Iw0Ch6vcmLCKMpC5taN2xVZ19V3IF
      0EQkdmjJ379+mK8+WMWR3cdokdScEZMGEdsi5sdfHAR/ZYADWw6jOJQ6b/Jq3bEl0c2iLL2H
      Zuh8ffgwX+zZTUUgwIA2bbi0SzdifuIC3V0HpfLpywvqfm7gj69OteCNZfz7gfdqmrcM3WDz
      V9t55Bd/5+llf8UbWXtdVEVRuPSW81n1yfpaRSalRxIjrghureuqvPPQIp1k/yqVik7R4FDA
      NFkYFsZVWVn0bFl1YFccCpfNuJC18zZQXnzyCKvUPh0YPLFfUBmqmaeZMiQyLpyBF/SxtP2f
      w9BPM7WJxSYgl8tF376nv4u6oQu5AqAHdO4Y/udajzs9Llzukzt9nC5nrbMpj9d9Uuef0+X8
      f/bOOzyu4vr7n1u2S6veLEtuslzlhnsDd7ppBkPoLRAISYDkl5CEkJAQCEmAhBpIAqE3m2JT
      3G3ccZVt2XKVJVuyellp29175/1jpVXZlSwXwPjV93l4sO7MnTuze/ecmVO+B5M1vE/TEVaS
      ZayOZs0qKzIWW7MJwGwzo6jBvrIstzIPmK2mUNq61WFFkprGa+5jsgT7tBzXZFFRzSpym74d
      oWkXOeuWb758XUAL8OIDr7LgpXCiMwiu+6bfX3PKu8BnN27gha83oDUKnIX78vl8315euuQy
      nJ1wME68fDQLX15C3tr8Vtd75WQy44aOSx7qAZ3PX1nayrfRhAPbC9i1dm8rs0tL9D2nN796
      6ye8eP+rFO4OZveOmjWMu5+6BfNJcv+Mnz2KwRP7szzViye7hVKXJMp8Hn6zbDFvXnk1UY18
      PgPHZvPL1+/jXz9/nSN7i5FkibEXj+Tuv98Ucad4IkjP7kZSRiLlReGmruyRWThi7CfNK3Wi
      GD5tMOs++bqdtuOb+DqCruscPnyYoUMjf8/fB5x1CkAIEZEs6myHYlIwW0wggc1hRQiBxW5B
      UZVWSs0WbUVCwhoVVDi2KGvoqCjJElaHBVmWsNityIqExW4J8tKoCoqqYLVbsDoswb52K2ar
      imJSMVlUJCRUs8reTQf49IXIO+uM/un89MU7yZl0arHTu8rLeG7jevQ2x/sNR4/w7y2b+OnY
      4+c22J12/rTgV7z5xw/ZsiQXYQgGTujHLX+YS0ySs8N7fR4/tS2cxy1h6AZVJdXt3itJQYE/
      cudT1JbXYbKcOr+PLcrKr+c9yIp3XgM9nGBuZ1kpB6oqGZqaFprDuEtGMvbic6gpq8Xv1Ti6
      /xiHdhYiDEFa75STVtCxSU5+9PTN/OXmZ1s5u9P6pHD332/6Vsnazr9lKtuW7WTtx81KQFZk
      Lrv3AoZMHvitzONMxlmnABSTwkvb/hp2XfMHwvhoAv4Amq/1j8Xn8bc6GgY0PSzl3u/V0APB
      KAZhiFbON0M38Hma//Z7/CHeeEMXLSIvBO4WPw6v2xdkrDQEXnfzdb9XQ9f0xnGD89B8Gpo/
      0Ni3cTwh0AM6gqA9WAiCPDaNArJJTorQ363/H2kneyJoOsmoZrXDo3VteR3P//S/WGxmzFYz
      VoclqGRsJiw2C1a7BdWk4Ih1YLWbsUZZMYSBMy4aR4wdk1nF7rSzrHA/wuVHMsvBEAdASIAE
      GwqL0EbqqIoSPFV1IHCiYh3c+eQNaD4NIYKnk84IKKvDQkrPJI7sDa8J21mqaEmSTqsJTo2y
      IJmUiApAAJ5AOCWHJEkUHyjlqTtf5PDuIyCCn8lV91/MtQ9dcdJV4CZcNpq/LP4dy976ioqj
      VfQYlMEFt04lKSOh3SIv3wRsUVZ++fp9LHt7dTAM1KQw7tJRjVnep+YCbSps831GVx7AWYKA
      FgjRFXgbvLg9HlQpKIz1gB6iHQ4qq6DSEkKEFI/P7Q8pnyZFZegGXo8fv9ePrunouo6vwY+3
      wRtSPn5fMM1f82oIQPNqVJZUU1MWnob+TUAAwiwjFAnDqmBYFOxWCwMy0ohy2rE7bVgcQcXi
      iLHjiLFjdViJjnMQk+TEbDNjsZqx2M2YLCZs0TYsVlOHkTxNyF2Zx68u+GMYpfOkK8fy67d/
      2irOXAgRygP4piCE4NoP32VjhEItCTY7C667gZQ2iUu1FXXcNfznVBytanVdVmR+8dq9TLtu
      0mmfZyAQQNf17z2Vstvt5t133+WWW27p9D2GYdBQ68Ha+L591/j/T1J+z+F2u0MZpYqiEB0d
      jaIoqCY1VObPFmXF3GA6rclTW7ZsoW/fvtjtdjweDw5Hcxk+IUQjj79A13S2r8zjt5c+HnYS
      kGSJe565lRHTc/C5g4rF6/bha/Dj8/rxuX343I3X3D68DT689V48Hi+6T6e+1k3Ar7FrbT5e
      tx892oSkCxACSYDiDqDUB5Bkjd1H9iIMo1X2cSQoqhw0YZlUZFXGbDGhmJTQySQq1kF0fBTR
      8VHYHFZik53Ba3FROGLtXPvQFXz6wiKqjlVjtpiYet0kbv7D3NDn8m3SE0iSxAPjJvLDBR9T
      0yLyR5VlfjRqDMkR3oevv9gWJvwheJJd+NJisob1IjkzMWj2+w7KLp7JOJEwUGEINi3ezpuP
      fsCxgjLsTjszbjiXq+6/OEwR+P1+XK6geVGSJJxO5ze2qe06AXzP8PjjjxMbG0tycjLR0dHs
      27ePO++8M2zNpzt79rnnnuOyyy4jLi6O/Px8hg0b1q5A0AM6a+Zv5M0/fcjBHYdBBO2/1//m
      Ks67ZvwJORl9bh+f/utL8lbvRQhBWp9UPn3hS7wNPhr6x1AzPR1fdwdSwMBU7uXu4aOYMag/
      usePz6Phqfe0a95q4sJxuzzU1zTgbfBRV+HC7fLgqnLh92o01Lrxun14XF489Z6IsfZA0Ndi
      NxOXEovFZiY6PoqoWAchfjgRdBpabMGTSGySk5gkJzGJTuJSY3HGR2GNshKTGDR1ddb0Ulfp
      Yv4/P6NgRxFIwcSxrMuGUuStp8LtJtZiJTkqijHp3SN+XwteWsQzd7/c4TPSeqcwfvYobnl0
      bqdORsfD/48ngHlPL+TfD70ZdlqccPlo/u/Ve7G1SOr7/PPPWbVqFaNGjcJisVBWVsYFF1zQ
      bvWxZcuW0b9/f7p163bCazh7JeVZClmWmTlzJr1790bTND799FN0XWfPnj0kJCSQlpZGVVUV
      27Zt49xzz+XLL79k/PjxvPnmm1x++eXk5eUxffp0AJYuXcq4ceM4cOAAbrebwsJCXC4Xl19+
      OXFxcbhcLpYuXUpVVRV79uwJzaG6un0HJwSF4eQ54xh1wXBKC8oxDIOUHkkn7OgMaAH+fueL
      LH97TcRYbseeWmz76wjEWxAmGUtdgNnrbj8tXDZGI4VuQAtgBAwCgQClBeX8+uI/t6oDAJCQ
      Hs/0H0yiodZNTVktnnofNeW1HN1fgq4FzW+GbuD3Bf05bSHJQVbUJke+xWHBGR9NQrc4YpNj
      iEuOITYlhsT0eGISnaT0SMJit6D5NP58/T/Ytab5u1kzfyOT14zj/167t1MmhuFTc7BFWyNm
      Jjeh5GAp855ZSEa/blx4x/Sz6iQghBf0oyDcoGQgSTEhn9Lx0NkTgN+r8fFzn0es/rbuk00c
      3FEYlpA2duxYZs+ejRCCJ598ktraWlJSUti9ezfr168nNjaW888/nyNHjvD666/Tp08f0tLS
      uOaaazh69CirV68Oza+2tpZAIMDAgQPZuXMnBw4c4NJLL6Wurq5LAXzfYBgGX3zxBfHx8RQU
      FHDRRRdhNpvJy8ujb9++pKWlUV1dzfr165k0aRLvv/8+y5cvZ8SIETgcDpYtWxZSAMuXL2fY
      sGHs2LGD4uJibr/9doqLi3njjTe49957efLJJ5kzZw6XXHIJZWXBDFW3282KFSuYMuX44aS2
      KCs927Bgngi2Ld/FsrdWd9hHDgjMZUHhNXxaDmm9T09WsyxLyLKCosoc2F7A7vX72PDZljDh
      D1BTWsvEK8bSf3RWq+uGIfA2eKmrdOH3+ikvrsRfr1Ff20BteR215XVUllRTV+GitqIOV3UD
      dZUuygsrKTtcEaTQiIBg1FbQRNXW1yKEYOV7axkxYwgjZwwlKSOhQ4Gd3jeNO564gZceeC0U
      ZBAJwhCsX7iFC26f3ln5eMZDBPYhah8BbRMgQE6GqHuQ7HOhA2rvJjQlgh3vBODz+No9ORq6
      EcbXA7Bu3Tr8fj9HjhwhNTWVPn36kJeXx8KFC/nJT37C3r17eeGFF/jZz37Gueeey7hx4+jX
      rx8NDQ28+OKLPPbYY/h8Purr6zGZTMybN48BAwawePFiDhw4wMyZM8nNze1SAN83yLLMuHHj
      yMjIYM+ePSxbtqxDYVxdXc3vf/97MjIy2hUETXVdY2Nj0TQNTdOoqalBCMHgwYORJIno6FNL
      2joZ7FiV126b2WrCMJrJ4/qPzuL+l+866Rj2Jt56RZGD3EmSREAL8Nrv3uPDpxaERYu1hB7Q
      2b1+b5gCkGUJe7QNe7QNIQSJmfERncCGYaAHDIyAjh4IRnu5qlxUFged6eVHq3BV1VN5tIrK
      kmpKD5ej+YLO9vbwj7tfxmRWMdvMJKTFkdg9nvSsNOJSY0nrlUxq7xTikmPQAzquShc9B2dy
      aGchUbH2iBXKAIyATtCe9v3XAMKoR1T/GPSDzReNMkTdH0FOQbJOPe4Yqqp2KgfAEeMgvW8a
      VRE2D3anjfSscGbUnJwcpk2bRnFxMfPmzaOsrIx169Yxc+ZMLBYLgwYNYv78+TQ0tFYeZrOZ
      hIQE5s+fz9ChQ8nOzsYwDKqqqqiqqkLTNMaNG0d+fj5btmzpUgDfR8TExJCYmMjEiRNZvHgx
      lZXt87pkZGSQmZnZbnt7kGX5W0vWaQ8d2ZtHzhzGNb+8jNJDZcSnxdFvVFank+LaouRQKW8/
      Np+9mw9gtpiYPGccl9w9i/ULNvP+Xz8Jhfx2hJNN4ILG+rpmGRpJ+exOG3EpMWS2U4LTMIJR
      Wo/94BnWf7opYh89oKMHdLxuH3WVLg7tLORrWlMfmKwmZFlqxRJb1UGVsSHnDjp7zD/+1aBH
      OmFpCM+7SJbzQOrYD2MYBiUl7dN+NEGWJS65e1ZEXqxR5w+nW1Y49UZUVBTx8fHEx8ezd+9e
      cnNzsdlsuN3u0LP9fn+Yr8hkMvHrX/+awsJCNm3axKpVq7jrrrtITU1l/fr19OjRg2HDhrF+
      /XqOHTt25imA+qpiNm3NQzJZ0DwuYjMGcc7AHrjKClj1dR5OhxWPsDFl8ljMylnyMp4AhBDs
      3r0bl8tFZWUlgUCAxMREMjMzWblyJbqus2bNGjQt8o5VCMHatWtxuVzk5+dH7APgdDpxOp18
      +umnJCYmkpuby2WXXdZu/28C42eP4s0/fhBmO5UVmclXj2PAmL4MPMWKYSUHS3lw2iOUHW7O
      Wt29YR97Nu4n4A90SvhHxTkYOevbywaVGxP2pl8/ma8/39IYgdUx7E4b1z10Be46DxVHqzi6
      r4Q9G/ejtV1fOw5zs9WE2+VhzUcbSeuVgjMxGmdCNJZTUHzfKfQS2l2sXo5AQ6LjDYUQAr//
      +GU5hRCs+SiciBFg15o91JTWEp8W1+p6QUEB27dvx+v1snnzZu69915UVeWFF15AVVX27dvH
      0KFDsdvtZGdns2TJEurr6+nRowdLliwhKysLi8UScrRPnDiR3/72tzz//POkp6fz5JNPBgM5
      zrQooJrKMszRCdjNCogAH7z1ARdfdw2rP32fQefOJi3GwoFNSyiPzmFsv3DNebZHAR09epSj
      jXHeVquV7OxsrNZg5m9+fj5er5eePXtSVVVFr169KCwsbJWsUl1dzYEDB0hNTQ1G1aSlUVtb
      i8lkwul0omkalZWVpKam4vf72bNnD6qqEhsbS2JiIpIkUVpaSnp6+je+GxRC8MnzX/Kvn/+v
      WQlIMPtH5/PDv954ynHUQgie+8l/+PjZL8LaJFkiJtF53HwGW5SVnzx/B9Oun3zcZ53uPADN
      p/HvX73Fh88s6FQi31NfPcrgCf0BaKh1c0Ofe9olxOuWlUrl0Sp8Xn/Y2JIcpL2OS44hsXsC
      mQPSSc9KJXNAdzL6dSM+NS5kJYr0jpxMFFBLMXU63jvhXYaouZuIH5zlfOTYp497AtA0jfz8
      fAYPHtxhP7fLw22DfkrFkfBwW4AnFv2WEdOHhP6uqalh795giVRVVcnKysLpDGamu1wu9u7d
      i9PpJCsrC0mSEEKwf/9+XC4XOTk5uFwuDh06hNVqpX///iiKgt/vZ9++ffTv3x9Zljl06BDx
      8fFn3gkgNiHoxBPCoHjvVvSYdMwEqHbLJMUEX5huWb3Ysa4A+qUEC2W3MFUYhoHXe/oKiZ9p
      SEhIICEhodW1pvX27NkzdC05ORmfz0dKSkqrz8Nms7V6YQOBQChctKlfbGxs6N/Z2c077KbP
      OTExEZ/v22HynHXbefSfkMXmL7aj+QPkTB7AgDF90YWO7j21jFLNHyC/HdoQYYgOqRBm3Xoe
      3ft1Y9zskaRkJh33nWt6T0/3u3nTn65mzOwR7FiVhxAw728Lcbsil9D0+/2h5x9vHj975Yf0
      H51FbUUdR/eVcDjvKOVFFRTvL6XkQCl1FS6KDxyjYFdRGKtmbJKTbn1TyRrWi7TeKfTMySC+
      WxxxKTHYoqwYhoEQot16AS0hhGBHeRkf7cunxOWiZ2ws1wwYRA/nKZaAFKNQ5OEoxpbWl3Gg
      qT8A3/F39m63mw0bNpCVldVuHyEElS4XHb2pLb8XCG7shgwZ0qpPU7vJZGLQoEEArX6DGRnB
      YAtd17Hb7aE+TT49gD59+oT+3RQyesYpAABD9/P1yi856nNyycyJSMKLjpmmvEpJtWIEgh+I
      EKJVarlhGJhM332G3XcNXdfPms+he980snJ6nfZxFVnB7mx/R37JXTNZ+f46Du8qanV93CUj
      +fGzd4ToLzoLr9f7jXwnQyYOZMjEIK/Nwa2HW/HeNCG1VzK9BmWGnh+bGMPA8f3YEKH4S1qf
      FHoOyMBkMpGYlkBiWgJDJzdvGvSAQUNNAw21bo4dKuPovhIO7Szk6P5jFOwsoqHWzZ71+8hb
      G9zFIgVrUkTHO0jtlULW8J70yskks393Mgd0x2RRQ1nTAX+AypJqFFUhLjmGpUWH+L8li6jX
      ggJ55WH4bN9enrvwEoannkpZSRNS/FNQ/3fwLQahg9oLKeoBTKaRnRohOjqamTNntvudbjtW
      wj83rmd/VRXVN/bAttFKzIoS5ECz4kvKSCBrWO/v7Ld6xikA3d/AZ/M+JHXoFC4fkIEECGHF
      IvvwG2CRIeCuQ7UHOVRkWcZsbrZDBgIBFOXUSr2dLTibPodvYi2KojBl7gS2LtsRxlrqTIjm
      gtunceHt03n78fnsXr83yCNzyUhm33sBlhOMNmrKCv6mv5M7n7yBI/nFFO5ppoOwO+3c88yt
      xCXHtup7119vpHhfCUX5zXxGjlg79z5zK7FJ7XMUKYqCOSWWuJRYumd3Y+SsYa3aq0qqObz7
      CMUHSjmYe5iD2wuoKa/j2MFSSgsq2L68udqaxWYmY0A6WcN6kZSRwMr31gYZUiXoMyGb7T/o
      HhL+TSh3u3ls9Uo+vPq6UzQHpUHskwijAfAhyXGcSISTz+djyZIlEcNAd5Qe46aP5+Fu8sUl
      WfBclImWaCXp3YNIImg+/NFTt5DYLf4U1nBqOON8AAe3LGN/oDszRvVtRTWwfsknxA2cTL80
      J1tWLMTW7zwGpoczNp7tPoDO4puqo/td4Jtci+YP8K+fv87ClxejNfoZ4lNjue/5O5hw2Wgg
      +P5pvgCyLIVCRE8UnfEBCCEoPlDKqg/WUVlcTa/BmZx79TgcMfZOP1MIQXVpLUteX0nBriIS
      0+M575oJrYrNt+27+H8rOZxXRGJ6AkNnDyfX7OZwTQ3dnU4uzu5HiiPqlAStoRt4GrzUltdR
      fOAYh/OOsHfzAQ5sO0zFkUo0nxYxSUq3KVRdkIG/mx1/mh3DLEMjtbpFUVh72w+Js4XXXPi2
      4Pf72bJlC2PHjm11XQjBXQs+ZvHBA2H3SJrBxbtkclJSOe+a8fQZ1vM7jaw64xTAjnWLOdpg
      xmEJftFmeyzDh+cga/Vs3rQFny6ISsxk+MBeEXV1lwIIoksBdB6GYXBgWwH5Xx/A6rAwfFoO
      CW2iMk4VnVEAmxdv54/XPNUqMajPsJ78fv4v2q/gdRqRX1HB3Qs/pqCmOV49NSqK5y68lOFp
      p2JuaY2WTuC6ShflRZW89OBrbF3Wfn1dwyzjT7XhT7Pjy4iCHk4W/PSHdE//5j+X9uD1evnq
      q6/CsoEb/H5mv/MGB9vJmP/rzPO5YsCgb2OKYRBCUF/dgGpRg8y738ksOkDOuBlELNNgiWLM
      hI4jLbrQhZOBLMv0HdGbviN6f2dzqKt08c97/x2WFXpgWwH/+fVb/PL1+77RnaIQgj+sXNZK
      +AMcq6/nkRVLeXfOXKzfwMbKmdAYThoh50MAngGxSH4DU6kHc4kHa2EDbChHqBI//d8vyeyf
      zqAJ/eg/ui99R/TGmRB90vkgJwohRBgtiiEEVR4P7W2rJSDW+u2fWoQQ7F6/j/889BaHdhai
      qDLjZo868xRAF7rw/yMKdx9pt5bw1mU78dZ7WxGGnW7U+XxsPHokYtvOslJK6+vpERsbsf10
      IFIdYgmQ3QEqfzgQPwZqhRdLsZu+FTJpdXBg+2F2fLU7lGBltplJ75tKn6E9GTFtCL2GZJI1
      7PQHDzTBZDK1ygT2BgI8vX4tb+Zuo6GdPJzecfGck3bipG2nikM7C3n4sieoLa8LXfvsX0u6
      FEAXunAmIFIylwB8PaMoGJPIg8sWcU5md2b3G0C87dSqh0V8vhDtphIIQBffbFb4hbdNY/nb
      a8LyLnrKdv499wesqS7hqMtFr9g4Lsnuh11W8dR7ObC9gNyVeezdfJBDOw5zZE8xh3ILWfL6
      KlSzSkJaHNkjezP0vMH0H51FWu8UouNPzafRBL/fz9q1a+nXL0jk9tKmjby8+euIn6ME9E1I
      5K8zz+90zerTBSEE855e2Er4h+Z1pvkAThVdPoAgunwAZxaO5wOoOlbDj0b+H5XFzclCdaOT
      qLiyJ6JFLev+iUm8dtmVJJ3mz0MIwaVvv8Gu8rKwtl6xcXx63Q3YT1OoYqREMCEEuSvzePa+
      f1OwswhJkhg0oR/3/ONW+gztnKPU7fJQlF/M/i0HyVu3lz0b91O4u/lUo6gySd0T6Dcqi8GT
      BjB4Yn965/Q46cpggUCAo0eP0qNHD/y6zrn/fYXShsiJdU9Mn8WsrCyclm9X+EMwtPbBqY+w
      a2145n+XAjhLcTYIzSacDWs5ngIQQrDinTX87Y4X8Ln9aHFmjtyfgxEVLnSvHjSYP0+bedpP
      AZuLj3LPZ59S1oJgLNZq5alZFzK5x+mLVmkvE1iIIAV3dWktiirjTHSinKRwbhqrvKiSvPV7
      2fHVbvLW5lN8sBRvfTCHSFZkErrFMWhCf0bNGkb/0Vmk9EzuNL2F2+3mgw8+4MYbb6TS7ebc
      V19pDvtsg/fmzGVkt/STWsupwjAM/jDnb6yZH05H0SUpu9CFMwCSJHHe3Akkdk9g6Vtfsdld
      SaEj8s9zU/FRvIEAtpPYkbfd77UU6iPSuvHmFVfz9s7cUBjoVQMHMTAp+VsJVZQkCUVVSEw/
      ubh4IQSuqnpWz99IeVEF3ft1Y9IVY5gydwJTr51IQAtQcrCMg9sL2L5yF1sW51J8sJQV76xh
      xTtrMFtNZPRPZ8CYvoy9ZCSDJ/bHHmVrNyNcURR69Qr6GGKsVhJsdtxaOHWI3WQitU0pzm8T
      siwz88bz2LBgM4E29Si6TgBnKc6GXXMTzoa1nCgX0KID+7hrwScR23rHxfHptTeEKQA9oOOp
      92KLsraqR9yE+poGvvjPsmBxdLPK+NmjOHfOuIgU2pqu4w0EcJjNyKdZ+H9TFcHyNx3gkcv/
      0qrEZdbwXvzuwwdJ7RleJ8IwgieELUty2bpsB3s27g8WMGosZSorMoMn9mf0BcMZNjWHzP7d
      kK0mNEPHYTLj9/tZt24d5513HgDv7drBb5YtIdCGRffW4SN4aNJ5p/1zPBE08Wq98egHQT+L
      RNC01qUAzk6cDUKzCWfDWk5UARS76pj99ptUetxhbdcOHsIfpzZX5jJ0gxXvruHDpxdSU15L
      XEosV91/CZOvHBuyb9fXNPDHa/7O5sW5oXFkWeKC26fx42dvDykMTdd5ddsW5u3Jo97nJzM2
      hh+PHtduScmTwTehALwNXh6c9vuI3E6T54zjN+/8rMP5CyGor2mg7HAFX3+xle0r89ixKg+/
      V0MIgWpSSOqRhK9vDHVZ0fScmMUdo0eS99VXXH/99cF1GQYf5u0s7hIDAAAgAElEQVTknxvX
      U+Xx4DCZuHpQDveOHntSp7XTDSEElcXVHNlbjMVmJnNg9y4FcLbibBCaTTgb1nIybKDzd+fx
      m2VL8ASa7cqDkpL572VXkGh3hMb95PkveOFnr7aKJFJUhXv/eRsX3Rms/vbB3xfwr5//L+Jz
      mtgoDSH406oV/Hdba4I0q6ryyqWXMz6j83Ul9IDO7g37KDlQSkK3OAaMzcYWFXSAfhMK4NDO
      Qn449IFQ/L2QwJ9qx9/Njl1ReeuzP5Ia3z69RSTUVbrYuXoPm5bmMv/DVSilbqTGj1i3KlgH
      J3PxZSPpM34wfXN60Cs+PlhIyDCo8XpwWqyYz3A6li5J2YUunKGY3X8AWfHxLNy3lyqPm5zk
      VC7p14+YFpEkPrefN/80LyyMVA/ovPHo+8y6+TxUs0ruyl1thw9h+4pdjJg+hIPVVby3a0dY
      uzcQ4B8b1jG2e0ZEM4ahG+i6gdpIk1FX5eLpO19i3YLNoYpt2ef05qG3fkpa7/B4/9MBzRdA
      iGDIqlAlqi7JpG5MMsKigICr573LxXUxjO/Vk9EXDO9U5ThnQjTjZ49CDE/m2YwqpGof9l3V
      2PfUYClqwLvpCM9/vYEUS08sGTGcf80kLr32PFJ6JJEYdWZvWAKaztalXSUhu9CFMxayJJGT
      kkpOSmq7fSqLqyLWKQ62VVN1rIbkzESUDphL1cZKZAU1Ne0mMB2uqaHe72sVxmgYBl99sJ4l
      b35FXaWLXoMzuOInF/HRs1/w1bwNzf10gz0b9/P3O1/kT5/+CtnUHNnj0TS8gQCxVuspmZjS
      eiUTMzqDfb1N+Lo78HezNxd3l+BIg4tXasr54saPmHrRaB789486lTFcfqSSdz5cQcAsQ4qN
      2hQbtVPSUFwalgIX6g4n+n4N7UA1nz72CQufWEBa7xSGTR3MeVePZ9D4fqdct+J0Q/Np/OsX
      r/PRs593KYAudOH7DEesA9WsEvAHwtpUs4ojJmhyGnfpKNZ+/HUY66lqUhhz0QggGPIpSxJG
      BKuww2zCqjYLMmEI3vvLx7z68Duh00fe2nzWfrKJhtpwvwVA7so8Sg6VkZ6dSo3Xywvr1vD5
      vr34dZ3ecXHcP24C4zPCSes6g32+OvZf3xNXwN8s+NsgEG/Bk+Vk1fvrGDyxP7PvOb/DZ5Uf
      qeSXsx5ll8MH1/VpoVAkdKeZ+gFOPMYR6q8YgqWoAdueGuLyXZQeLmfhS4v5/JWlxKfFMfbi
      c5h05Viyz+mNI8aOT9cpqq2h3u8nIyaWhG8gsa8jbPhsC588/yWILhNQF7rwvYYzPorxs0ex
      6v11YW2TrhyLwxlkEp1y9Xh2rd7D5/9eGmpXTSo3/f5qsoYHQxkHJCYxODmF3NJjYWPN7jeg
      lT275FAp7z75cZjpqb3TCARPAg21bgKGwa+WLWZF4eFQ29ZjJdy14GNev2IOw06Q518IwV/X
      rqZO19oV/kBQcNtVhBB8/flWLr17FlI7ZWWFEHz41AIKdx/F7lBR6jT0GHOb4STk6GgMm4on
      OwZPdgwD0jP4ZfpQtizOZc38jRzMPcyCFxex4MVFpPVOJmfqYPIyZVbbXeiKRKLdzg/PGcWt
      w8/51pTAhoVbQpFOZ50CMIRgbVFh2HW7yYR0Alzf7cFuUk/6i1Jl+YRmoMhyp+YsyxJtR/Z4
      PNS32MkpsnTcMDRVlmmPD72juatyeLKOJEkRr3fhxFBRUUFMTEy7BUNkReaeZ27F2+Bj8+Lt
      6JqOalIYdf5wfvTUzaEYdrPNzH3P38HkOWNDYaBjLzqHvuf0DhUWd5jN/H3WBfz0i4XklZdj
      CIFNVZndfyB3nNO6SErBriLqqxvC5tMRYhKjSe2VxJZjJXwV4TfaoGm8uGkjz190acR3tcbr
      4ZP8PWwpKSbabOGi7GxGdetOvd9PfkVFWP8wBAwsxcHTia53TG0R0HR2rw8WtFEaAqS8vo/y
      Ob3Rkq2tTgKyubVSGJKWxsCx2Qwcm83c/7uM4gPHWD1vI+s+/ZpDO4tY9MoyhATdo000DIqj
      /pxEnqheTkpUFBdn9z/+Gk4DjBZrP+sUgG4YXD/v/e96GhFxohEBJlnpcEPTBFWWUdrUL20q
      QNIERZbC+kSaX3vPC84lvFEi8rrkdhSAzWQK+3GrsoxFaf0qWlQldH9TZJddNbWag1lRMMlK
      q3uUFs+0qmpozYostWKztChqaHyTomBq/Lcqy5gb+1mU5jlIjXNvO65ZUXjmqaeIjXHy47t/
      hCRJbNu2jYqKCqZPnx62/hPFiy++yM0330z37t3b7ROXEsMFt04l/+v91JbXERUXxQW3TyMm
      qXW9DNWkMHLmMEbOHNbOSEGysreuvIYdpaVUe930io0jOyERnx6gvKGBBLsdWZI6zJY1WVSQ
      pFB9BQhuCK68/xLikmM5tLMQvZ3gw8M1NfgiJLnVeL3c9vF8th5rJsx7P28nPx8/kWtzhnZq
      sxG1rRJLYZCqYei5Azss+SnLUitHse2Ai/R/7MSXGYVhUdAv7EVZrMBfWoolI/jdZMbEcF3O
      0NA7arKY6DEwg4SsFEomJ7Fx0ToCW48RlVuF+aibmHVlONeVoSVZeX+9m14PzmXQ+H7HXcep
      YtjUwSx6bQVwFiaCef1+7vl8Qdh1t6Z1pm72ceHRtIg20s5AMzpfw1aIzvfXDRE2JyEMpBYC
      XxcGutHxvDt6nqYbRKILEwICEe4zhGj3R34moj1R0N5pr+XVplrJiqyABCYAIbBYLCFBZlNV
      EIQSqyRJwm4yISNhMwUVjlU1YVJkbGpQSdpMKuvWrWf08OFER0fjMJlQZQWLGlRYZkXFZjJx
      YMtB3n7kA3SPH0kzQBeYzSbu/utNnDMtJ6jUGpW0SVYwKTKyJGOSZUzH2ZSUNzTw59Ur+Xz/
      PgK6TndnDA+Mn8DkhHR+Ouk3FO0pDrtnzgOXMur8Ybz153mUF1XgTHBy0Z3TmXnjeUiyxKID
      +7l7wccRf4+DkpJ5YPxEzIpCv4REEux2hBD8efUqXtmyKay/TVX5+NrreXXrFt7amRvWbpdV
      RLEL29dlxKw6hhwQjJg+hIffux9HbPuROkIIPn1xEc/++N9hfhNHrJ2/bniMD47tY96WzcTE
      xTMkJZX7x02gW3R0qFB7ZXE1B/cc4ZnK3awrOdI0MAgwlXqIyq3CsaMKc6kHKRCsQd17SA/O
      vXo84y4+h8wB3U+ap6gj+Dw+/nb7iyx/e/XZpwDO5DwAv34iCkCEZRS2h4BhhCkAj8eDrUW1
      JF2E92mL9oQ8gGYYRGoSCLQIx2lB5PlHUqABQ+DTWzsx/YFA8JmA3+/DbLY0KvHme/26HuoD
      4AsEWj3TFwiEWCwNIfBozc/wtmjz6zpa43cTMAx8jf9uOZ5A4G68P9gnEJpnXX0DZqsFt9+P
      LMshugVJktANI2RiMRr/3fYn13RaO20/RF2AEKiSjMVqxqTIwRMcwdOOKssosoQqNykSBZOi
      4DCZsJlM2FQVVQ7+vamkOMwnYFYUfjt5Ctruct54+D20ajey30DWDIaNH8Bv3vkZ0XFRCEPg
      c/uw2MwoqhJSmrUeD1e+9zaHasP9BS2d0JkxMTxy3lTGdc/kmg/ejeibAHh8+kym9OzNjz9f
      0IrSOtnh4OkZF+LfVsLaDzbg92rkTB7IjBsmE9WB8G+C3+Pn6bv/xZI3VoWUgN1p477n7mDq
      dRNxu928+c47XH/jjdhUNST4BbD8rdW89PP/cSRJ4tgt2e37JjQDc6mHnAIDR24VxftLEAIs
      djN9hvWix8WDCQxLIiszlQuzs7EoJ2+Cbgmf28eyLgVw9uJsSJ5qwpm+lgceeIBHH32U//73
      v4wbN46K2lpKjh1jxowZPP63v/Lrh36NNxDg8b88wZ133cVnX35J37596dWvH9XV1bw3bx7X
      X389Pl0nYBi4NT/z5s9n+vnns3TpMoacMwJnTAweTUPTdXyNis+vB6iscrHxi60YZjnIGiqD
      UGSQgvHwqX3TkE0yvkBQqfl1Hb+uowsDrY0CPV2wqcGTSZTZjE0NKpQoiwWbqhJtsWBXVUpc
      LlYcLjjuKTHabOb1K+bw22VL2FFWGrHPE9NnMWfQYDRdZ+XhQ+ytrCTFEcW03r1PufiKYRjs
      WptP3tp8rA4rYy85h2o7vLljO4cqK9GrqvnlpbMZkpJKpdvNO7t2sL7gMHnL8rCsP4a3VzS1
      5x3fqT22ewY/GT0WdU81H7+2jFWfbUKt8SMBhkXG3T+W7hcM5Ml7rqVnejitxcmiS1J2oQun
      CVdffTXPPPMMU6ZMwSJJeGprqSws4pN33gGg4Wgx8UikyAq9o52M7JaOJy6edYZgXLd03n33
      XVwuFyaTiejCI1w3KIeSLxZxff+B7foAqktrmHv9B60ce0IGkJAtCv879GPsMfagmU4ET3IB
      YYROmAHDaDwBGTRofjyaRoPfT5m7geUFh1gXwVkLwaCKwckpCCGo8/vwaAFcPh9+XUcgQuMI
      gklpuiGCdjOJjiN12sDl93Nry+LqbSBLEvurKvkgbydxVhvRZgszevchwe5AlRXcmoYiBQMg
      ZElq5SPqDGRZJmfiAHImDgBgXVEh981bQKXHg6FpePL3stsI8OtJ5/G/3K3sKmuk0x7ghOwo
      FFfkebfF+iNF7Cg9xuPTZxG4ZRBHBviwFriI/roC++4aHNurqM5dzS/f2cOMuZOYMncCmQPS
      UU3ti3AhBD5dp7S+HlWWSXI4wvx1XQqgC104TUhMTKRPnz6sW7eOrKws4uLiGDBgALfddhuS
      JHH11VcT1YYVsri4GLvdzpEjRygtLeXBBx9E13UOHTrUqWc6E6IZc9EI1n3SbB8P0hUIJlxw
      DsmJscgdODvbotLt5ncrlrL4wP4OTwc5ySm8ccWcMIHapFB8gaBCWLdoK68/9iE1DR6ESQKn
      BfW6QRQJT+iepgiz9p7n8vkj+pkgaNp7OYJvAIJOfLvJRLzNjsNkIsZqJc4WVBJxNhvxVhvx
      dhsJNjs2k4k4qxWzopJgt7XKeWhCsGzmcio9wblLjVFAdT4f/7fky/AJKHIwdFSITim9Bk3j
      sa9W4PL7MaJMuAfH4x4cj1rhxb67hqgtFVQUVfLO4/N59y8fMWBsNlOun8ToWcPo1qt1hrUQ
      gpWHC3h01XIOVVcjAcPTuvHIeVMZ1ILdtUsBdKELp4joRsefJElcddVVXH/99QwePJi4uDhG
      jhzJU089RXR0NIFAgJtuuinI3/PJJ2zevJmamhpuuukmnE4nfr+fl19+GWj2C0RFRaF04KhV
      VIV7nr6VugoXuzfsw9ANZEVm0IT+3P3UzSck/P26zq+WLmLJwQMd9lMkiRuGDou4m1ZlGVWW
      sZtMVO8v4/17X8dX4aLJEFM3NpkS3Q0t5nU8X9evJk1mRu8sXH4fm4uL2VFWisNkIt3pxK1p
      1Pm8NPg1qjxuXH4fdT4/lW43Pj3owympd6EbgoCht2tyUmW5MbpLwqqasJlU4qw2kh0O4m12
      Eu1BJZFf2SLcVJJQOkHzbN1Xhz/djuE4fkZwSX14QZlAopW6SanUjU/GesRNys46+PoYu9YF
      TVOvJUQx+YqxTJk7IZR5vKu8jPu/+IwaX7D2gQC2lBRz94JP+GjuD0ho5KTq8gGcpTjT7eYn
      grNhLS3J4F555RWGDRvGyJEjj39jJ+Hz+Nm+chdlhytI6ZnE0HMHYbaeGAVBbukx5rz3doc7
      /yS7g7tHjeamocOP64x84f5Xmff0wtDfQoaiB4egpXWeEK/ppBF9EsRxvkCAer8fl8+HO6Dh
      8vmo8Xqp8/mo9Lip9Xqp8nio9Lhp8PuprN9LnV9Q5zfj1Y//2Rl+Pw25O4geeU77nYQgfmER
      gTgzdRPap/RoggT0iovjYJti8y3bBYBm4NhZRdTWSuz5tcj+4Hc2cFw2Ey4fw6aegg+OhjOj
      Ajxy3lRuHDoc6DoBdKEL3zqio6NPOxe+xWZm9PnDT2mM0vr6doV/vM3GixfNpm9CAk6LpVOR
      KMcOtS4vaVgVjHaK3LRFjMXKjD59uH/cBKLMnavQ1RYWVcWiqqHdbnsQQqD7d+Erf5SAEAQM
      Ga+uUuOzUua1U8XFVOgTqPR4WH7oIAeqg/UGJFXF3v/4yVvVM9MR7WQct0X/xCR+d+4Ubv/0
      I+r9/lZtMRYLfl3HEwiASUY7J5boSTIJtWZq1miomwLs2bifvHV7wWEiuZ+Tugmp+LrbW5UV
      PVRdzaGaaird7i4F0IUufNu45pprvuspRERadDRmRYkYrpwaFc3wtLQTcqJ269N6xyt7dZT6
      ALrz+AJ9mhHP6B0a+115xJ4/DKv99CrMlpAkCUX7CpvaUuD6SLM3MIBKsOxBiv0JkiQzZ+Bg
      7l74MQerqxGBAO49e+g/ZQq/mjSZ+Xt2s7SF+cysKPSOi6Pe76fY5epU/lC118PTG9ZF/A6G
      pKRxqKaKI3V1dHfU8adRqxiTVIwqC6qvtFKrXUX53gtZ9OpKvv5iG2ypJGprJf50B3Vjk2jI
      iUd3mlm4L5+3d+bi1/UuE9DZirPBbNKEs2EtJ1MP4NuGpuv87MvP+Gzf3lbXVVnmyRnnM7v/
      gBMar3D3UX4+7RGqWvADuUYmUja3N3SU4KQbpD+3G+shF5Ik0WdYT37z7v2kZx3fhHKyMOqf
      g/pnIrZtqcxCjvsXI7p1D5ad9PtYsDefgspK4hvczJkylXibDc0w+OpwAZuKj+Iwm5nVJ4se
      sXEYQnDzRx+2ylFogkVR6BkbR4Pmx61p1Pv97eYLNWXQG0Iwtdthzk0rpLvDRYajjmiTnyhT
      AHv8IwjLlWzefYhf/vYVtA1HMZd6QIDhUGkYHIdrVBLeHlGgyl0K4GzF2SA0m3A2rOX7oAAg
      yLfzx1UrWLA3H7+uk2R3cN+YccwdnHPCIZRCCHatyecf977CodzDSJLEwEn96f3rqbx+KC8U
      TdMWjq0VpLy+H6mFZBp94Qh+9cZ9+L0acSkxJ50Mpfk06irrcSZGYzI3ywnh34youjbCGuAv
      uWNYUTaN9+bMJcbaTIft9XpZvHgxl1xyyXGfu66okNs/mR8037RA9801vHzfzaQP6Y7L56Ow
      tpYfLviYOp+v02tSJZ04i5c4i5cEmwPF3I+yhnqKXS7c9V5se2qI3lyBfWc1kiEwVAl/mp26
      8SldCuBsxdkgNJtwNqzl+6IAIDjXYHSNj0S7PRimeZICVwiBMAS1FXXIskx0QhS6rgczqAMB
      Ktxu/rX5a3ZXlCFpgup3colZVYKstRFLUjDiydANuvVJ5bbHrmPiFWM6nJce0Dm0o5Cyogri
      kmPY8NkWPnr2c9x1HhwxdmbffzHpM/sTiDbRMyGWPqZXkD1vIEt649zhq2MZ3Ld2OvUBM4/2
      HcN1F0wIPdPj8bBo0SJmz5593M/BU+/l1qseZUcPCS3RiuwJEL2xHOe6MgaO6csza/6EJElo
      us6sN16loCY8S1qVZZ6adSFWkUtR2VsUuGI40hDNkYZo6vwWavyWiM5rRZJIdkThrA5wbM1B
      zMfcmEs8KC5/lw+gC13oQmtIkoTDbMZxks7XtmNJikRcSmzommEYqLJMWnQ0adHR/OOCi/Bo
      GlVHq7nlji8iDyRA14KC+ei+Ep646VmciU6GnjswYveG2gb++eP/sOr9dWg+DVmWMFpw+tTo
      fp4szsXz1SFQZCyKwozeA7EbFzEqcTcWWWdDeTc+LuhLfSAYy/+vh9+ivxrNOTOHAqCqKr16
      9erU51BeVEHFor2kAsIsIwWMUHnJvZsP4qquxxkfjUlRmDNwME+uXR02xuj07kzr3QeL4UHE
      7AWCSWZ+Xcalman1W1he3IM/bx9LS7YqXQiO1bsoMQFNWcmGQPYEuhRAF7rQhe8WkiRhN5sx
      d08grXcKJQcjUz60hM/t44O/fULOpP4hrqWWeOWXb7L0jVWhv1sKf6FIlM/tgye7uUawT9dZ
      sO8gEmm8dyCcukHy6VBcz7t/+Zjh03KQFRlN09i8eTNDhgzp1BqRQEZgt2r4PBIBo5lptuVJ
      5rYRI6n1eXlrRy71fj+qLDMmvTt/m3VBkNFWDEZYZ4D3MwDMikGC4iXKpLHqWAaRqA1zUlK5
      fcQ5LD5wgC/255EdV4lLM3cpgC50oQtnBhRV4dbHruNvtz6P1318G3h5USWaV8PSJkLI5/Gz
      7K3wHXQTtHgL7mxnxDZZknCYzNT5vK2yd4VJoeS2fuRWSVS66kmKdWKxWJgxY0an1paUkcCl
      tzuZdP4WUjP9uF0KS96PY97LiQwcP7AVOZ1ZUfjFhMn8IGcYR+rqiLdZ6Rkbh6XJtC2pSM7f
      I+R48CwEfKCk8+T2IawpTYj4/N3lZeQkpzK9dx+uyvySUbGL8OjqmasAasuPIexxxIbqdgoq
      jx2htMZDRo+eRHfAR96FLnTh+wdJkjh3zjhik5zM/+fnVBypRJYl8jcdCKNkBohPi41Yb7eh
      1o3P4w+73gTDobYbhWRRVR7KHsmf//cJDZkOAgmWoCJQJAKJVvYmwi9WLOHlSy/D7/OxePFi
      brnlFqo9HjYVH6XO56N/YiIDkpKQG+nYa31e6txLuef3G4EmxaZx+29L6DHASt/JN4f5MmRJ
      IiMmhoyYGCJBkmOQnA8jon8Bwo0kxdIjZRvsWR6xv2YY/OSLBTw6qRsTEpYCBmbFzxlXsing
      dbHisw945ZXX2H00mHCBEBTu2sCmfWUkxdpZuegLqj2dp1buQhfOVhQWFvL888/jaYyo0TSN
      JUuWYBgGx44dY+nSpccZ4cyCJEkMmzKY333wAE+t+gNPLH6YPkN7hvVTzSqX3D0rIl9+TJKT
      hPT4iOMLGQKxZminNkZqVDQXjx3GuQdlbAddEft8VVjAuqJCVFVl0KBBfH30CFe8+xZ3LfiY
      ny/+gjnvv8PDy5ei6Tq7ykqZ895blJY+QbPwb8aMOaX06rsLISKTxgUMnRUFh/jjquU8umo5
      KwoOtqrbIUlWkOLQDMGcQTl0i46OOA7ArrISCov/TpPvAEB55JFHHmn3ju8A3uoSai3p9I8X
      +KO7kZEQjQC+WrWGidOmEx8TQ7xay5ZCH30ifMlGC/71/5+haRrm0+DEOxNwtqwlEAi0W9rx
      ZJGbm8vrr79OfHw82dnZeL1e/vvf/zJ16tRQ3YGkpKTT+sxThWEE2Ug7itaTJAlFVTBZTAyf
      Opii/GJKC8oQAhLT47n9ieuZMndCxCggWZaIirWz8bMtrW3/ElRdmEHl7J4QITPXJCs8fO4U
      BqelkjN1EJ9WF+FSItW6CNZPHpKUzLptW/nzrlwKa2tD7QHDYEdZKWZF5vmvN3KsrpgfDdyM
      wxQIGws08C0CUQvmcUhSc8aupus8vnoVf1i5jK3HSth2rIRP8vdQ5/MxPiMTRZYpra/nmY3r
      eG7jBj7bl0+U2cyx+vqItSXSHS5+O3w1qtzcesaZgOxJPRmZBHnlO5svCh/ugIUoc1CwR6Wk
      Ur+nCMjCMAwCLWJrDcOPXDnttM5JSGZOz0dlRkgnO44F6HxJSTNWNHcnFKGkNI7dERSQOu4j
      aD+8UUjttSmANWKLkJp53GUBXj+AmcZ6Wy2eq4LUVqiGjxs+BwURWpMEtOWNVwg50yQJWh2W
      W7bJEdqa0GSzlQAFwzBoaNDb9D81+Hw+zj//fBYvXszo0aODoYSahtvtpr6+nsLCQjIzM6mo
      qGD58uX4/X4mT55MYmIiS5Ysobq6mvj4eGbMmIHZbObzzz9n0qRJvP3220ybNg2Xy8XOncHf
      4qRJk+jRowdCCDZs2MDevXuJioqiT58+5OTksHLlSqZMmQLAkiVLmDhxIoFAgEWLFlFfX09a
      WhpTpkwJkdsFApEEYjhiuzn51Ts/prKkGm+9j6SMBOxOG263u917xl85CkmFD/+2kJqyOqLj
      HTim9OLTXv5WRHRN6BYVzS/Gjue89O40NDTgTHTQu3cqR9uhw45SVBoaGliRv4eiCGYogGc3
      bkDTdVRZxR0wA5HzHkCA+y18Yhi62iy7VhQW8Nr2ra2EuQBez93GiORkBicl88PPF7K/kZqi
      Ce1lcyda3VjV1tfPOAUQGQLRqjy6BI3VnCRJasOWKIOITKR0spBOY6bEqdfy6cK3AxPN35bc
      WslIZpqFuNqoRJtgadOv6X4zhqEjy2Zo2gRILZS6ZA8+T2pUcpJMSIlJ5sbny9CoGCXJCih0
      TzyMlWqGD0zi0J5/kzNkBP17V+Mw7aZer+LYkZVY1Uw+fO8FrrjyapKTu1PncmM2BRg/fjTd
      u/fko48+YuXKlVx66aUsWbKEbdu20a9fP9LT06msrOTmm2+mtraWJ598kscff5ylS5dy+PBh
      br31VrZt28bGjRsZNWoUGzdu5OKLLwZgw4YNTJ48GVVVmTZtGikpKbzyyivs3LmTMWPGoOv6
      ifEhOSAmLrI9vD3MvH4K0+ZOxu3yYIuy8eT61dAOdfTI9HQuHTS41bWrBuWw9khRGINokt3B
      rH79iFZNZGZnIw5Hpu5uEsKaofDR4b78dHDkZwdhYGY9suPS0JX1JSUR6SMMIVhfUsLu6qow
      4d/yuW1R7nHgCajY1GbF+/1QAJIFu+rHHRA4VAlPZTm2xGBVnLYKQAgTUvK20zwBP4jO7VY6
      hu/kxxE+oPP3ej3VWK2dMJsInUi2ybA+wnucPg0dtLW3U2t/XNFivICmoZpMIDSgjXNPBEC0
      dfhFGLft/IQv2A8AA0Sb3ZkI0FwDU7To27ZNaxyrqa2uecyme4RAEAiqE91obDs1ND09OzX4
      X0hOeP7LrVcIqF1HikniugsEVH/CvdcZqMpSqJewShJ4JKLMQLnExWNktABQ+TQP31OBzZ5I
      bGw+8AVxiTZwm0gwmZl74R5w/R6HsZkbrzwXk/YymYnVePsWIfnmMbRfAcK7CCQ7PdJKUUQe
      MdGJrM7dwGef7udo4VF6ZjrAyEISMsKwByNaQgrv9ENRFSdPNYkAACAASURBVKLjgpTNHVUf
      i1Qv+6LsfhyureGVLZtCmbl94uL507QZxNvsuN1uKvP3YnFYQ2VEW2JgUhKHa2pp0Py8vGco
      ydYGLu+5r5UAbo3W70VH8/XrOltLStptj4QSt4PPjwzmip7N8vF7oQAkJAb0SuHr7XuZODid
      ddsOMmJae9l3EpJ8urMtz/zszbYw/A1I5u9v9mzLk5LW0ID5284EFhpNYlZgNP7dhAChH6vQ
      aa0cmpSRQUhhC4GEhtfrDSrlpk1ASyUUUlCNykgYLZSYv/H5BqJJUQkvoFN6rID6ehd9enfD
      7/Oya9c2bDaVftm98PnqqSgvpltaMhXlRaSmJjY+R+D31aKqAhkdVQFVAYwG0pIBSiDQWrhI
      wPABgLeAccMA/z7wQ4oDUoYB9Su4fBqImvUA3DEH8H+FqBSM6SszYYCFQAAMtiPVvISCKWha
      lUxBU5xkJXjyiQqehmQbSA6QHEiSI3hNsgdPQJIN5OjgPVI0SFFI8vHfD0cH/heHObxNliR+
      NGoMF2f3Y19lJTaTicHJyaEykxaLhfuuvQ41P4/383a1ujfabObJGRfw4e5d/GfrZny6yiOb
      J7GjOpnHRq6MWB9GMo9r9ff4jAzeiVDoHmBCZiYf79l9vCW3wjndMhiSdTWY/wfuDwDPmacA
      yg7vJb+wFCQnlO5nTXUxw4YPJ2vEZKIO57NhSx5jpl1MfPTpdaZ1oQut0MLkI0GjgDp5CCEQ
      igfJdGqbibZy40Duag4fPkzf4ddhAT54+iGKiop49dX/UHakiHe/eJdf/OIXfPbJv4mLiyMx
      MZH4+HgKDh2irLycfv36sWb1clJS4rnh+qt5+OGH+OOjD/H/2rvzqDiuO9Hj36rqFbppoNn3
      VSza0ILRLmvxKu92nDgTj+2MsziTM0nem2SSvEyePdneS5yXZY4zmTjJTBYncRzZkTfZlhcp
      kiXLEtpBSAgEYgcBTdM0vdTy/miEQJYltAKt+zmHI3V3ddW9RVG/qntv3R9GmOHhAf7rVz9j
      3rxZdHY0097WyGc/8xDB4BAvbvgjeXlZ9J7sICXZwcKFs6g5uA+fr4f4OAvBoI/ysmwkSaOh
      oRaTKUh6WhKSFAKMSCAyPCPBMAhn7bYc2XcT2CsG0khwcIAcN/J/Z+RHjgSJ2bGdfKLIy7Bm
      YjBkoTdoJ6CZCGoKit6BoXWPfM+CNNI/JEsSefEJ5MUnfGCrwWCQd95+m289+CDF7iRePHKY
      Jo8Hm8nE5yqryHA6+dqyFeS6XDx/uJbBUIgh+Wa8shOX8cr4mtnuBNtN49Z/Q0ER95bN5PnD
      NeP2wT1l5dxSNIOwprP1RPOEZhm1KAr/76ZbyYyLwzC+Ac4vg9Yt5gKKVtEwf84p0VCXKzUX
      kM/nIxwOk5AQOUF5PB76+vrIz88nHA7j8XhISUkZTTMZDAYpKCjAarXS0NCAqqpkZWWNrqOt
      rW1c/uHe3l7a2tpIT09H0zRSUyOpBzs7Ozl58iRer5fa2lo+9alP4fV6aWpqIikpCYCUlEjq
      wePHj2JSJFJS3EiEMJsVdC2I2SwDI014RgAIgz4Y+b/hB2Mo0hRoDI289kfujvTBkbuk4UiT
      m+4d+b4x5gcid2HnPr3pBgQ1BUOyEWOOGXMnEhsJHLJ75I7DjSQnguxE12NprhukrrqXI41d
      fObrX8DutPPU++/z9J5qfKEwIFHsdvPdNTcyPz2DsKYR0jRizGYgBIHXMIJbAQPDtJia6kL2
      ba5HMSlcd8s8iiryMaRIUpuNx46ytbkZgGU5uaybUYLNZCKoqnzrb5t59tCB0eYiRZLO2nS0
      rngGP7p5HaYxIyQN3y9FAIhW0XDSPCUa6jKdJoM7nz179tDa2orT6WTnzp3cd999FBUVTfj7
      qqpeeCfw+Yw0mUUCxkgQ0T0jQcMHhh9N8/B2w146B3twmkO4bcPEmsK47WZy4kwjgcg30h90
      /v62UMhg174Aixc60GUHJ7wSfUErnpCN/qCNgZAV5GQ+uWAliilzpHnLAXLkX0mKJRzSePqr
      v+eFn7x6esUuK7O/fxt9yWZsJhM3FRZza/GM008Cj6EbBvs7O6juaMdmMnFdZha/P7CPv9TW
      EFBVLIrCmvxCvr16LQn2MSPdjDB69zIRAKJVNJw0T4mGukRTANA0jdbWVkKhEElJScTHx1/Q
      bKFXJABMgGEYNA94+N7WLbzX2oqBwdzUZL65cgVFCU4idyPB03ckxiDovWAMY+i9oPfx1u9e
      RZZ8uJJUzLYw2w94+Lv7HEg2CVkxUCQDRY78+0HyyB2GNTICTIpl2G+l+q1OPCeht8tM30kL
      DbNz6UhNons4Fp9qxsDER2bO5RsrbkCaQGe5puu0eAfo9PlIjokhxxWP+Yy80obWjdGzUgSA
      aBUNJ81ToqEu0RQALtVkBYBTDMPAFwqhG8aE01sC+DxD3JP0yOi0FIZhECKA3W7H96UiLAVm
      4sxBXJYgLmuQeEuQFNsQa/MSKEmUI3cX+sBIYBn59zyCmkLPsJ2BsJXSlHIUJRGUDCQlBeQU
      kBNHflyRJqqzCKgqu9vbaB/0kumMY2FGJlZFR+9eMvU6gQVBEK4kSZIuKsm8GlIZe72so9FH
      D2mBHHxNOoPJcZw5vEeWJOYV34uckAuGhkF45A4jDIafX3/95zTu20VCkoo7XUW5Po7EtDCJ
      1gAZMT5iTCouSxC3bRhC20YfShr3LK9kBSwYcgzIGZGAYMpBklMIGMn8cOcxNjZ68asSqmGm
      Ii2PH9x4C6kxnxABQBAEYSJcyXHklWfTVNMCgIxCIslIQNGxEI1LbQyExz9TsyI3j0VZ2ZEX
      koKEMmZEmRt3zjL+9GQkBachQaevBH/56RFHNiWM2zaM0xziHxeUcmthImgdGHovw8EmDnUe
      xWXxk2zzk2DtB60t8sVgJEhYga/PhH8pl+gL2DgZtNMzHENf15ukpBSLACAIgjARkiTx2I8f
      5jsP/BjvyUF0dDz0UuCawf/42gM4F+fwox3vcqT3JGZZ4ZbiYh5bWDVu5M2ZbnhwJTtfqWb3
      6/uRDIg91I+/NH50uoqAZqZtyIxFUSjNuB3JPtLMYxj88dhuvr9tM4qkY5Z1bIpKeqyPVJuf
      rywuJMXu561j28iOHSTZ5sduUsmOHaTU1YcktcLQZtEHEK2iod38lGioi+gDOG2y+wAuhWEY
      NOxv4qWfvU5bYwemDPj7xz5O2aIZSJI02r9gVpRI8pYJGBrw8/IvNnFgcw2SzUTbHdls8bSP
      fm5VFP5l2QoemjtvtL9C03Ue2fA82040n3WdX1++krUFhaz+za+BSN7geEuQOEuQFLufFLuf
      f1teIu4ABEEQJkqSJIoq8vnif36GYCDI7urdlC8uGff5hfYvxLpiuP+f7+Aj/zOSXF4HdrSe
      YFdrG1aTwtqCIma43eM6qw045wNgumGQ5nCQ5nDQ6fOhGgong3bMss51yR2UxPcToySJACAI
      gnChJElCN3Tq6+tZtmzZZVnfqRO8DCzPyWN5Tt6HLq9IElWZWWw/y2ylErA4KxurYuKfrlvM
      Nze/harrFDgHeHr5RnIc3khfdaBRBABBEISLcSEpIS83SZJ4uGI+77e18u6YIGCSZT69oJLZ
      qWkAfHTWbJJiY/j13j08VvQ6uU7v+PWIPoDoFA3t5qdEQ11EH8Bp07kPYCy/38+zzz7LI488
      Mmll8AYDbDhSx662VmwmEzcXFbM8J+8DD35pmhdO3oB0xlT54kwpCIJwEcxmM4sWLZrUMsRZ
      bTw4p4IH51ScczlZkiMT5p35/pUqmCAIQjRTVZWamprzLzgFSHIsWK77wPsiAAiCIFwESZJw
      OByTXYwJkpCcXwbTjHHviiYgQRCEiyDLMm63e7KLMWGSKQsSfwfDL2OoR0GOFwFAEAThYqiq
      yqFDh6isrJzsokyQhCQnQOyDY7NdC4IgCBdqMoeBXi4iAAiCIFyEYDDIpk2bJrsYl0QEAEEQ
      hItgNpuZP3/+ZBfjkogAIAiCcBE0TaOpqWmyi3FJRAAQBEG4SPI5pnqeDsQoIEEQhIugKArZ
      2dmjr3t6etA0jbS0tNH3Dh8+TFZWFk6n87JtNxwO8+abb2K1Wlm0aBExMTGEQiF27NiBqqqj
      ZausrDzvFCrTJgCoQR/79uxjWNWJT8tnVnH2WR5sFgRBuDrC4TB79+6loiIyDUN7ezuBQGBc
      ALDZbJf9LqG5uRmHw8Hy5ctH3wsGg3R0dPDRj350wjmOYZoEAMMw2PPu29gLFjM/O4H3336Z
      o84EStKmy1N4giBEm4kMAw2FQkiShKZp1NTU4HQ6OX78OGlpaZSVlWEYBo2NjZw4cYLc3FwK
      CgpGT+CGYdDV1cXhw4dxOBxUVFQQCoXYvn07wWAQVVWpqqo65wSDuq7T1NREU1MTsbGx5OTk
      kJiYSEtLC4WFhdOlD0CntWeYGTnJyIqJWbNncLS2YbILJQjCNWwiw0Bra2vx+/3ous7WrVsJ
      h8OsXLmS2tpaPB4PBw4coKWlhRUrVnDkyJFxncqdnZ1s376dpUuXkpqaysaNG4mJiWHevHnM
      nj2bVatWjTv59/X1sWfPHqqrqzl48ODoHUpzczMrV67EZrNRW1tLMBikrq4OmC6dwEaAkGHD
      MlJak8NFeGhgcsskCMI1zWQyMXv27AkvHxcXR0FBAYqiEBcXh6Zp1NXVkZubi8fjoaCgYNzk
      ckeOHGHu3LlYLBZycnIIBoMMDw9/6PodDgf5+fkUFBSQk5ODLMvU19dTVVWFoihnnbdoWjQB
      IZlRJBUdUABDDSKbpvdc4oIgTG+6rtPT03NJ65BlmY6ODgYHBwFYsGDB6Gdms5lQKDT6WlXV
      c/YnWCwWEhISRpuQdF0/b3/A9LgDwIzLpnFyMLIzuo43k5ybfZ7vCIIgXDmGYeD3+8e919/f
      T1tbG+3t7Wiadt51zJ8/H4/Hg9vtRlEUhoaGRj+bNWsWhw4doqmpiffee4+srKxzJtEZHh6m
      vb2dtrY2Ojo60DSNkpIStmzZQktLy2izj8Viwev10tLSMn0ygg10HufdvUdxOe14AxKrVy3D
      qnwwuomMYBHRkEXrlGioi8gIdlq0ZAQLh8PU19dTXl4OgM/no6WlBRhJHl9UhMfjweVyoSgK
      PT09pKSkIEkS/f39OBwOTCYT/f39dHV14XQ6ycjIGHeV7/f7aWlpISYmhqysLCRJYmhoCE3T
      iIuLG11O0zSOHz9OOBwGIncWeXl5WCwWOjo68Pl8hMNhOjs7WbNmDR6Ph87OzukTAMBA13V0
      3UBWFOQPubURASAiGk6ap0RDXUQAOC1aAsBUSAl5IRoaGmhqamLNmjWj702jM6WELCtM8wfv
      BEGIEtNtNtCsrCySk5PHvTeNAsDETaTt7VoQTfshWuoSLfW4FLquYxjGtN8XwWCQvXv3kp6e
      PtlFmRCTyYTJZBq336dRE9DZaZo22u51ynSfn0MQBOFqmPYB4EzhcBhJkq5qP4CqqhiGgdls
      vmzr1HWdcDh80e2kF7MfLnSbE613IBDAZrNd9Hom43d6JQSDQcxm81W9QAmFQphMpsu6zVPz
      zVzK7+N8x8TZhEIhFEVBUZTLsuxEjvfzrWcyfqeX0/T+i5oiZFnmcsdRSZImdKBP5jYnWu/z
      rfNK7D8h4kqcmC5krpnLSVGUCW9bluXzLjuR4/1CtjkdiQBwGVypP7KrfcV7oducaL3Pd4cw
      Xa+epoMrcQxd7QuTi9nuROo9keN9sup6tUTdX140R+sLFU37IhrqEg11uFyiZV9IkjSt6xJ1
      fQCCIAjCxETdHYAgCIIwMSIACIIgXKNEABAEQbhGRfEoIAPDMNB1A0mSkWTpAykkI5/rRKaZ
      kMZk4onMOXTm+1OHgaEb6IaBNDLcbWJ1M9A0/fRCkoQyxUbgnHpK9FzD+AxDxzAi9ZqKDMMY
      KeOHD0ec+sfY5TF6HEoSsiRzZjVP74cISZY/dJ6vqSbyezamdUdw1AYAdXiAN978G874RAa8
      PhatXE2SwzJmCZ263ds44dWxGiFsKYVUzS7E23OC6oPHsNhsBIcGcGSUUjUrf9LqcTbBwZO8
      ufk9XPHx9Hv9rFizFpdt7HA1nYM7NtMZUDBrw8RllTG/NBdJPclv/us1SmcVAhCfmkN5Ydbk
      VOIsvJ3H2LyrHndCLN6AxKrrl2IznQ5QhqHRcbyOTa+/TtK821i3aMYklvbDtR/bx95jJ4mz
      K4TMCaxeUjHupObpamJPTQNWq53A0ADOzDIqy/M+cHKc9nSV6nffYUCzQmiIpPy5zCnOGHex
      0npwO+82+clJcoAkkV8yh/TEqT/xXzjgY/+ud3ltZz2ff+zTxMdazv+lKShqA8CR3VtJn72C
      eXnxDHXWsWnnQe5aczrZQmigk0MdIe69fS2SEea1F1/CU5yDYo5lyYrrsZllDHWQP/7lnSkX
      AA7t2k7+/FWUZ8Yx2HqAd3Ye5o6Vs0Y/D/Se4KjHzD23LEfSg2x44RXKirMx9XaTPPM6liwp
      mcTSfwhDZeu7+1h2650k2s0c2/MO++s7qSrLGF0k4Ovi/X0tLKgop2nySnpu+jA7qhtZd9/d
      2BV477UXON4/k8LE0ycIxeKMHGMmBT00yF9efJv5ZXmYoiwAeHsaaRuO444bqzDUAC+9uJGi
      vDuJNZ8O6r1eH5WLllOYMvVP+mM1HNyF35ZOQeqlJYSZbFPr/v8yamrzUZgbD0BsWi6B7hbG
      jnft72nFnZaPLIEkm8l0WWgfCBCX4MZmlgGDxkN7sSamTkr5z6Wt209ORmQucGdWIf72xnF1
      6+loJi27MFI3xUp6jEHnkEp3ZwcBXx+1hw/T0dPPVBoArAeH8MsxuGyRh8bSMnPo6mgdt4zd
      mcFd99xMsmvqTqmsDXShx2dgN8kgyRTlp9LY1DluGWeCG5tJAUOnsWYv5vh0pmhr1iXpbWkj
      NS8XCZBNVhJsEp6h4LhlTnZ30dXaTN2RegaGApNT0ItQWrmKFZXlWE3T+xQ6vUt/DmEDzKN/
      VGYUQoyde1ANB1Esp6/KLFaZYCCyRDjgY+vGv1LnsbFu1cKrVuaJUg3GXC1akQkypmWfcCiI
      eUzdrFaJQMAgtWwJqxfOICXJTceR3bz9fu3VLPY56boW6c8YeW0ym1HPmORvOlDDIUym008+
      W202gsHgB5YLB3xsfm0D9QN2blm5ICoDQCikYracapqUsCoyAX38DKCLb7iLktxU4p1W3tv0
      Mkc7B69+Qa9hURsA4qwyg6GRS1zVh6o4x7V3xTjiCYwmljfw+lRcTjN6aJAN69fjLK7i1pWV
      2MxT71Fwh0XGHz5VtwE0k4uxpXTExTM0eLpuAz6deIeM2RqD2+0mKTmF+UuX0tlQd7WL/qEU
      sxU0FX3ktmTYP4g9xjnJpbpwFkcc4SHf6GuPx4Mr3jVuGS0wwIb160ksWczNU/QYuxyc8Q6G
      BkaSmBs6g2EVp3l8W3ms04Xb7SYtI4fVy2azb9/UOSavBVEbAErLc9i3pw5N12mqPUjGjDIA
      fINewpqOKyUXX8cxBoMqIb+H9iGJjDg7R3dvJXnOauYWZUzZnv3ionQOHmpE1zWO7dtL7szZ
      YBgMer2omkFSZhF9zbUMhVQC3h56cZBsN9He0oR3aBjDMPB0tmGPTz7/xq4SyWQn26lztL0f
      XdeoO9xIYVEuGBoDA4NModaqc5LsySQaPbT2+dHCfg40DDCzIAlDDzPg9WFgcKR6O6kVq5ld
      kBZ9Hb9jJGUX0t1YQ1DVGPZ2M6g7SIg1Ew74GRoOASrHG44TCKnoukpTYwvp2RnnXa9w+UTt
      VBCGrlFfs5eu/mHMTjcL5pRiVmR2bHmdgorrSXVZGextY19NQ6StdtY80hNiObTjLTqCJmxK
      JDZK9gSWLZx1nq1dXYYW5vDBvfR6A1hdqSycMwMZgy1vv8GcRatJiLXg6Wrm4JFmkEyUzJlH
      isuOr6+TmrpjhDQDyWRjTkUFcfbLN4X1pdLDfvZU72U4rBGfls/MomxkbZBXX9/N2nWrGO5u
      5sCRE4SGPHg1K0nxLmZXzJtyIzBCQ31U76shrEFGQRmFmUkYgR5e23qMm25cRO2Od+gMKKMj
      nEyxiVxXUY4She1Afe2NHDrWCrKZWRXzSXRYaa/fQ1s4hcryTNoa62hq70XXdeyuNObNmcFZ
      Un1PLYbOkYPVdA8E6OnqIiE5BZc7nYqZxdOuKS9qA4AgCIJwblHbBCQIgiCcmwgAgiAI1ygR
      AARBEK5RIgAIgiBco0QAEARBuEaJACAIgnCNEgFAEAThGiUCgCAIwjVKBABBEIRrkK7rIgAI
      giBci072eaI3IYwgCFOProXp7uxgKKDiiHeTkhiHJOm0Hm8ioBnIJjMpqek47JH5nYa9fbR3
      92EAVruT9LRkTMr461Y1OERLWydxSem44yK5IrqPVbP1uM69N1RS/c6LaOmVXFeafkllH/b2
      4Q2bSHVHcnH4+nsY1MykJ8Vf1Pr6utvo8w6DJBEbl0hqUvw502G2t57AnZqF1Syj62FaWzpI
      y8zCcpE5CcJhFeXxxx9//KK+LQiCcAFUfx9Pff8Jnn/zfRrrD/Pmqy8SV7yUbLfOFz7xADXt
      Hmr3bOfZ9RvJnrWA9IRY9r3xO772w9/S193O5tdfZFvDEKurZo2bqbdu23q+9viTHPbYWVM1
      E0mC1oObee69Hm5ZPpd3nv8V3bZiKgovLbnTgY2/4Tc7u1ldGZlZuGHPFnY0+ZlddHFpVX//
      gy/x2zcO0X68jhf/8iw9cirzS7I/dPmvffERSpfchtthQQ16+fMz6ymYW0Gs5cKv4w3DYNOW
      HeIOQBCEq8DQefV3P6HNsZCffuP+SNuzoaFqEjAM9gQ+/U9fYUZaLA07N/C/vvsjnn7q2wAU
      LlzDN7/6EJq/h3/8+89S9/DHKDuVYsFQ2bZlBx//wpd5+Znn8IXuIc76YfkVDLqb63hhwysM
      Gg5uu+c+SrOTUENDbHvjZXYcbKRwwWruv3EB1ZvfYPP7+9HNcdx6z/2ky108+8pW6v0xfKe/
      jpvuf5SkWDuxmg0AX28bf33+eVr6w6xedy+V5bn0NO7hjd3tpJg97D3Wxdo7H2BByficyGvu
      fZSH1pbSe2wnn378DzxwxxLCXcfZsOFlWk/6yJu9hPvWLWHzc7+hsbWPX/77k+QWzeLhj63D
      5rJhlRUwNA7seJPX/7aH+Owy7rnzFtwO6wdqr+s6Pb39hEJhdu45wOZ3d4k+AEEQrjxDC7F9
      5xHW3b4KJeDhxRfW8+fn1tPY4xu3nCRJ5M9bTeJQEy0D/nGfaZqKjomx+XNC/j6qm4ZZMm82
      +bYB9jZ7PrQMIV8X33nie6TPXs7Kigz+z/9+gtaBEG//6Sle2NXJHXfdRaIdIEhXb5gb1t1N
      VXEc//eHP8OakM3yheXklC3gI/fdR1F6HD1NNVQfbkYPD/Hv332CQGIZt6+t4lc/eJx9zb14
      uxp58aVXMaWUsqTExVM/f4aQfvayqWoYs9mKDPR3tZFWVsU9d97C/lf+k7cPnaRi2Q2kuZ3c
      eNvd3LpmCSYjxJYt7xAIa5zY9yY//t2brLr1Tly+w3z7p8+cNX9GW0c3P/nF73nyqf9m87u7
      0XVD3AEIgnDlGYZBMKhjt5pAlol1xLD5D0+jZiykJGN804wsm4mxmghrkbNl/fub+Nd/bcDb
      103uTQ9QOCZ/fEfNu0iZ80mKj2dxVSmbt+xk5Yxbz1qGk0d3MZRWxS3XV2GWYMFrr7K3vo3N
      f9vFI9/8BTNzEpgJYGjkZjp4ZcOf8QwM0NLhRbY4yEh149RTmTGjeNx6hzzN1PXF8oXbVxNj
      kbl72Sa27KrjtkxIL57PmmUL8Z7QMF7diH7GmXnTn3/OsS2xdHb08NBj/4wNSMrMY/v7f2Xb
      iW46+7ycaO3m5jlzibGbyckvJD/NQdg/MLqO97ZsYvGdD7FwTjlzsx389bPfwsMnSTij/lkZ
      qdy9bg1/WP8qYVXFMEQAEAThKpBNZkqLEqne18jC2xay9sYbqXvnubMu6zt5nLaQlTSHnRYg
      u6ySRx+9G6vdSXJSwpj2f4NtW/7G8f3NPPrwe4T8HoZjPAw+csvZy6Ao6KqKgQGGQVjVMSky
      ZkUmrJ7OVexp3ssPfvlXPv/FzxOnD1D35NMAKIqMceYZHJAkGQx99OQeDquYTBNL81m5+k4y
      Pdvo1kpZOqcQgGd+9j2CBbfxyD/czqbf948uq8gKZ8veopgUtJH82bquYUjyWZt2JEliwZxy
      9uw/zP6aOhEABEG4SiQTd378Yb7yxI+wDn+MGekOGtr7qTx1MlcD7K9+n3arn5ee+ws3PPBZ
      UpwWWgCbM57c3NwPrFIf7mHHwV5++t9/osRtAc3Hlz75KLXNfZxtXI67uIrkgWd5Zv1GUox2
      9g/E83fFGThvXMHTT/0Hw3dfT5cnxA2zXBiGgbevi0OHdjMYinw/Iy+Xw8++xFuzUygpmzu6
      3tj4XBZkafzHb//Mwhwr63d08JXvlUFz63l3S3xSOvd99GuoP32Cx3/wc/7tq5/D0HV0NUj9
      oT0cOtbOrHmRZXMSYtnw8iusWjiLmTNOdzwvXXMbX33yV+TF+mjc+Qr5i1bjOsu2DMNgZ/VB
      evv6uf2mVbzyxmYxCkgQhKvDkZTJ9UsX0N5QR3NHL5U33MfaytLIMMZQgJN9vQz4dW69/2Fu
      XFyOIkmAgdOdTnHuB4dwDg/2EXZmsbSiOHLFK1tITYxBdqSQnujE7kqhODcNgNSsAjJTk1i0
      uJLWowfp1+L4zGP/QLrLTtaMCvLiDfbX1pNRWE5Z2Szyk0zUHGtn4fLV5Ka5mVlWQlxKPnnx
      BocbWsguKifRYcWZlElBVhoVVYvxdxyjqXuYT3zqc5RmJgIQ40qmOC8dA1CsTkpn5I9LeZme
      V0K620n5gkXI/SfwmxNZtXIprUdrMCXmsXThTDJzNN4XWwAAAHZJREFUi8hwO5hZUUH38aMM
      ajZKinIxKQqlpWUkpuYyrziNgwcOkVyyhEc+cuNZh4bWN57g/T0HePiBu5hVWkSCK06khBQE
      QbgW1Dc2k52Rhs0WGSFkGIYIAIIgCNcqMQxUEAThGiUCgCAIwjVKBABBEIRr1P8HlGwLl/vT
      Y9wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Lost Life Expectancy versus Public Expenditure' width='384'>
      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
      qVaSlGmO6EAolBK3PzOXJ294EYf1cLGj0Wzgl8/NPWH/v93npczagj8UJCcuHvMZ1nwWRZF+
      /fqFM56cThISErBYLKSnp2OxWKK0w4/U7r7//vtxOp0sXryYZcuWMWPGDACWLFnSwwbaVVQV
      13Jj4T0x1aUkpcSCutcxJhi69ZztzIVarZbHV3/PG9u2dNhHFAQyjEaqbLH55u8dN4G7Ro/t
      1utqR8AfpL6sgbqyBg7tqqDoh4PUlTVQtqeyQ2BWo1djTk8gPS+VnIGZ9B/dl/TeKeQOzD6q
      D/h44HZ4eGLOC6z/fHPUee/5+61Mv2Fyt5yjM7hcLmw2G1qtlri4OMrLy9FqtaSkpFBXVxfZ
      XlFRwaFDh+jbty9ut5u8vDxaWlrw+XwkJydTWlpKbm5uVMrg2s82Me+yp2KeNzk7kdd2Ptdl
      IXaAlkYb3320FrfdTd7QXEZOHxpVCAhQ1NTI2opwLciEnFz6JnbNRWSz2Hn0sqfYvSY62Csp
      RH7xzFwuu2dml6/zeCDLMkWbSljyr6XUlzeSlpvCxb+YTsHIvKhBuytsoLIss7W2hkdWLmd/
      UyMykGYwcP+ESVzar/C0G4FHHnmEtLQ04uLisNls+P1+7rrrLioqKnj//ffJysqipKSEm2++
      mZycHD777DNKSkro27cvgwYNYsmSJZhMJioqKrj88sspLCzk3Xff5dNPP+0xAF1F5f5qbhrw
      65htkkLi49rXup1rpv1lVarVXLvwY7bUxqBEPgZ+PXY894wZ163X1RlkWSYUDOH3BqgpqWPf
      xgPUHKylbHcllcU1WOta8TgP+3FFSUSpDhey5Q7MpndbbCEjPx1jgh6T2XjcM1O/z8+WpTvZ
      u64ItU7N6Jkj6DMk55RTDRyLDvpkUFlUw11jHoxJ9z1y+lCe+Pr3XT5v8eYSHr38aZqqLEDY
      BTRs6iAe+uDXxCebCIRCvLZlE89vWIe/fRYpSdw7bgI3Dx8ZiSl1Bnuzg+vz78IZg3YkLsnI
      RzWvnVICPFmWkUMyghhbQa8rBqDR6WTW++/Q5I6mHtEoFLxxyWWMyz45PYTjhc/ni2SHtdcj
      iKIYjm8EAvj9fgKBAAaDIbLd6/UiCAIqlSrSrlAoUCqVCIJAMBgMbzutd/JfjOTsxE79jPnD
      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
    </thumbnail>
    <thumbnail height='384' name='Maternal Mortality Monitor' width='384'>
      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
      7DosB3A/Jf8PSyRSQCPHKOoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Nation Selection' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Population and GDP Distribution over Life Expectancy' width='384'>
      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
      pQAQEbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIK
      ABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQ
      EbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIKABERS/mHuwCvZehsaeLg0Wr8yVlMmzIB
      v+sAhsbqI9Q0dTJx6lQyU0LDXVARkVFtxNUAGo7sYeueKsomTiY72MnjTz2PZwyHX97Ay1Ud
      TJpQxPqnnqCpMz7cRRURGdVGXADklkxj2ZL5ZGekUzxhGuHG40SBXQeqWbSwkoysfBbNLmHb
      riPDXVQRkVFtxDUB+QM9RYp1t7Nh1Z8YN3cRIROmOxEiNdCTV6kFhXTuPQ5MwfM84vEztQHP
      84hEIsNR9GFjjCGRSAx3MYaUMQaAWCw2zCUZWp7n0dXVNdzFGFLGGOLxuFX7de/2ffaxbTCM
      uAAwxtB24hhPPL2BykUrqJw4DkwYcM76lAPm9L8cB5/Pd840kpKShqy8I0E4HCYQCLxmPYxl
      sVgMYwzBYHC4izKkurq6SE5OxnGcP//hMSISieDz+fD7R9zhatDEYjE8zyMUGtxrnSNujYZb
      qvnj4xu49d3vIiu5p3iGJFL8EbpiHmkBl84TDaQUFACvDYDe5BQRkTc34q4B7H/pRWYsXkGy
      myASiRCN9lTxZ00pYfO2vXS1n+SFHceZP2viMJdURGR0c8wIO2WuP/YKxxtO9f0dSMpgVuV0
      gq6hsfowxxvamTx9Blmpr181isfjVlUVQU1ANlETkB2GqgloxAVAfykA7KAAUACMZUMVACOu
      CUhERIaGAkBExFIKABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIK
      ABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQ
      EbGUAkBExFIKABERSykAREQspQAQEbGUAkBExFIKABERSykAREQspQAQEbGUAkBExEKeZxQA
      IiI2evGplxQAIiK2iYaj/NcHvqsAEBGxTSLu0XGqQwEgImIrBYCIiGWMZwAFgIiIdU7UNGN0
      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
    </thumbnail>
    <thumbnail height='328' name='Public Share Healthcare Expenditure Monitor' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Realtime Monitor' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3Rcxdm4n3t3tU1t1btkFVuWe+8VY2MwJkBCSSCEEgIpfPmR3kj4CPCF
      JECKIYAJEAgYbOOGCy5yl23JclW1qtV72aLte+/vD1lrC7nIFNuy7nPOnrM7OzP3nbkz8059
      R5BlWUZBQUFBYdAhXm0BFBQUFBSuDooCUFBQUBikKApAQUFBYZCiKAAFBQWFQYqiABQUFBQG
      KYoCUFBQUBikKApAQUFBYZCiKAAFBQWFQYqiABQUFBQGKYoCUFBQUBikKApAQUFBYZCievrp
      p5++nABer5eysjIOHDhAYWEh7e3tBAQEoNPpEASB3bt3s2vXLsaNG4cgCBeN6+jRo6xcuZIp
      U6Zc0u9naW9v569//SujRo3CYDD0+q+8vJzdu3dTVFREUVERDQ0NBAYG9vF3PtxuN//85z8Z
      MWIEWq22z/9Wq5U///nPpKamEhQURFVVFXv27CExMRE/P79+yd7Y2MiOHTtITk5GrVb73Pfv
      309nZydRUVH9iudCHD58mDVr1jB16tQL+pEkiWXLlqFWq4mNjb1ofHa7nY0bNxIeHo6/v7/P
      PS8vj5KSEpKSkr6QvNcaOTk5lJaWkpSUdNnl0mw2k5uby5EjR6itrcVoNPrKnSzLNDc3s2/f
      PoqKitBqtQQHB/d6hizLdHZ2snfvXqKionxl0Gq1snnzZgoLC33luucTFhbW670oKPSXyxoB
      2Gw2Xn/9df72t79RWFhIdXU1n3zyCa+++iperxfoLqjt7e39is9ut9Pa2nr5UgMej4fGxkbf
      c8+lurqanTt3Ul1dTW1tLTt27OD555+ntLT0kvHKskxLS8t544XuhrOpqQmPxwN050ldXZ3v
      d39oaWlh27ZtuN3uXu6HDx+mqKio3/FcCJvN1itf29ra+M1vfkNLS0svf62trdhstkvG53A4
      2Lp1a5/3WlxcTE5OTr9kstvtPP3005SUlPTL/xfl4MGDvPTSS5f1Xnpoa2ujubmZy7WTWFhY
      yDPPPMOGDRuorq5m165d/OlPf6K+vh6A06dP88ILL5CdnU1hYSF//etfyc3N9YW3Wq1s2LCB
      Z555hnXr1mG1Wn3/eTweamtre33y8/PZvn07DofjstOooACgvrSXbmRZZv369VRWVvLzn/+c
      IUOGAN0jgrq6OkTxwrpEkiQ8Hg+CIKBWq/v0qmRZxuVy9flflmUkSfI1xn5+fv3ukQUEBPD9
      738fjUaD2+3mlVdeYevWraSlpeH1epFl2ddj75Hvsz14t9vt83eh56anp5OamtorrCzLeDwe
      ZFlGrVZfNG8uhcfjQZIkVCoVoij2ypueZ1woX3vS5nQ6MZvNOJ1OXC4Xoij2kulS7+dyOF9c
      kiThcrmwWCzY7XafDGq1GlmW8Xq9SJLUK4wsy7jdbtRqNZIkIUlSn7w8N+y5+ePxeLDb7Vgs
      FlwuV6+w/cm3hQsX+v4/V46e9yGKIiqVqk84k8nE0qVLmTFjBmq1GofDwQsvvEBubi5Lly5l
      3bp1JCcn8/jjj6NSqVizZg1r165l9OjR6HQ6tm3bRmVlJbfddhurV6/uFbfRaORHP/pRr3z+
      97//TXBwMHFxcZ/7fSl8MWorTlHfZkYlSLiEAKZNGE72vj2oA4KxWt3Mmj0Vl6WNfbszsemS
      uGPRNLo6Wyg9XQdAecEJJiz6BskRV2cE128F0NXVRW5uLkuWLCE5OflsBGr1BacAZFmmtraW
      Dz/8kIqKCjQaDTNnzuT2229Ho9EA4HQ6effddzly5AgqlYpFixZx8803I4oie/bsYceOHbS2
      tiKKImPGjOHb3/72ZQ13BUFAo9GQkZFBTk4OXq+XTz75hJqaGv7nf/4HgMrKSl588UX+7//+
      D71eD8Ann3zC0aNHcbvdTJs2jbvvvvu8U0KnTp1i+fLlPPfcc+j1erq6uli9ejW5ubl4PB5G
      jhzJY4891u/poXPz7tixY6xZs4aWlhYiIyO55557GDlyJJIk8d5773Hy5Em6urowGAwsWLCA
      JUuW9GmUCgoKWLZsGQB//OMfAVi0aBF33HEH0N0rPXr0KKdOnUKv1/Pggw8yatSoz6UEampq
      WLFiBRUVFeh0OmbMmMEdd9xBU1MTzz77LLIs8+qrrwIwceJEHn30UQ4ePMiGDRvo6OhAr9cz
      ZcoU7r33XtxuN7/61a8YP348JSUltLa2kpaWxkMPPURYWBher5fMzEy2b9+O2WwmLi6Or3/9
      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
      EEKIHPX/A4vaMUpTHFVuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='66' name='Title Monitor' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Western Biases in GDP' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Western Biases in Health Disparity' width='384'>
      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
      3yj/C6oU+i653JUTAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
